<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>Org-mode scraps</title>
 <link href="http://eschulte.github.com/org-scraps/atom.xml" rel="self"/>
 <link href="http://eschulte.github.com/org-scraps/"/>
 <updated>2012-01-24:07:47:55-07:00</updated>
 <id>http://eschulte.github.com/org-scraps/</id>
 <author>
   <name>Eric Schulte</name>
   <email>eric.schulte@gmx.com</email>
 </author>"
<entry>
   <title>advanced-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-advanced-table.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-advanced-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** advanced table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
   <span class="org-table">| DATA             | WHAT       | WHERE       | HOW MUCH |</span>
   <span class="org-table">|------------------+------------+-------------+----------|</span>
   <span class="org-table">| </span><span class="org-date">[2009-09-25 Fri]</span><span class="org-table"> |            |             |    28.95 |</span>
   <span class="org-table">|------------------+------------+-------------+----------|</span>
   <span class="org-table">|                  | food       | supermarket |     7.85 |</span>
   <span class="org-table">|                  | ticket bus |             |      2.3 |</span>
   <span class="org-table">|                  | tea + ice  | ice uno     |      4.4 |</span>
   <span class="org-table">|                  | ticket     |             |     14.4 |</span>
   <span class="org-table">|------------------+------------+-------------+----------|</span>
   <span class="org-table">| </span><span class="org-date">[2009-09-26 Sat]</span><span class="org-table"> |            |             |       41 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>total 0<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>responding t<span class="starter-kit-paren">)</span> purchases<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">while</span> responding
      <span class="starter-kit-paren">(</span>setq purchases
            <span class="starter-kit-paren">(</span>cons
             <span class="starter-kit-paren">(</span>list <span class="string">""</span>
                   <span class="starter-kit-paren">(</span>read-from-minibuffer <span class="string">"What: "</span><span class="starter-kit-paren">)</span>
                   <span class="starter-kit-paren">(</span>read-from-minibuffer <span class="string">"Where: "</span><span class="starter-kit-paren">)</span>
                   <span class="starter-kit-paren">(</span>read-minibuffer <span class="string">"How Much: "</span><span class="starter-kit-paren">))</span>
             purchases<span class="starter-kit-paren">))</span>
      <span class="starter-kit-paren">(</span>setq responding <span class="starter-kit-paren">(</span>y-or-n-p <span class="string">"more? "</span><span class="starter-kit-paren">)))</span>
    <span class="starter-kit-paren">(</span>append 
     purchases
     <span class="starter-kit-paren">(</span>list
      <span class="starter-kit-paren">(</span>list
       <span class="starter-kit-paren">(</span>format-time-string <span class="string">"%Y-%m-%d"</span> <span class="starter-kit-paren">(</span>current-time<span class="starter-kit-paren">))</span>
       <span class="string">""</span> <span class="string">""</span> <span class="starter-kit-paren">(</span><span class="keyword">progn</span>
               <span class="starter-kit-paren">(</span>mapc <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>purchase<span class="starter-kit-paren">)</span>
                       <span class="starter-kit-paren">(</span>setq total <span class="starter-kit-paren">(</span>+ total <span class="starter-kit-paren">(</span>fourth purchase<span class="starter-kit-paren">))))</span>
                     purchases<span class="starter-kit-paren">)</span>
               total<span class="starter-kit-paren">)))))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-table">| ""           | "fish and chips" | "diner"  |  9.78 |</span>
<span class="org-table">| ""           | "food"           | "subway" |  5.45 |</span>
<span class="org-table">| "2009-09-29" | ""               | ""       | 15.23 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>and-then-more</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-and-then-more.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-and-then-more.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** and then more</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
and more stuffs here
   </pre>
</content>
</entry>
<entry>
   <title>asymptote-cosine</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-asymptote-cosine.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-asymptote-cosine.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** asymptote cosine</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src asymptote :exports code
</span>  import graph;
  
  size(0,4cm);
  
  real f(real t) {return cos(t);}
  
  path g=polargraph(f,0,2pi,operator ..)--cycle;
  filldraw(g,pink);
  
  for(int i=0; i &lt; 8; ++i) {
    real j = 0.125 + 0.125*i;
    real h(real t) {return j;};
    path k=polargraph(h, -(acos(j)), acos(j), operator ..);
    draw(k,blue);
  }
  
  xaxis("$x$",above=true);
  yaxis("$y$",above=true);
  
  dot("$(pi,0)$",(1,0),N);<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>asymptote</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-asymptote.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-asymptote.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** asymptote</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src asymptote :file asymptote-test.png :exports code
</span>  import graph;
  
  size(0,4cm);
  
  real f(real t) {return 1+cos(t);}
  
  path g=polargraph(f,0,2pi,operator ..)--cycle;
  filldraw(g,pink);
  
  xaxis("$x$",above=true);
  yaxis("$y$",above=true);
  
  dot("$(a,0)$",(1,0),N);
  dot("$(2a,0)$",(2,0),N+E);<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-link">[[file:asymptote-test.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>cached-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-cached-results.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-cached-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** cached results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes
</span>   <span class="starter-kit-paren">(</span>setq org-babel-default-header-args '<span class="starter-kit-paren">((</span><span class="builtin">:session</span> . <span class="string">"none"</span><span class="starter-kit-paren">)</span>
                                         <span class="starter-kit-paren">(</span><span class="builtin">:results</span> . <span class="string">"replace"</span><span class="starter-kit-paren">)</span>
                                         <span class="starter-kit-paren">(</span><span class="builtin">:exports</span> . <span class="string">"code"</span><span class="starter-kit-paren">)(</span><span class="builtin">:cache</span><span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[937269632ae5b5eee5c93f9eb50e0bc55e34520d]:
</span><span class="org-table">| (:session . none) | (:results . replace) | (:exports . code) | (:cache) |</span>

<span class="org-meta-line">#+name: eric-schulte
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes
</span>   <span class="starter-kit-paren">(</span>+ 5 7 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[005b04829608b3d22b61686e90309af3a9a6fe7c]: eric-schulte
</span><span class="org-code">: 13
</span>
<span class="org-block-begin-line">#+begin_src ditaa :file caching-example.png
</span>    +--------------------+
    |                    |     +-----------+
    |                    |     |           |
    |                    |     |           |
    |      +----+        |     |           |
    |      |    |        |     +-----------+
    |      +----+        |
    |                    |
    +--------------------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[fd11ddbfd00f6038e6e37db71ddaf43d65b0e200]:
</span><span class="org-link">[[file:caching-example.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>changing-source-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-changing-source-name.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-changing-source-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** changing source name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: emacs-nine
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname: emacs-nine
</span><span class="org-code">: 8
</span>
<span class="org-meta-line">#+resname: emacs-eight
</span><span class="org-code">: 8
</span>
   </pre>
</content>
</entry>
<entry>
   <title>clojure</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-clojure.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-clojure.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** clojure</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src clojure :results silent
</span>  <span class="starter-kit-paren">(</span><span class="builtin">list</span> 8 9<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>code-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-code-results.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-code-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** code results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** emacs lisp</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results code
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">)))</span> '<span class="starter-kit-paren">(</span>1 2 3 4 5<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC emacs-lisp
</span><span class="starter-kit-paren">((</span><span class="keyword">lambda</span>
   <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span>
   <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">))</span>
 <span class="starter-kit-paren">(</span><span class="keyword">lambda</span>
   <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span>
   <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">))</span>
 <span class="starter-kit-paren">(</span><span class="keyword">lambda</span>
   <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span>
   <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">))</span>
 <span class="starter-kit-paren">(</span><span class="keyword">lambda</span>
   <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span>
   <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">))</span>
 <span class="starter-kit-paren">(</span><span class="keyword">lambda</span>
   <span class="starter-kit-paren">(</span>item<span class="starter-kit-paren">)</span>
   <span class="starter-kit-paren">(</span>+ item el<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+END_SRC
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results code
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>* el el<span class="starter-kit-paren">))</span> '<span class="starter-kit-paren">(</span>1 2 3 89<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC emacs-lisp
</span><span class="starter-kit-paren">(</span>1 4 9 7921<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** ruby</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+begin_src ruby :results code
</span>  [1, 2, 33, 4].map{|n| <span class="string">"the number </span><span class="variable-name">#{n}</span><span class="string">"}</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC ruby
</span>  [<span class="string">"the number 1"</span>, <span class="string">"the number 2"</span>, <span class="string">"the number 33"</span>, <span class="string">"the number 4"]</span>
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-block-begin-line">#+begin_src ruby :session :results code 
</span>  [1, 2, 33, 4].map{|n| n + 10 }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC ruby
</span>[11, 12, 43, 14]
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** python</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+begin_src python :results code
</span>  [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three']</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC python
</span>[<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three']</span>
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-block-begin-line">#+begin_src python :results code
</span>  [1, 2, 33, 4]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC python
</span>[1, 2, 33, 4]
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-block-begin-line">#+begin_src python :session :results code 
</span>  [1, 2, 33, 4]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+BEGIN_SRC python
</span>[1, 2, 33, 4]
<span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>dynamic-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-dynamic-table.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-dynamic-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** dynamic table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+TBLNAME: todays-clock
#+BEGIN: clocktable :maxlevel 2 :block today :scope tree1 :link t
</span>Clock summary at <span class="org-date">[2009-09-15 Tue 08:51]</span>, for Tuesday, September 15, 2009.

<span class="org-table">| L | Headline     | Time   |      |</span>
<span class="org-table">|---+--------------+--------+------|</span>
<span class="org-table">|   | </span><span class="org-table"><span class="bold">*Total time*</span></span><span class="org-table"> | </span><span class="org-table"><span class="bold">*1:10*</span></span><span class="org-table"> |      |</span>
<span class="org-table">|---+--------------+--------+------|</span>
<span class="org-table">| 1 | </span><span class="org-link">[[file:/Users/eschulte/Desktop/test.org::top][top]]</span><span class="org-table">          | 1:10   |    1 |</span>
<span class="org-table">| 2 | </span><span class="org-link">[[file:/Users/eschulte/Desktop/test.org::show%20all][show all]]</span><span class="org-table">     |        | 1:00 |</span>
<span class="org-table">| 2 | </span><span class="org-link">[[file:/Users/eschulte/Desktop/test.org::later][later]]</span><span class="org-table">        |        | 0:10 |</span>
<span class="org-meta-line">#+END: clocktable
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=todays-clock(1,1)
</span><span class="starter-kit-paren">(</span>message <span class="string">"table is %S"</span> data<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: table is (("L" "Headline" "Time" "") hline ("" "*Total time*" "*1:10*" "") hline (1 "[[file:/Users/eschulte/Desktop/test.org::top][top]]" "1:10" 1) (2 "[[file:/Users/eschulte/Desktop/test.org::show%20all][show all]]" "" "1:00") (2 "[[file:/Users/eschulte/Desktop/test.org::later][later]]" "" "0:10"))
</span>
<span class="org-block-begin-line">#+begin_src R :session R-pie-example :var times=todays-clock :results silent
</span>pie(times[2:length(times),4], labels = times[2:length(times),2])
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>elisp-references</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-elisp-references.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-elisp-references.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** elisp references</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>   <span class="starter-kit-paren">(</span>setq first 10<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: resolve(name=nil)
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>eval <span class="starter-kit-paren">(</span>intern name<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src python :var a=resolve(name="first")
</span>  <span class="keyword">return </span>a + 10
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>elisp-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-elisp-variables.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-elisp-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** elisp variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ditaa :file (format "%d.png" 45)
</span>      +-----------+
      |           |
      |           |
      |           |
      |           |
      +-----------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:45.png]]</span>
   </pre>
</content>
</entry>
<entry>
   <title>empty-output-results-for-emacs-lisp</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-empty-output-results-for-emacs-lisp.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-empty-output-results-for-emacs-lisp.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** empty </span><span class="org-level-2"><span class="org-code">=output=</span></span><span class="org-level-2"> results for emacs-lisp</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results output
</span>   8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span>
   </pre>
</content>
</entry>
<entry>
   <title>gnuplot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-gnuplot.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-gnuplot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** gnuplot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src gnuplot
</span><span class="keyword">plot</span> <span class="variable-name">cosx
</span><span class="org-block-end-line">#+end_src
</span>

<span class="org-meta-line">#+end_src
</span>      

   </pre>
</content>
</entry>
<entry>
   <title>haskell-and-tables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-haskell-and-tables.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-haskell-and-tables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** haskell and tables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src haskell
</span>  sumListCond <span class="variable-name">::</span> <span class="type">Int</span> <span class="variable-name">-&gt;</span> <span class="type">Int</span> <span class="variable-name">-&gt;</span> [<span class="type">Int</span>] <span class="variable-name">-&gt;</span> <span class="type">Int</span>
  sumListCond l n xs
      <span class="variable-name">|</span> foldl (<span class="variable-name">+</span>) 0 (take l xs) <span class="variable-name">&lt;=</span> n <span class="variable-name">=</span> sumListCond (l <span class="variable-name">+</span> 1) n xs
      <span class="variable-name">|</span> otherwise <span class="variable-name">=</span> foldl (<span class="variable-name">+</span>) 0 (take (l <span class="variable-name">- </span>1) xs)
<span class="org-block-end-line">#+end_src
</span><span class="org-block-begin-line">#+begin_src oz
</span>  <span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>haskell</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-haskell.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-haskell.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** haskell</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src haskell
</span>  powerSet <span class="variable-name">::</span> [a] <span class="variable-name">-&gt;</span> [[a]]
  powerSet <span class="variable-name">=</span> foldr (<span class="variable-name">\</span> x ps <span class="variable-name">-&gt;</span> map (<span class="variable-name">\</span> y <span class="variable-name">-&gt;</span> x <span class="type">:</span> y) ps <span class="variable-name">++</span> ps ) [<span class="type">[]]</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src haskell
</span>  powerSet [1, 2, 3]
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>hiding-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-hiding-results.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-hiding-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** hiding results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list el<span class="starter-kit-paren">))</span> <span class="starter-kit-paren">(</span>number-sequence 0 20<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">|  0 |</span>
<span class="org-table">|  1 |</span>
<span class="org-table">|  2 |</span>
<span class="org-table">|  3 |</span>
<span class="org-table">|  4 |</span>
<span class="org-table">|  5 |</span>
<span class="org-table">|  6 |</span>
<span class="org-table">|  7 |</span>
<span class="org-table">|  8 |</span>
<span class="org-table">|  9 |</span>
<span class="org-table">| 10 |</span>
<span class="org-table">| 11 |</span>
<span class="org-table">| 12 |</span>
<span class="org-table">| 13 |</span>
<span class="org-table">| 14 |</span>
<span class="org-table">| 15 |</span>
<span class="org-table">| 16 |</span>
<span class="org-table">| 17 |</span>
<span class="org-table">| 18 |</span>
<span class="org-table">| 19 |</span>
<span class="org-table">| 20 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>indentation</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-indentation.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-indentation.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indentation</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src python
</span>          9
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>indented</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-indented.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-indented.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indented</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">   #+begin_src emacs-lisp
</span>     <span class="starter-kit-paren">(</span>message <span class="string">"I ran!!"</span><span class="starter-kit-paren">) </span>  
<span class="org-block-end-line">   #+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: I ran!!
</span>
   </pre>
</content>
</entry>
<entry>
   <title>indexing-into-gnuplot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-indexing-into-gnuplot.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-indexing-into-gnuplot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indexing into gnuplot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: squares
</span><span class="org-table">| 1 |  1 |</span>
<span class="org-table">| 2 |  4 |</span>
<span class="org-table">| 3 |  9 |</span>
<span class="org-table">| 4 | 16 |</span>
<span class="org-table">| 5 | 25 |</span>
<span class="org-table">| 6 | 36 |</span>

<span class="org-block-begin-line">#+begin_src gnuplot :var data=squares :results silent
</span><span class="keyword">plot</span> <span class="variable-name">data</span> <span class="type">using</span> 1:2 <span class="type">with</span> <span class="function-name">lines
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+tblname: squares-with-sum
</span><span class="org-table">|  1 |  1 |</span>
<span class="org-table">|  2 |  4 |</span>
<span class="org-table">|  3 |  9 |</span>
<span class="org-table">|  4 | 16 |</span>
<span class="org-table">|  5 | 25 |</span>
<span class="org-table">|  6 | 36 |</span>
<span class="org-table">|----+----|</span>
<span class="org-table">| 21 | 91 |</span>

<span class="org-block-begin-line">#+begin_src gnuplot :var data=squares-with-sum[0:-3] :results silent
</span>  <span class="keyword">plot</span> <span class="variable-name">data</span> <span class="type">using</span> 1:2 <span class="type">with</span> <span class="function-name">lines
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>indexing-into-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-indexing-into-results.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-indexing-into-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indexing into results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: indexable-table
</span><span class="org-table">| eric    |</span>
<span class="org-table">| michael |</span>
<span class="org-table">| schulte |</span>
<span class="org-table">| is      |</span>
<span class="org-table">| my      |</span>
<span class="org-table">| name    |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=indexable-table[2:4]
</span>   data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| schulte |</span>
<span class="org-table">| is      |</span>
<span class="org-table">| my      |</span>

<span class="org-meta-line">#+tblname: multidimensional-indexing
</span><span class="org-table">| 1 |  2 |</span>
<span class="org-table">| 3 |  4 |</span>
<span class="org-table">| 5 |  6 |</span>
<span class="org-table">| 7 |  8 |</span>
<span class="org-table">| 9 | 10 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=multidimensional-indexing[0:-2]
</span>   data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-table">| 1 | 2 |</span>
<span class="org-table">| 3 | 4 |</span>
<span class="org-table">| 5 | 6 |</span>
<span class="org-table">| 7 | 8 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>later</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-later.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-later.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** later</span>
   <span class="org-special-keyword">CLOCK:</span> <span class="org-date">[2009-09-15 Tue 09:41]--[2009-09-15 Tue 09:51]</span> =&gt;  0:10
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
stuff here

   </pre>
</content>
</entry>
<entry>
   <title>latex-pngs</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-latex-pngs.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-latex-pngs.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** latex pngs</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
$x \mapsto y$

<span class="org-level-3">*** Theorem</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>
$|consts(t)| \leq sizes(t)$

- by induction on the structure of t
- base cases are $t \in [true, false, 0]$: 
  - $|consts(t)| = |[t]| = 1 = size(t)$
- inductive size
  - $t \in [succ(t_1), pred(t_1), iszero(t_1)]$:
    - $|consts(t)| = |consts(t_1)| = |[t]| \leq size(t_1) &lt; size(t)$
  - $t = if\, t_1 \, then \, t_2 \, else t_3$
    - $|consts(t)| = |consts(t_1) \cup consts(t_1) \cup consts(t_1)|$
    - $\leq |consts(t_1)| + |consts(t_1)| + |consts(t_1)|$
    - $\leq size(t_1) + size(t_1) + size(t_1)$
    - $&lt; size(t)$

   </pre>
</content>
</entry>
<entry>
   <title>lua-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-lua-export.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-lua-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lua export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: determine the neighbors of the segments that the bisector hits
</span><span class="org-block-begin-line">#+begin_src lua :tangle no :exports code
</span>  local s1, s2 = intersecting_segs[1], intersecting_segs[2]
  local n1 = table_find_segment(cell.neighbors, s1)
  local n2 = table_find_segment(cell.neighbors, s2)<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
I got:
<span class="org-block-begin-line">#+begin_example
</span><span class="org-block">\lstset{language=lua}
\begin{lstlisting}
local s1, s2 = intersecting_segs[1], intersecting_segs[2]
local n1 = table_find_segment(cell.neighbors, s1)
local n2 = table_find_segment(cell.neighbors, s2)
\end{lstlisting}
</span><span class="org-block-end-line">#+end_example
</span>
Emacs -Q got:
<span class="org-block-begin-line">#+begin_example
</span><span class="org-block">\begin{verbatim}
local s1, s2 = intersecting_segs[1], intersecting_segs[2]
local n1 = table_find_segment(cell.neighbors, s1)
local n2 = table_find_segment(cell.neighbors, s2)
\end{verbatim}
</span><span class="org-block-end-line">#+end_example
</span>
Emacs -Q + Org-babel got:
<span class="org-block-begin-line">#+begin_example
</span><span class="org-block">\begin{verbatim}
local s1, s2 = intersecting_segs[1], intersecting_segs[2]
local n1 = table_find_segment(cell.neighbors, s1)
local n2 = table_find_segment(cell.neighbors, s2)
\end{verbatim}
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>multiple-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-multiple-arguments.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-multiple-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** multiple arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2009-11-20
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var first=9 :var second=10
</span>  <span class="starter-kit-paren">(</span>+ first second<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: 19
</span>
   </pre>
</content>
</entry>
<entry>
   <title>noweb-referernces</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-noweb-referernces.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-noweb-referernces.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** noweb referernces</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: noweb-example
</span><span class="org-block-begin-line">#+begin_src ruby 
</span>  a = 28
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ruby :noweb
</span>  <span class="comment-delimiter"># </span><span class="comment">&lt;&lt;noweb-example&gt;&gt;
 </span> a + 4
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: 32
</span>
   </pre>
</content>
</entry>
<entry>
   <title>persistent-python</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-persistent-python.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-persistent-python.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** persistent python</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :session :results silent
</span>  <span class="keyword">import </span>types
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src python :session
</span>  types.FunctionType
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: function
</span>
<span class="org-level-3">*** more persistent python</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:session:</span>  <span class="org-property-value">default</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+begin_src python :results silent
</span>  <span class="keyword">import </span>types
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src python
</span>  types.FunctionType
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: function
</span>
   </pre>
</content>
</entry>
<entry>
   <title>pp-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-pp-results.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-pp-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** </span><span class="org-level-2"><span class="org-code">=pp=</span></span><span class="org-level-2"> results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** python</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src python :results pp :session
</span>  [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three']</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: ['one', 'two', 'three', 'one', 'two', 'three', 'one', 'two', 'three']
</span>
<span class="org-level-3">*** ruby</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src ruby :results pp
</span>  <span class="keyword">class</span> <span class="type">Schulte</span>
    attr_accessor <span class="constant">:name</span>, <span class="constant">:age</span>
  <span class="keyword">end</span>
  
  eric = <span class="type">Schulte</span>.new
  eric.name = <span class="string">"eric"
</span>  eric.age = 27
  
  eric
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span>

<span class="org-block-begin-line">#+begin_src ruby :results pp
</span>  a = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]
  a
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+begin_example
</span><span class="org-block">[1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3,
 1,
 2,
 3]
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>pretty-print</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-pretty-print.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-pretty-print.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** pretty print</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results scalar
</span>  '<span class="starter-kit-paren">(</span>1 2 3 4<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>quoted-latex</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-quoted-latex.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-quoted-latex.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** quoted latex</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

The following latex isn't exported correctly

<span class="org-block-begin-line">#+begin_latex
</span><span class="org-block">  \begin{code}
  data BTree = Leaf a
             | Node Tree Tree
  \end{code}
</span><span class="org-block-end-line">#+end_latex
</span>
<span class="org-block-begin-line">#+begin_src haskell
</span>  <span class="keyword">data</span> <span class="type">BTree</span> <span class="variable-name">=</span> <span class="type">Leaf</span> a
             <span class="variable-name">|</span> <span class="type">Node</span> <span class="type">Tree</span> <span class="type">Tree
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>reference-parts-of-tables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-reference-parts-of-tables.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-reference-parts-of-tables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** reference parts of tables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2009-11-20
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+TBLNAME: squares
</span><span class="org-table">|  1 |   1 |</span>
<span class="org-table">|  2 |   4 |</span>
<span class="org-table">|  3 |   9 |</span>
<span class="org-table">|  4 |  16 |</span>
<span class="org-table">|  5 |  25 |</span>
<span class="org-table">|  6 |  36 |</span>
<span class="org-table">|  7 |  49 |</span>
<span class="org-table">|  8 |  64 |</span>
<span class="org-table">|  9 |  81 |</span>
<span class="org-table">| 10 | 100 |</span>
<span class="org-table">| 11 | 121 |</span>
<span class="org-table">| 12 | 144 |</span>
<span class="org-table">| 13 | 169 |</span>
<span class="org-table">| 14 | 196 |</span>
<span class="org-table">| 15 | 225 |</span>
<span class="org-table">| 16 | 256 |</span>
<span class="org-table">| 17 | 289 |</span>
<span class="org-table">| 18 | 324 |</span>
<span class="org-meta-line">#+TBLFM: $2=$1*$1
</span>
<span class="org-block-begin-line">#+begin_src gnuplot :var data=squares
</span><span class="constant">set</span> <span class="type">title</span> "Implementing Gnuplot"
<span class="keyword">plot</span> <span class="variable-name">data</span> <span class="type">using</span> 1:2 <span class="type">with</span> <span class="function-name">lines
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>results-switches</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-results-switches.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-results-switches.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** results switches</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ruby :results output :results_switches -n
</span>  10.times <span class="keyword">do</span> |n|
    puts <span class="string">"-"</span>*n
  <span class="keyword">end
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+begin_example -n
</span>
-
--
---
----
-----
------
-------
--------
---------<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_example
</span>
<span class="org-block-begin-line">#+begin_src ruby :results output
</span>  10.times <span class="keyword">do</span> |n|
    puts <span class="string">"-"</span>*n
  <span class="keyword">end
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-block-begin-line">#+begin_example
</span><span class="org-block">  -
  --
  ---
  ----
  -----
  ------
  -------
  --------
  ---------
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>show-all</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-show-all.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-show-all.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** show all</span>
   <span class="org-special-keyword">CLOCK:</span> <span class="org-date">[2009-09-15 Tue 07:51]--[2009-09-15 Tue 08:51]</span> =&gt;  1:00
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:exports:</span>  <span class="org-property-value">both</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ditaa :file blue.png
</span>   +----------------------+
   |                      |
   |                      |
   |          +-----------+
   |          |           |
   |          |           |
   |          |           |
   |          +-----------+
   |                      |
   +----------------------+
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-r</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-simple-r.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-simple-r.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple R</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :session R
</span>8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: 8
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-scalar</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-simple-scalar.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-simple-scalar.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple scalar</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 1 3<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: 4
</span>
   </pre>
</content>
</entry>
<entry>
   <title>switches-and-references</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-switches-and-references.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-switches-and-references.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** switches and references</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ruby -n -r -l "(ref:%s)" :results output
</span>  <span class="keyword">class</span> <span class="type">Schulte</span>
    <span class="keyword">def</span> <span class="function-name">self.eric</span>
      puts <span class="constant">:imp</span> <span class="comment-delimiter"># </span><span class="comment">(ref:imp)
</span>    <span class="keyword">end</span>
  <span class="keyword">end</span>
  <span class="type">Schulte.</span>eric
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname[bb4cebabe38a5d3d43835acebdbe17aa3314cef6]:
</span><span class="org-code">: imp
</span>
Line no. <span class="org-link">[[(imp)]]</span> is important!

<span class="org-block-begin-line">#+begin_src ruby -n -r -l "(ref:%s)" :results output
</span>  <span class="keyword">class</span> <span class="type">Schulte</span>
    <span class="keyword">def</span> <span class="function-name">self.eric</span>
      puts <span class="constant">:imp</span> <span class="comment-delimiter"># </span><span class="comment">(ref:imp)
</span>    <span class="keyword">end</span>
  <span class="keyword">end</span>
  <span class="type">Schulte</span>.eric <span class="comment-delimiter"># </span><span class="comment">(ref:output)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname: eric
</span><span class="org-code">: imp
</span>
   </pre>
</content>
</entry>
<entry>
   <title>:table-results-param</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-:table-results-param.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-:table-results-param.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** </span><span class="org-level-2"><span class="org-code">=:table=</span></span><span class="org-level-2"> results param</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results table
</span>  8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-table">| 8 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>testing-srcname-aliases</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-testing-srcname-aliases.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-testing-srcname-aliases.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** testing srcname aliases</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: two
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var input=two
</span>  <span class="starter-kit-paren">(</span>+ input 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[1ec6c8d3de6aaeac7b2720f1d801402e762875ea]:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>unresolved-noweb-references</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-unresolved-noweb-references.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-unresolved-noweb-references.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** unresolved noweb references</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-babel-noweb-error-langs '<span class="starter-kit-paren">(</span><span class="string">"ruby"</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: i-have-a-name
</span><span class="org-block-begin-line">#+begin_src ruby 
</span>  1 + 2
<span class="org-block-end-line">#+end_src
</span>

<span class="org-block-begin-line">#+begin_src ruby :noweb
</span>  <span class="string">&lt;&lt;i</span>-have-a-name&gt;&gt; + 3
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+resname:
</span><span class="org-code">: 6
</span>
   </pre>
</content>
</entry>
<entry>
   <title>xml-and-n3</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-20-xml-and-n3.html"/>
   <updated>2009-11-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-20-xml-and-n3.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** xml and n3</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-20</span>
<span class="org-special-keyword">   :END:</span>

introduce org-babel to <span class="org-code">=xml=</span> and <span class="org-code">=n3=</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>add-to-list 'org-babel-interpreters <span class="string">"xml"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>add-to-list 'org-babel-interpreters <span class="string">"n3"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
inform org-babel-tangle of their existence and file extensions
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>add-to-list 'org-babel-tangle-langs '<span class="starter-kit-paren">(</span><span class="string">"xml"</span> <span class="string">"xml"</span><span class="starter-kit-paren">))</span>
  <span class="starter-kit-paren">(</span>add-to-list 'org-babel-tangle-langs '<span class="starter-kit-paren">(</span><span class="string">"n3"</span> <span class="string">"n3"</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src xml :tangle example
</span>  <span class="nxml-tag-delimiter">&lt;</span><span class="nxml-element-local-name">first</span><span class="nxml-tag-delimiter">&gt;</span>
  <span class="nxml-tag-delimiter">&lt;</span><span class="nxml-tag-slash">/</span><span class="nxml-element-local-name">first</span><span class="nxml-tag-delimiter">&gt;
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src n3 :tangle example
</span>  n3 stuff<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>sh-with-sessions</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-27-sh-with-sessions.html"/>
   <updated>2009-11-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-27-sh-with-sessions.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** sh with sessions</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :session eric
</span>  <span class="builtin">cd </span>~/Desktop
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :session eric
</span>  <span class="builtin">cd </span>~/Desktop/clj/
  ls *.clj
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| "ants.clj" | "" | "concurrent.clj" | "" | "hello.clj" | "" | "spell-checker.clj" |</span>

   </pre>
</content>
</entry>
<entry>
   <title>whitespace-newline-results-issues</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-27-whitespace-newline-results-issues.html"/>
   <updated>2009-11-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-27-whitespace-newline-results-issues.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** whitespace/newline results issues</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo </span>output
<span class="org-block-end-line">#+end_src
</span>
This
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo </span>output
<span class="org-block-end-line">#+end_src
</span>text here

results in

t#+results:
<span class="org-code">: output
</span>ext here

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 1 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2
</span>
   </pre>
</content>
</entry>
<entry>
   <title>debug-hints</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-30-debug-hints.html"/>
   <updated>2009-11-30:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-30-debug-hints.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** debug hints</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-30</span>
<span class="org-special-keyword">   :END:</span>
from mailing list

- edebug-defun: (in emacs-lisp mode, C-u C-M-x) will mark the function
  so that when it is called, the interpreter stops and you can then
  single-step through it with &lt;SPACE&gt;. At each point, you can press
  "e" and evaluate variables (actually arbitrary expressions).
- Insert a strategically placed (debug) call and then call the
  function.  If/when the debug call is executed, you are dropped into
  the debugger and you can then evaluate arbitrary expressions.

   </pre>
</content>
</entry>
<entry>
   <title>gnuplot-variable-expansion</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-30-gnuplot-variable-expansion.html"/>
   <updated>2009-11-30:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-30-gnuplot-variable-expansion.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** gnuplot variable expansion</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-30</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: simple-function
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="string">"sin(x)"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src gnuplot :var fun=simple-function
</span>  <span class="keyword">plot</span> <span class="variable-name">$fun
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>sql-exports-to-latex</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-11-30-sql-exports-to-latex.html"/>
   <updated>2009-11-30:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-11-30-sql-exports-to-latex.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** sql exports to latex</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-30</span>
<span class="org-special-keyword">   :END:</span>
example from email list
<span class="org-level-3">*** ECM</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-11-30</span>
<span class="org-special-keyword">    :END:</span>

   - faire un script Bash (et <span class="org-code">=isql=</span>) envoyant un <span class="italic">/listing/</span> de stagiaires;

<span class="org-meta-line">#+name: envoi-stg
</span><span class="org-block-begin-line">   #+begin_src sql
</span>       DECLARE @dateFmtStyleIn int; SET @dateFmtStyleIn = 120 <span class="comment">-- ODBC canonical
</span>       DECLARE @dateFmtStyleOut int; SET @dateFmtStyleOut = 103 <span class="comment">-- French dd/mm/yyyy
</span>
       DECLARE @firstDayOfThisMonth smalldatetime
       SET @firstDayOfThisMonth = CONVERT(smalldatetime,
                                          CAST(YEAR(GETDATE()) AS char(4)) + <span class="string">'-'</span>
                                          + CAST(MONTH(GETDATE()) AS char(2)) + <span class="string">'-'</span>
                                          + <span class="string">'01'</span> + <span class="string">' 00:00:00'</span>,
                                          @dateFmtStyleIn)

       DECLARE @now smalldatetime
       SET @now = CONVERT(smalldatetime,
                          CAST(YEAR(GETDATE()) AS char(4)) + <span class="string">'-'</span>
                          + CAST(MONTH(GETDATE()) AS char(2)) + <span class="string">'-'</span>
                          + CAST(DAY(GETDATE()) AS char(2)) + <span class="string">' '</span>
                          + CAST(DATEPART(hh, GETDATE()) AS char(2)) + <span class="string">':'</span>
                          + CAST(DATEPART(mi, GETDATE()) AS char(2)) + <span class="string">':'</span>
                          + <span class="string">'00',</span>
                          @dateFmtStyleIn)

       SELECT pfiID
       FROM dossier
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-buffer</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-04-eval-buffer.html"/>
   <updated>2009-12-04:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-04-eval-buffer.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval-buffer</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-04</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 1 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 3 4<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 7
</span>
   </pre>
</content>
</entry>
<entry>
   <title>quoted-session-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-04-quoted-session-name.html"/>
   <updated>2009-12-04:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-04-quoted-session-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** quoted session name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-04</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :session "eric"
</span>  <span class="builtin">echo</span> <span class="string">'name-me'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: name-me
</span>
   </pre>
</content>
</entry>
<entry>
   <title>looking-at-double-quotes</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-18-looking-at-double-quotes.html"/>
   <updated>2009-12-18:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-18-looking-at-double-quotes.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** looking at double quotes</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-18</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: double-quote-test-input
</span><span class="org-table">| test | this | 8 | 9 |</span>

<span class="org-meta-line">#+name: double-quote-test-output
</span><span class="org-block-begin-line">#+begin_src python :var data=double-quote-test-input
</span>  <span class="keyword">return </span>data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: double-quote-test-output
</span><span class="org-table">| test | this | 8 | 9 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>no-noweb-by-default</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-18-no-noweb-by-default.html"/>
   <updated>2009-12-18:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-18-no-noweb-by-default.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** no noweb by default</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-18</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: sample
</span><span class="org-block-begin-line">#+begin_src emacs-lisp 
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"sample"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :noweb no
</span>  &lt;&lt;sample&gt;&gt;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: sample
</span>
   </pre>
</content>
</entry>
<entry>
   <title>exporting-and-caching</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-23-exporting-and-caching.html"/>
   <updated>2009-12-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-23-exporting-and-caching.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting and caching</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ditaa :file data/example.png :exports none
</span>    +------------------+
    |  ditaa example   |
    |                  |
    |                  |
    +------------------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:data/example.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>exporting-org-source</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2009-12-23-exporting-org-source.html"/>
   <updated>2009-12-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2009-12-23-exporting-org-source.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting org-source</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2009-12-23</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src org
</span>  ,lets see how this org-mode code exports to html
  
  ,is this <span class="org-link">[[link]] </span>blue?
  
  ,#+begin_src emacs-lisp
  ,  (+ 1 2)
  ,#+end_src
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>fancier-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-01-05-fancier-export.html"/>
   <updated>2010-01-05:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-01-05-fancier-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** fancier export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-01-05</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: square
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var input=1
</span>  <span class="starter-kit-paren">(</span>* input input<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>links</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-01-06-links.html"/>
   <updated>2010-01-06:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-01-06-links.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** links</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-01-06</span>
<span class="org-special-keyword">   :END:</span>

can LaTeX link itself to the middle of a paragraph with a simple
inline link like &lt;&lt;keystone&gt;&gt; if not then we would probably need to
wrap source-code blocks in figures to make them referable.

how about a link back to <span class="org-link">[[keystone]]</span>

The above appears to work in LaTeX, but not in HTML.

   </pre>
</content>
</entry>
<entry>
   <title>load-to-session</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-01-11-load-to-session.html"/>
   <updated>2010-01-11:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-01-11-load-to-session.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** load to session</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-01-11</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src clojure :session asm-gp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">in-ns</span> 'asm-gp<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ruby :session
</span>  puts <span class="constant">:eric
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src python :session
</span>  5 + 1 
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R :session
</span>  6 + 1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :session
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ocaml :session
</span>  eric
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src gnuplot :session
</span>  <span class="keyword">plot</span> <span class="function-name">sin(</span>x)
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>babel-block-overwrite</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-01-18-babel-block-overwrite.html"/>
   <updated>2010-01-18:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-01-18-babel-block-overwrite.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** babel block overwrite</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-01-18</span>
<span class="org-special-keyword">   :END:</span>

The first block overwrites
<span class="org-block-begin-line">#+begin_src clojure
</span>  <span class="starter-kit-paren">(</span><span class="keyword">def</span> <span class="function-name">overwriter</span> <span class="string">"I'll show up everywhere"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
this second block
<span class="org-block-begin-line">#+begin_src diff
</span><span class="diff-context">  3719d3718
  &lt;       movl    $1024, 8(%esp)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ditaa-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-03-ditaa-blocks.html"/>
   <updated>2010-02-03:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-03-ditaa-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ditaa blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-03</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ditaa :file communication.png :cache yes
</span>  -------------
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[4fbfc78b37abd8a788958d28a7335445e6042c96]:
</span><span class="org-link">[[file:communication.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>exporting-to-a-file</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-03-exporting-to-a-file.html"/>
   <updated>2010-02-03:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-03-exporting-to-a-file.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting to a file</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:EXPORT_FILE_NAME:</span> <span class="org-property-value">simple</span>
   <span class="org-special-keyword">:EXPORT_TITLE:</span> <span class="org-property-value">testing file export</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-03</span>
<span class="org-special-keyword">   :END:</span>

this is the contents

and a block
<span class="org-block-begin-line">#+begin_src clojure
</span>  <span class="starter-kit-paren">(</span><span class="builtin">println</span> <span class="string">"is a nice lisp"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
ah, it works!

   </pre>
</content>
</entry>
<entry>
   <title>tangling-without-comments-and-shebang</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-05-tangling-without-comments-and-shebang.html"/>
   <updated>2010-02-05:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-05-tangling-without-comments-and-shebang.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling w/o comments and shebang</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-05</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :comments no :shebang (identity my-shebang)
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"I should have no comments"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :comments no
</span>  <span class="starter-kit-paren">(</span>setq my-shebang <span class="string">"foo"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: foo
</span>
<span class="org-block-begin-line">#+begin_src ruby :shebang #!/usr/bin/ruby
</span>  puts <span class="constant">:nonstandard_shebang
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tables-to-shell-scripts-ideas</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-06-tables-to-shell-scripts-ideas.html"/>
   <updated>2010-02-06:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-06-tables-to-shell-scripts-ideas.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tables to shell scripts ideas</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: sec
</span><span class="org-table">| Hello | World |</span>


1) allowing the user to specify a separator with a header argument as
   follows
<span class="org-block-begin-line">   #+begin_src sh :var table=sec :separator ,
</span>     cat &lt;&lt;EOF
     $<span class="variable-name">table
</span>     EOF
<span class="org-block-end-line">   #+end_src
</span>   
   which would result in something like

   <span class="org-code">: "Hello, World"
</span>
2) writing the table to a tab or comma separated file and then
   replacing <span class="org-code">=$table=</span> in the source block body with the path to the
   file name, s.t. something like
   
<span class="org-block-begin-line">   #+begin_src sh :var table=data
</span>     wc $<span class="variable-name">table
</span><span class="org-block-end-line">   #+end_src
</span>
   would return reasonable results

   </pre>
</content>
</entry>
<entry>
   <title>short-shell-test</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-07-short-shell-test.html"/>
   <updated>2010-02-07:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-07-short-shell-test.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** short shell test</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Sun Feb  7 10:17:44 MST 2010
</span>
<span class="org-meta-line">#+tblname: fibs
</span><span class="org-table">| 1 | 1 |</span>
<span class="org-table">| 2 | 1 |</span>
<span class="org-table">| 3 | 2 |</span>
<span class="org-table">| 4 | 3 |</span>
<span class="org-table">| 5 | 5 |</span>
<span class="org-table">| 6 | 8 |</span>

<span class="org-block-begin-line">#+begin_src sh :var table=fibs
</span>  <span class="builtin">echo</span> <span class="string">"$table" </span>|wc
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 6      12      24
</span>
<span class="org-block-begin-line">#+begin_src sh :var table=fibs
</span>  <span class="builtin">echo</span> <span class="string">"$table"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 1 |</span>
<span class="org-table">| 2 | 1 |</span>
<span class="org-table">| 3 | 2 |</span>
<span class="org-table">| 4 | 3 |</span>
<span class="org-table">| 5 | 5 |</span>
<span class="org-table">| 6 | 8 |</span>

<span class="org-block-begin-line">#+begin_src sh :var table=fibs :separator --
</span>  <span class="builtin">echo</span> <span class="string">"$table" </span>| head -1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1--1
</span>
   </pre>
</content>
</entry>
<entry>
   <title>looking-at-source-name-exports</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-09-looking-at-source-name-exports.html"/>
   <updated>2010-02-09:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-09-looking-at-source-name-exports.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** looking at source name exports</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-09</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: fibonacci
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var input=0
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">fib</span> <span class="starter-kit-paren">(</span>n<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>&gt; n 1<span class="starter-kit-paren">)</span>
        <span class="starter-kit-paren">(</span>+ <span class="starter-kit-paren">(</span>fib <span class="starter-kit-paren">(</span>- n 1<span class="starter-kit-paren">))</span> <span class="starter-kit-paren">(</span>fib <span class="starter-kit-paren">(</span>- n 2<span class="starter-kit-paren">)))</span>
        1<span class="starter-kit-paren">))</span>
  <span class="starter-kit-paren">(</span>fib input<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: fibonacci
</span><span class="org-code">: 1
</span>
now applying our Fibonacci function

<span class="org-meta-line">#+call: fibonacci(input=5)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>list-index-with-function-style-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-14-list-index-with-function-style-name.html"/>
   <updated>2010-02-14:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-14-list-index-with-function-style-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** list index w/function style name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-14</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: function-style-index
</span><span class="org-table">| 0 |</span>
<span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>
<span class="org-table">| 4 |</span>
<span class="org-table">| 5 |</span>
<span class="org-table">| 6 |</span>
<span class="org-table">| 7 |</span>
<span class="org-table">| 8 |</span>
<span class="org-table">| 9 |</span>

<span class="org-meta-line">#+name: function-style-indexing(data=function-style-index[1:4,0])
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"%S"</span> data<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: function-style-indexing
</span><span class="org-code">: ((1) (2) (3) (4))
</span>
   </pre>
</content>
</entry>
<entry>
   <title>haskell-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-15-haskell-variables.html"/>
   <updated>2010-02-15:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-15-haskell-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** haskell variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-15</span>
<span class="org-special-keyword">   :END:</span>

playing with Haskell

<span class="org-meta-line">#+name: haskell-stuff
</span><span class="org-code">: 9
</span>
<span class="org-block-begin-line">#+begin_src haskell :var num=haskell-stuff
</span>  num <span class="variable-name">+ </span>1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ruby :var num=haskell-stuff
</span>  num + 1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 10
</span>
   </pre>
</content>
</entry>
<entry>
   <title>results-lines-for-function-calls</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-15-results-lines-for-function-calls.html"/>
   <updated>2010-02-15:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-15-results-lines-for-function-calls.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** results lines for function calls</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-15</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+call: fibonacci(input=5) :resname eric
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var fib=fibonacci(input=5)
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"fib(5)=%d"</span> fib<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: fib(5)=8
</span>
   </pre>
</content>
</entry>
<entry>
   <title>variables-into-shell-scripts</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-02-23-variables-into-shell-scripts.html"/>
   <updated>2010-02-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-02-23-variables-into-shell-scripts.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** variables into shell scripts</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-02-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: into-shell-scripts
</span><span class="org-table">| username | guest   |</span>
<span class="org-table">| password | nothing |</span>

<span class="org-block-begin-line">#+begin_src sh :var username=into-shell-scripts[0,0] :var password=into-shell-scripts[1,1] :results output
</span>  <span class="builtin">echo</span> <span class="string">"$username -p $password"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: username -p nothing
</span>
<span class="org-meta-line">#+name: number-into-shell
</span><span class="org-code">: 9
</span>
<span class="org-block-begin-line">#+begin_src sh :var num=number-into-shell
</span>  <span class="keyword">for</span> i<span class="keyword"> in</span> <span class="sh-quoted-exec">`seq $num`</span>; <span class="keyword">do</span>
      <span class="builtin">echo</span> $<span class="variable-name">i</span>
  <span class="keyword">done
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>
<span class="org-table">| 4 |</span>
<span class="org-table">| 5 |</span>
<span class="org-table">| 6 |</span>
<span class="org-table">| 7 |</span>
<span class="org-table">| 8 |</span>
<span class="org-table">| 9 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>access-to-variables-set-in-property-drawers</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-03-22-access-to-variables-set-in-property-drawers.html"/>
   <updated>2010-03-22:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-03-22-access-to-variables-set-in-property-drawers.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** access to variables set in property drawers</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:special:</span>  <span class="org-property-value">89</span>
   <span class="org-special-keyword">:text:</span> <span class="org-property-value">schulte</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-03-22</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-code">: "(org-entry-get nil "special" t)"
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var special=(string-to-number (org-entry-get nil "special" t))
</span>  <span class="starter-kit-paren">(</span>+ special 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 90
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var special=(org-entry-get nil "text" t)
</span>  special  
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: schulte
</span>
   </pre>
</content>
</entry>
<entry>
   <title>latex-attributes</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-03-23-latex-attributes.html"/>
   <updated>2010-03-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-03-23-latex-attributes.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** latex attributes</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-03-23</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+ATTR_LaTeX: width=0.38\textwidth wrap placement={r}{0.4\textwidth}
</span><span class="org-block-begin-line">#+begin_src ditaa :file=scrap.png
</span>  +---------------------------+
  |                           |
  |       latex               |
  |                           |
  |      +------------+       |
  |      |            |       |
  |      |            |       |
  |      |       cBLU |       |
  |      +------------+       |
  |                      cPNK |
  +---------------------------+
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangling-and-variable-resolution</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-03-31-tangling-and-variable-resolution.html"/>
   <updated>2010-03-31:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-03-31-tangling-and-variable-resolution.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling and variable resolution</span>
<span class="org-special-keyword">  :PROPERTIES:</span>
  <span class="org-special-keyword">:ID:</span>       <span class="org-property-value">18b4f1be-bb1d-49bc-a651-c97406a35bdd</span>
  :tangle:   yes
  :DATE:     2010-03-31
<span class="org-special-keyword">  :END:</span>

<span class="org-meta-line">#+name: A
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :eval no :expand yes :var id=(org-entry-get nil "ID" t) :var two=2
</span>  <span class="starter-kit-paren">(</span>concat <span class="string">"This is the entry ID: "</span> id<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: A
</span><span class="org-code">: This is the entry ID: 18b4f1be-bb1d-49bc-a651-c97406a35bdd
</span>
   </pre>
</content>
</entry>
<entry>
   <title>evaluate-references</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-09-evaluate-references.html"/>
   <updated>2010-04-09:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-09-evaluate-references.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** evaluate references</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-09</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var var=`(+ 9 ,(- 19 7)) :tangle yes
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"var is %S"</span> var<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 1 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
<span class="org-block-begin-line">#+begin_src ruby
</span>  + 1 2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: nil
</span>
   </pre>
</content>
</entry>
<entry>
   <title>hline-processing</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-12-hline-processing.html"/>
   <updated>2010-04-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-12-hline-processing.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** hline processing</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-12</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: many-cols
</span><span class="org-table">| a | b | c |</span>
<span class="org-table">|---+---+---|</span>
<span class="org-table">| d | e | f |</span>
<span class="org-table">|---+---+---|</span>
<span class="org-table">| g | h | i |</span>

<span class="org-meta-line">#+tblname: less-cols
</span><span class="org-table">| 1 |</span>
<span class="org-table">|---|</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-meta-line">#+tblname: less-cols2
</span><span class="org-table">| 1 | 2 | 3 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var tab=many-cols
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"%S"</span> tab<span class="starter-kit-paren">)</span>
  <span class="comment-delimiter">;; </span><span class="comment">(remove 'hline tab)
</span>  <span class="comment-delimiter">;; </span><span class="comment">(flet ((rem-hline (el)
</span>  <span class="comment-delimiter">;;                   </span><span class="comment">(if (listp el)
</span>  <span class="comment-delimiter">;;                       </span><span class="comment">(remove nil (mapcar #'rem-hline el))
</span>  <span class="comment-delimiter">;;                     </span><span class="comment">(if (equal 'hline el) nil el))))
</span>  <span class="comment-delimiter">;;   </span><span class="comment">(rem-hline tab))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ruby :var tab=less-cols
</span>  tab
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 |</span>
<span class="org-table">|---|</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-block-begin-line">#+begin_src ruby :var one=2
</span>  1 + 2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
<span class="org-block-begin-line">#+begin_src python :var tab=less-cols
</span>  <span class="keyword">return </span>tab
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 |</span>
<span class="org-table">|---|</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-block-begin-line">#+begin_src ruby :var tab=less-cols :colnames no
</span>  tab
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var tab=row-and-col-names
</span>   <span class="starter-kit-paren">(</span>message <span class="string">"%S"</span> tab<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (("" "c1" "c2" "c3") hline ("r1" 1 4 7) ("r2" 2 5 8) ("r3" 3 6 9))
</span>
<span class="org-meta-line">#+tblname: row-and-col-names
</span><span class="org-table">|    | c1 | c2 | c3 |</span>
<span class="org-table">|----+----+----+----|</span>
<span class="org-table">| r1 |  1 |  4 |  7 |</span>
<span class="org-table">| r2 |  2 |  5 |  8 |</span>
<span class="org-table">| r3 |  3 |  6 |  9 |</span>

functions
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-del-hlines</span> <span class="starter-kit-paren">(</span>table<span class="starter-kit-paren">)</span>
    <span class="doc">"Remove all 'hlines from TABLE."</span>
    <span class="starter-kit-paren">(</span>remove 'hline table<span class="starter-kit-paren">))</span>
  
  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-get-colnames</span> <span class="starter-kit-paren">(</span>table<span class="starter-kit-paren">)</span>
    <span class="doc">"Return a cons cell, the `</span><span class="doc"><span class="constant">car</span></span><span class="doc">' of which contains the TABLE
        less colnames, and the `</span><span class="doc"><span class="constant">cdr</span></span><span class="doc">' of which contains a list of the
        column names"</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>equal 'hline <span class="starter-kit-paren">(</span>second table<span class="starter-kit-paren">))</span>
        <span class="starter-kit-paren">(</span>cons <span class="starter-kit-paren">(</span>cddr table<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>car table<span class="starter-kit-paren">))</span>
      table<span class="starter-kit-paren">))</span>
    
  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-get-rownames</span> <span class="starter-kit-paren">(</span>table<span class="starter-kit-paren">)</span>
    <span class="doc">"Return a cons cell, the `</span><span class="doc"><span class="constant">car</span></span><span class="doc">' of which contains the TABLE less
     colnames, and the `</span><span class="doc"><span class="constant">cdr</span></span><span class="doc">' of which contains a list of the column
     names.  </span><span class="doc"><span class="constant">Note</span></span><span class="doc">: this function removes any hlines in TABLE"</span>
    <span class="starter-kit-paren">(</span><span class="keyword">flet</span> <span class="starter-kit-paren">((</span>trans <span class="starter-kit-paren">(</span>table<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>apply #'mapcar* #'list table<span class="starter-kit-paren">)))</span>
      <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>table <span class="starter-kit-paren">(</span>trans <span class="starter-kit-paren">(</span>remove 'hline table<span class="starter-kit-paren">))))</span>
        <span class="starter-kit-paren">(</span>cons <span class="starter-kit-paren">(</span>cdr table<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>car table<span class="starter-kit-paren">)))))</span>
  
  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-put-colnames</span> <span class="starter-kit-paren">(</span>table colnames<span class="starter-kit-paren">)</span>
    <span class="doc">"Add COLNAMES to TABLE if they exist."</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> colnames <span class="starter-kit-paren">(</span>apply 'list colnames 'hline table<span class="starter-kit-paren">)</span> table<span class="starter-kit-paren">))</span>
  
  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-put-rownames</span> <span class="starter-kit-paren">(</span>table rownames<span class="starter-kit-paren">)</span>
    <span class="doc">"Add ROWNAMES to TABLE if they exist."</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> rownames
        <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span>
                  <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>listp row<span class="starter-kit-paren">)</span>
                      <span class="starter-kit-paren">(</span>cons <span class="starter-kit-paren">(</span>or <span class="starter-kit-paren">(</span>pop rownames<span class="starter-kit-paren">)</span> <span class="string">""</span><span class="starter-kit-paren">)</span> row<span class="starter-kit-paren">)</span>
                    row<span class="starter-kit-paren">))</span> table<span class="starter-kit-paren">)</span>
      table<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>test-gnuplot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-17-test-gnuplot.html"/>
   <updated>2010-04-17:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-17-test-gnuplot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** test gnuplot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-17</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src gnuplot
</span>  <span class="keyword">plot</span> <span class="function-name">sin(</span>x), x+5
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>colnames-mismatched-sizes</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-23-colnames-mismatched-sizes.html"/>
   <updated>2010-04-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-23-colnames-mismatched-sizes.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** colnames mismatched sizes</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: mismatch-colnames
</span><span class="org-table">| a |  b |</span>
<span class="org-table">|---+----|</span>
<span class="org-table">| 1 |  8 |</span>
<span class="org-table">| 2 |  9 |</span>
<span class="org-table">| 3 | 10 |</span>
<span class="org-table">| 4 | 11 |</span>

<span class="org-block-begin-line">#+begin_src python :var tab=mismatch-colnames
</span>  <span class="keyword">return </span>[[1, 2, 3]]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 | 3 |</span>

<span class="org-block-begin-line">#+begin_src python :var tab=mismatch-colnames
</span>  <span class="keyword">return </span>[[1, 2]]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| a | b |</span>
<span class="org-table">|---+---|</span>
<span class="org-table">| 1 | 2 |</span>

<span class="org-block-begin-line">#+begin_src python :var tab=mismatch-colnames :colnames yes
</span>  <span class="keyword">return </span>[1,2]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>variable-indexing</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-23-variable-indexing.html"/>
   <updated>2010-04-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-23-variable-indexing.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** variable indexing</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+TBLNAME: MyTable
</span> <span class="org-table">|   X |  Y |</span>
 <span class="org-table">|-----+----|</span>
 <span class="org-table">|   0 |  0 |</span>
 <span class="org-table">|   1 |  1 |</span>
 <span class="org-table">|   2 |  4 |</span>
 <span class="org-table">|   3 |  9 |</span>
 <span class="org-table">|   4 | 16 |</span>
 <span class="org-table">|   5 | 25 |</span>
 <span class="org-table">|-----+----|</span>
 <span class="org-table">| Sum | 55 |</span>
<span class="org-meta-line"> #+TBLFM: $2=$1*$1::@8$2=vsum(@2..@-1)</span>

<span class="org-block-begin-line">#+begin_src python :var sum=MyTable[2:7,1] :exports none
</span>   <span class="keyword">return</span> <span class="builtin">sum
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 0 | 1 | 4 | 9 | 16 | 25 |</span>

<span class="org-block-begin-line">#+begin_src python :var sum=MyTable[9,1] :exports none
</span>   <span class="keyword">return</span> <span class="builtin">sum
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 55
</span>
<span class="org-block-begin-line">#+begin_src gnuplot :var data=MyTable[1:-2] :var sum=MyTable[7,1]
</span>:results silent :exports none
  reset
  <span class="constant">set</span> label "Sum: %.0f",sum at graph 0.03, graph 0.93
  <span class="keyword">plot</span> <span class="variable-name">data</span> <span class="type">with</span> <span class="function-name">linespoints
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangling-org</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-27-tangling-org.html"/>
   <updated>2010-04-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-27-tangling-org.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling org</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src org :tangle ~/Desktop/test.org
</span>  ,* first
  ,| eric   | me     |
  ,| patton | my dog |
  
  ,* second
  
  ,some more stuff...
  
  ,#+HTML: &lt;b&gt;I bet this is quoted&lt;/b&gt;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src ruby :tangle ~/Desktop/test.rb
</span>  <span class="comment-delimiter"># </span><span class="comment">this is a comment
 </span> eric.map{|l| puts l}
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>lisps-not-fully-evald</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-04-30-lisps-not-fully-evald.html"/>
   <updated>2010-04-30:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-04-30-lisps-not-fully-evald.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lisps not fully eval'd</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-04-30</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"one"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>message <span class="string">"two"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: two
</span>
<span class="org-block-begin-line">#+begin_src clojure :session :default
</span>  <span class="starter-kit-paren">(</span><span class="builtin">println</span> <span class="string">"one"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span><span class="builtin">println</span> <span class="string">"two"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span><span class="builtin">+</span> 1 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>colnames</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-05-04-colnames.html"/>
   <updated>2010-05-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-05-04-colnames.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** colnames</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-04</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: A
</span><span class="org-table">| a | b | c |</span>
<span class="org-table">|---+---+---|</span>
<span class="org-table">| d | e | f |</span>
<span class="org-table">| g | h | i |</span>

<span class="org-block-begin-line">#+begin_src python :var tab=A :colnames yes
</span><span class="keyword">return</span> [[val + <span class="string">'*'</span> <span class="keyword">for</span> val <span class="keyword">in</span> row] <span class="keyword">for</span> row <span class="keyword">in </span>tab]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| a  | b  | c  |</span>
<span class="org-table">|----+----+----|</span>
<span class="org-table">| d* | e* | f* |</span>
<span class="org-table">| g* | h* | i* |</span>

<span class="org-meta-line">#+tblname: A
</span><span class="org-table">| a | b | c |</span>
<span class="org-table">| d | e | f |</span>
<span class="org-table">| g | h | i |</span>

<span class="org-block-begin-line">#+begin_src ruby :var tab=A :colnames yes
</span>tab.map{|r| r.map{|e| e+<span class="string">"*"}</span> }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| a  | b  | c  |</span>
<span class="org-table">|----+----+----|</span>
<span class="org-table">| d* | e* | f* |</span>
<span class="org-table">| g* | h* | i* |</span>

   </pre>
</content>
</entry>
<entry>
   <title>empty-code-blocks----and-latex-vs.-latex</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-05-26-empty-code-blocks----and-latex-vs.-latex.html"/>
   <updated>2010-05-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-05-26-empty-code-blocks----and-latex-vs.-latex.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** empty code blocks -- and latex vs. LaTeX</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-26</span>
<span class="org-special-keyword">   :END:</span>
eric
<span class="org-block-begin-line">#+begin_src latex
</span>  
<span class="org-block-end-line">#+end_src
</span>
michael
<span class="org-block-begin-line">#+begin_src LaTeX
</span>  
<span class="org-block-end-line">#+end_src
</span>
schulte
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"error"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>visibility-affecting-execution</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-05-27-visibility-affecting-execution.html"/>
   <updated>2010-05-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-05-27-visibility-affecting-execution.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** visibility affecting execution</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2010-05-27
<span class="org-special-keyword">   :END:</span>

<span class="org-level-3">*** folding</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-27</span>
<span class="org-special-keyword">    :END:</span>
lets test folding

<span class="org-level-4">**** folded</span>
<span class="org-special-keyword">     :PROPERTIES:</span>
     <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-27</span>
<span class="org-special-keyword">     :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"folded1"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: folded1
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"folded2"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: folded2
</span><span class="org-level-4">**** unfolded</span>
<span class="org-special-keyword">     :PROPERTIES:</span>
     <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-27</span>
<span class="org-special-keyword">     :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"unfolded1"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: unfolded1
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"unfolded2"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: unfolded2
</span>
   </pre>
</content>
</entry>
<entry>
   <title>appending-tangle</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-05-28-appending-tangle.html"/>
   <updated>2010-05-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-05-28-appending-tangle.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** appending tangle</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">appended.el</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-05-28</span>
<span class="org-special-keyword">   :END:</span>
append all these block

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"block %d"</span> 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"block %d"</span> 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"block %d"</span> 3<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>adding-file-names-to-literal-values-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-01-adding-file-names-to-literal-values-on-export.html"/>
   <updated>2010-06-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-01-adding-file-names-to-literal-values-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** adding file names to literal values on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-01</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: three
</span><span class="org-code">: 9
</span>
<span class="org-block-begin-line">#+begin_src R :var num=three :exports results
</span>runif(n=num, min=0, max=1)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R :var num=3 :exports results
</span>runif(n=num, min=0, max=1)
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inline-expressions</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-06-inline-expressions.html"/>
   <updated>2010-06-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-06-inline-expressions.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inline expressions</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:session:</span>  <span class="org-property-value">'default</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :exports code :results silent
</span>  x<span class="constant">&lt;-4</span>
<span class="org-block-end-line">#+end_src
</span>
the sum of 1 and x is equal to src_R{x+1}, now I'll sneakily reset
this value in a hidden inline block src_R[:exports none]{x&lt;-2}, so
it's value is now src_R{x}.

   </pre>
</content>
</entry>
<entry>
   <title>simple-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-06-simple-table.html"/>
   <updated>2010-06-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-06-simple-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  '<span class="starter-kit-paren">((</span>1 2 3<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>4 5 6<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>7 8 900<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |   3 |</span>
<span class="org-table">| 4 | 5 |   6 |</span>
<span class="org-table">| 7 | 8 | 900 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>commas-on-tangling-test</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-commas-on-tangling-test.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-commas-on-tangling-test.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** commas on tangling test</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>
test comma protection on tangling

<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>org-babel-add-interpreter <span class="string">"org"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>add-to-list 'org-babel-tangle-langs '<span class="starter-kit-paren">(</span><span class="string">"org"</span> <span class="string">"org"</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src org :tangle commas.org
</span>  ,* org-mode
  ,  :PROPERTIES:
  ,  :CUSTOM_ID: comma-protect
  ,  :END:
  
  ,#+begin_src emacs-lisp
  ,  protected?
  ,#+end_src
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  ,* this should be
  # commented out
  
  and maybe not this...
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>executing-emacs-lisp-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-executing-emacs-lisp-on-export.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-executing-emacs-lisp-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** executing emacs-lisp on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="warning">error</span> <span class="string">"eric"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>export-with-existing-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-export-with-existing-results.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-export-with-existing-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** export with existing results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :exports none :results silent
</span>  '<span class="starter-kit-paren">((</span>1 2<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>3 4<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |</span>
<span class="org-table">| 3 | 4 |</span>

<span class="org-block-begin-line">#+begin_src ditaa :file /tmp/eric.png :exports none :results silent
</span>    +---------------+
    |               |
    |               |
    |               |     +-----------------+
    |    Eric       |     |                 |
    |               |     |    Schulte      |
    |               |     |                 |
    |               |     +-----------------+
    +---------------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:/tmp/eric.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>indented-source-names</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-indented-source-names.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-indented-source-names.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indented source names</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

   #+name: i-am-indented
   #+begin_src emacs-lisp 
     (message "i am indented")
   #+end_src

<span class="comment">#+name: i-am-indented</span>
<span class="org-code">: i am indented
</span>
<span class="comment">#+begin_src emacs-lisp :var output=i-am-indented</span>
  (length output)
<span class="comment">#+end_src</span>

<span class="comment">#+name:</span>
<span class="org-code">: 13
</span>
  #+name:
  <span class="org-code">: eric
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inhibiting-evaluation-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-inhibiting-evaluation-on-export.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-inhibiting-evaluation-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inhibiting evaluation on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:noeval:</span>   <span class="org-property-value">don't do it</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src clojure :session eric :exports none
</span>  <span class="starter-kit-paren">(</span><span class="builtin">+</span> 1 1 1 1<span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>error<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>non-empty-comint-prompt</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-non-empty-comint-prompt.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-non-empty-comint-prompt.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** non-empty comint prompt</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ruby :session eric
</span>  8 + 9
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>stripping-existing-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-stripping-existing-results.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-stripping-existing-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** stripping existing results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: trickily-located-somehwere-else
</span><span class="org-code">: I shouldn't be exported
</span>
Neither of the result strings for the following two code blocks should
be included in the export.  And only one of the bodies should be
included...

<span class="org-block-begin-line">#+begin_src emacs-lisp :exports code
</span>  <span class="starter-kit-paren">(</span>+ 1 1 1 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: don't include me in the export!!!!!!!
</span>
<span class="org-meta-line">#+name: trickily-located-somehwere-else
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :exports none
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"I shouldn't be exported"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>unwind-protect-with-narrowing</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-unwind-protect-with-narrowing.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-unwind-protect-with-narrowing.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** unwind-protect with narrowing</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

I'm not in the subtree

<span class="org-level-3">*** I'm in the subtree</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>+ 6 <span class="string">"I'm not a number!!"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>updating-results-in-situ</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-07-updating-results-in-situ.html"/>
   <updated>2010-06-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-07-updating-results-in-situ.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** updating results "in-situ"</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: in-situ
</span><span class="org-code">: update me in place please -- Mon Jun  7 16:44:44 2010
: update me in place please -- Mon Jun  7 16:44:43 2010
: update me in place please -- Mon Jun  7 16:44:42 2010
: update me in place please -- Mon Jun  7 16:44:37 2010
: update me in place please -- Mon Jun  7 16:42:14 2010
: update me in place please (at the bottom) -- Mon Jun  7 16:44:59 2010
: update me in place please (at the bottom) -- Mon Jun  7 16:45:00 2010
: update me in place please (at the bottom) -- Mon Jun  7 16:45:02 2010
</span>
the results should be <span class="bold">*above*</span> the block

<span class="org-meta-line">#+name: in-situ
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :results prepend
</span>  <span class="starter-kit-paren">(</span>format <span class="string">"update me in place please -- %s"</span>
          <span class="starter-kit-paren">(</span>current-time-string<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: in-situ
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :results append
</span>  <span class="starter-kit-paren">(</span>format <span class="string">"update me in place please (at the bottom) -- %s"</span>
          <span class="starter-kit-paren">(</span>current-time-string<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>not-expand-inlines-in-examples</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-08-not-expand-inlines-in-examples.html"/>
   <updated>2010-06-08:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-08-not-expand-inlines-in-examples.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** not expand inlines in examples</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-08</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-code">: src_emacs-lisp{(+ 1 2 3)}
</span>
<span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  src_emacs-lisp{(+ 1 2 3)}
</span><span class="org-block-end-line">#+end_example
</span>
src_emacs-lisp{(+ 1 2 3)}

<span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  src_emacs-lisp{(+ 1 2 3)}
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>indented-source-code-blocks-and-indented-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-10-indented-source-code-blocks-and-indented-results.html"/>
   <updated>2010-06-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-10-indented-source-code-blocks-and-indented-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indented source-code blocks and indented results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-10</span>
<span class="org-special-keyword">   :END:</span>

    #+name: time
    #+begin_src emacs-lisp :results append
      ;; (list (list (current-time-string)))
      (current-time-string)
    #+end_src

    #+name: time
    <span class="org-table">| 1 | 2 | 3 |</span>


        #+call: time() :results prepend

        #+name: time()
        <span class="org-table">| 1 | 2 | 3 |</span>
        <span class="org-code">: Thu Jun 10 14:13:21 2010
</span>        <span class="org-code">: Thu Jun 10 14:13:21 2010
</span>        <span class="org-code">: : Thu Jun 10 14:13:21 2010
</span>        <span class="org-code">: : Thu Jun 10 14:13:21 2010
</span>        <span class="org-code">: : Thu Jun 10 14:13:21 2010
</span>        <span class="org-code">: nil
</span>        <span class="org-code">: nil
</span>        <span class="org-code">: Thu Jun 10 14:11:22 2010
</span>        <span class="org-code">: Thu Jun 10 14:11:20 2010
</span>        <span class="org-code">: nil
</span>        <span class="org-code">: nil
</span>        <span class="org-code">: Thu Jun 10 14:06:04 2010
</span>        <span class="org-code">: Thu Jun 10 14:06:03 2010
</span>        <span class="org-code">: Thu Jun 10 14:05:51 2010
</span>        <span class="org-code">: Thu Jun 10 14:05:57 2010
</span>        <span class="org-code">: Thu Jun 10 14:06:00 2010
</span>
   </pre>
</content>
</entry>
<entry>
   <title>cant-open-indented-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-11-cant-open-indented-results.html"/>
   <updated>2010-06-11:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-11-cant-open-indented-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** can't open indented results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-11</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">   #+begin_src latex :packages '(("" "tikz") ("active,tightpage" "preview")) :file recursion.pdf
</span>     <span class="font-latex-sedate"><span class="keyword">\begin</span></span>{<span class="function-name">preview</span>}
     <span class="font-latex-sedate">\ovalbox</span>{
     <span class="font-latex-sedate"><span class="keyword">\begin</span></span>{<span class="function-name">tikzpicture</span>}
     <span class="font-latex-sedate">\node</span>{<span class="font-latex-math">$n$</span>}
       child {
         node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{2}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
           child{
             node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{4}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
             node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{4}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
           }
         }
       child{
         node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{2}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
         child{
           node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{4}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
           node{<span class="font-latex-math">$</span><span class="font-latex-sedate"><span class="font-latex-math">\left</span></span><span class="font-latex-math">(</span><span class="font-latex-sedate"><span class="font-latex-math">\frac</span></span><span class="font-latex-math">{n}{4}</span><span class="font-latex-sedate"><span class="font-latex-math">\right</span></span><span class="font-latex-math">)^</span><span class="font-latex-superscript"><span class="font-latex-math">2</span></span><span class="font-latex-math">$</span>}
         }
       };
     <span class="font-latex-sedate"><span class="keyword">\end</span></span>{<span class="function-name">tikzpicture</span>}
     }
     <span class="font-latex-sedate"><span class="keyword">\end</span></span>{<span class="function-name">preview}</span>
<span class="org-block-end-line">   #+end_src
</span>
   #+name:
   <span class="org-link">[[file:recursion.pdf]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>exporting-with-call-lines</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-11-exporting-with-call-lines.html"/>
   <updated>2010-06-11:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-11-exporting-with-call-lines.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting with call lines</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-11</span>
<span class="org-special-keyword">   :END:</span>
<span class="comment">#+name: rpn-to-alg(alg)</span>
<span class="comment">#+begin_src clojure :results output :var alg="00+"</span>
  (def binary-operators '(\+ \- \* \/))
  (def unary-operators '(\s))
  (defn rpn-to-alg [chars stack]
    (if (&gt; (.size chars) 0)
      (let [el (first chars)]
        (if (some #{el} binary-operators)
          (rpn-to-alg (rest chars)
                      (cons
                       (apply str "(" (or (second stack) 1) " " el " " (or (first stack) 1) ")")
                       (rest (rest stack))))
          (if (some #{el} unary-operators)
            (rpn-to-alg (rest chars)
                        (cons
                         (apply str "(" el " " (or (first stack) 1) ")")
                         (rest (rest stack))))
            (rpn-to-alg (rest chars) (cons el stack)))))
      (first stack)))
  (println (apply str (rpn-to-alg (seq alg) '())))
<span class="org-meta-line">#+end_src
</span>
<span class="org-meta-line">#+name: distributed-best
</span><span class="org-code">: 73*x11/+4/++51xxx13*y/++6y5*6/6-+xx+*
</span>
<span class="org-meta-line">#+call: rpn-to-alg(alg=distributed-best)
</span> 
   </pre>
</content>
</entry>
<entry>
   <title>simple-reference</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-13-simple-reference.html"/>
   <updated>2010-06-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-13-simple-reference.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple reference</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="comment">#+tblname: table-the-first</span>
<span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 6 |</span>
<span class="org-table">| 7 | 8 | 9 |</span>

<span class="comment">#+begin_src emacs-lisp :var data=table-the-first[1,1]</span>
  data
<span class="comment">#+end_src</span>

<span class="comment">#+name:</span>
<span class="org-code">: 5
</span>
   </pre>
</content>
</entry>
<entry>
   <title>dont-eat-me!</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-15-dont-eat-me!.html"/>
   <updated>2010-06-15:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-15-dont-eat-me!.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** don't eat me!</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-15</span>
<span class="org-special-keyword">   :END:</span>
1) a source block inside of an <span class="org-code">=enumerate=</span>
   #+begin_src emacs-lisp :exports results
     (list (list "I'm hungry" "I'm hungry")
           (list "I'm hungry" "I'm hungry")
           (list "I'm hungry" "I'm hungry"))
   #+end_src

   #+name:
   <span class="org-table">| I'm hungry | I'm hungry |</span>
   <span class="org-table">| I'm hungry | I'm hungry |</span>
   <span class="org-table">| I'm hungry | I'm hungry |</span>

   #+begin_src emacs-lisp
     (message "don't eat me")
   #+end_src

   can cause problems

2) source blocks should be able to be on adjacent lines

   </pre>
</content>
</entry>
<entry>
   <title>comments-not-commented</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-16-comments-not-commented.html"/>
   <updated>2010-06-16:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-16-comments-not-commented.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** comments not commented</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-16</span>
<span class="org-special-keyword">   :END:</span>

<span class="comment"># $some stuff</span>
<span class="comment"># some more stuff$ -- I should be a comment line</span>

1) a source block inside of an <span class="org-code">=enumerate=</span>
   #+name: plotxy
   #+begin_src emacs-lisp :exports results
     (message "I think so")
   #+end_src
   #+begin_src emacs-lisp
     (message "don't eat me")
   #+end_src
   

   can cause problems

2) how about this one...
   </pre>
</content>
</entry>
<entry>
   <title>foo-org</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-16-foo-org.html"/>
   <updated>2010-06-16:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-16-foo-org.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** foo org</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:session:</span>  <span class="org-property-value"><span class="bold">*R*</span></span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-16</span>
<span class="org-special-keyword">   :END:</span>
Figure \ref{fig:one} (p. \pageref{fig:one}) is produced by the following code
<span class="org-block-begin-line">#+BEGIN_SRC R 
</span>plot(x, y)
abline(out1)
<span class="org-block-end-line">#+END_SRC
</span>Note that <span class="org-code">=x=</span>, <span class="org-code">=y=</span>, and <span class="org-code">=out1=</span> are remembered from the preceding code
chunk.  We don't have to regenerate them.  All code chunks are part of
one R "session".
and more stuff here and then the results
<span class="org-meta-line">#+attr_latex: width=0.8\textwidth,placement=[p]
#+label: fig:one
#+caption: Scatter Plot with Regression Line
</span><span class="org-link">[[file:fig1.pdf]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>cache-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-17-cache-on-export.html"/>
   <updated>2010-06-17:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-17-cache-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** cache on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-17</span>
<span class="org-special-keyword">   :END:</span>
do we export cached blocks

<span class="org-block-begin-line">#+begin_src sh :cache yes :exports results
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[06ed73c6d8d022cf9c323d92af885952865add17]:
</span><span class="org-code">: Thu Jun 17 07:35:19 PDT 2010
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-17-tangling.html"/>
   <updated>2010-06-17:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-17-tangling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-17</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :shebang #!/bin/sh :tangle yes
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :shebang #!/bin/bash :tangle whoisme :exports both
</span>  <span class="builtin">echo</span> $<span class="variable-name">USER
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :tangle yes :comments yes
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"BAM"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src fortran :exports both
</span><span class="constant">  1+</span>8
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>multiple-evals-for-refs</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-25-multiple-evals-for-refs.html"/>
   <updated>2010-06-25:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-25-multiple-evals-for-refs.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** multiple evals for refs</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-25</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>setq counter 0<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 0
</span>
<span class="org-meta-line">#+name: counter
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>setq counter <span class="starter-kit-paren">(</span>+ 1 counter<span class="starter-kit-paren">))
</span>  counter
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var counter_val=counter
</span>  counter_val
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>protecting-block-bodies</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-25-protecting-block-bodies.html"/>
   <updated>2010-06-25:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-25-protecting-block-bodies.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** protecting block bodies</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-25</span>
<span class="org-special-keyword">   :END:</span>
neither of these work as expected

<span class="org-block-begin-line">#+begin_src org
</span>  ,#+TITLE: stuff
  
  ,#+begin_src emacs-lisp
  ,  (message "something")
  ,#+end_src
  
  ,more stuffs
  
  ,#+resname: something
  ,: value
  
  ,# and a comment
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src org
</span>  ,* example org
  
  ,# this is a comment
  ,this is not a comment
<span class="org-block-end-line">#+end_src
</span>

<span class="org-block-begin-line">#+begin_src org
</span>  ,* escaped org-mode markup
  
  ,this should be exported as is
  ,#+results: escaping-example
  ,: 24
<span class="org-block-end-line">#+end_src
</span>

<span class="org-block-begin-line">#+begin_html 
</span><span class="org-block">&lt;pre&gt;
#comment
#+end_src
&lt;/pre&gt;
</span><span class="org-block-end-line">#+end_html
</span>final

   </pre>
</content>
</entry>
<entry>
   <title>hlines-in-python</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-26-hlines-in-python.html"/>
   <updated>2010-06-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-26-hlines-in-python.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** hlines in python</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-26</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: many-cols
</span><span class="org-table">| a | b | c |</span>
<span class="org-table">|---+---+---|</span>
<span class="org-table">| d | e | f |</span>
<span class="org-table">|---+---+---|</span>
<span class="org-table">| g | h | i |</span>

<span class="org-meta-line">#+name: echo-table
</span><span class="org-block-begin-line">#+begin_src python :var tab=many-cols :hlines yes :exports both :session
</span>  <span class="keyword">return </span>tab
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var table=echo-table :exports none
</span>  <span class="starter-kit-paren">(</span>butlast <span class="starter-kit-paren">(</span>apply #'append <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list el 'hline<span class="starter-kit-paren">))</span> table<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: echo-table(tab=many-cols)
</span>
<span class="org-block-begin-line">#+begin_src python :exports results
</span>  <span class="keyword">return</span> [[<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>], [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"None of the above"</span>], [<span class="string">'1',</span> 2, 3]]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :exports results
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"Exist"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>possible-prefixes</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-26-possible-prefixes.html"/>
   <updated>2010-06-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-26-possible-prefixes.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** possible prefixes</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-26</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-table">| prefix   | remaining characters |</span>
<span class="org-table">|----------+----------------------|</span>
<span class="org-table">| ob-      |                    5 |</span>
<span class="org-table">| org-b-   |                    2 |</span>
<span class="org-table">| orgb-    |                    3 |</span>
<span class="org-table">| org-bbl- |                    0 |</span>
<span class="org-table">| bbl-     |                    4 |</span>
<span class="org-table">| babel-   |                    2 |</span>
<span class="org-meta-line">#+TBLFM: $2='(sbe leftover (prefix $$1))
</span>
<span class="org-meta-line">#+name: leftover
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var prefix=""
</span>  <span class="starter-kit-paren">(</span>-
   <span class="comment-delimiter">;; </span><span class="comment">length w/o .el
</span>   <span class="starter-kit-paren">(</span>- 13 <span class="starter-kit-paren">(</span>length <span class="string">".el"</span><span class="starter-kit-paren">))</span>
   <span class="comment-delimiter">;; </span><span class="comment">length of prefix
</span>   <span class="starter-kit-paren">(</span>length prefix<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>complex</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-28-complex.html"/>
   <updated>2010-06-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-28-complex.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** complex</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-28</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: raw-data
</span><span class="org-block-begin-line">#+begin_src sh :results scalar
</span>  wget --quiet -qO- <span class="string">"http://ogdi.cloudapp.net/v1/dc/RecreationParks?format=json"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: dc-parks
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var keys='(ward area) :var data=raw-data
</span>  <span class="starter-kit-paren">(</span>mapcar
    <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>lis<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>key<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>cdr <span class="starter-kit-paren">(</span>assoc key lis<span class="starter-kit-paren">)))</span> keys<span class="starter-kit-paren">))</span>
    <span class="starter-kit-paren">(</span>cdr <span class="starter-kit-paren">(</span>car <span class="starter-kit-paren">(</span><span class="keyword">with-temp-buffer</span>
                <span class="starter-kit-paren">(</span>insert data<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>goto-char <span class="starter-kit-paren">(</span>point-min<span class="starter-kit-paren">))</span>
                <span class="starter-kit-paren">(</span>json-read<span class="starter-kit-paren">)))))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: dc-parks-metric
</span><span class="org-block-begin-line">#+begin_src ruby :var data=dc-parks
</span>  data.map{|f| [f[0], 2.59 * f[1]]}
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R :var parkData=dc-parks-metric :file parks.png :session *R*
</span>  plot(parkData)
  title(main=<span class="string">"Park size by Ward")</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:parks.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>haskell-issues</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-28-haskell-issues.html"/>
   <updated>2010-06-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-28-haskell-issues.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** haskell issues</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-28</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src haskell
</span>  length [1, 2]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2
</span>
<span class="org-meta-line">#+tblname: example-4-haskell
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>
<span class="org-table">| 4 |</span>
<span class="org-table">| 5 |</span>
<span class="org-table">| 6 |</span>
<span class="org-table">| 7 |</span>

<span class="org-block-begin-line">#+begin_src haskell :var this=example-4-haskell
</span>  length this
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 7
</span>
   </pre>
</content>
</entry>
<entry>
   <title>table-label</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-28-table-label.html"/>
   <updated>2010-06-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-28-table-label.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** table-label</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-28</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+label: bam
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>booktabs</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-29-booktabs.html"/>
   <updated>2010-06-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-29-booktabs.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** booktabs</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-29</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: months
</span><span class="org-table">| num | Abbrev. |</span>
<span class="org-table">|-----+---------|</span>
<span class="org-table">|   1 | Jan.    |</span>
<span class="org-table">|   2 | Feb.    |</span>
<span class="org-table">|   3 | Mar.    |</span>

<span class="org-meta-line">#+call: booktabs(table=months, align="r|l") :results latex :exports results
</span>
   </pre>
</content>
</entry>
<entry>
   <title>captions</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-29-captions.html"/>
   <updated>2010-06-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-29-captions.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** captions</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-29</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+caption: I'm not removed from export
#+label: also-not-removed
</span><span class="org-table">| A | B |</span>
<span class="org-table">| 1 | 2 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>latex-literals-in-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-30-latex-literals-in-export.html"/>
   <updated>2010-06-30:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-30-latex-literals-in-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** latex literals in export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-30</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">  #+ATTR_LaTeX: width=\textwidth</span>
  <span class="org-link">[[./composite-pattern.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>table-comment-issue</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-06-30-table-comment-issue.html"/>
   <updated>2010-06-30:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-06-30-table-comment-issue.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** table comment issue</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-06-30</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+BEGIN_changemargin {-4.2cm}{0cm}
</span>  #+TBLNAME: AutresFPNVE
  #+ATTR_LaTeX: align=lrrrrr
  <span class="org-table">|   |                                          | Montant total (\EUR) | Taux amort (\%) | Part pro. (\%) | D&#233;duc (\%) | NVE (\EUR) |</span>
  <span class="org-table">|---+------------------------------------------+----------------------+-----------------+----------------+------------+------------|</span>
  <span class="org-table">|   | Documentation et formation               |                51.05 |                 |                |            |       0.00 |</span>
  <span class="org-table">|   | Communications GSM                       |               831.16 |             100 |             25 |        100 |     207.79 |</span>
  <span class="org-table">|   | Internet (Dommel)                        |               167.88 |             100 |             33 |        100 |      55.40 |</span>
  <span class="org-table">|   | Fournitures &#224; amortir (ordinateur + GSM) |               762.51 |              33 |             80 |        100 |     201.30 |</span>
  <span class="org-table">|   | Restaurant                               |               304.70 |             100 |            100 |         69 |     210.24 |</span>
  <span class="org-table">|---+------------------------------------------+----------------------+-----------------+----------------+------------+------------|</span>
  <span class="org-table">|   | Total                                    |                      |                 |                |            |    1062.02 |</span>
  <span class="org-table">|</span><span class="org-formula"> ^ |                                          |                      |                 |                |            |      Total </span><span class="org-table">|</span>
  #+tblfm: $7=$3*$4*$5*$6/1000000;%.2f::@2$3=51.05::@3$3=9.00+184.88+51.22+201.82+45.67+69.03+62.93+54.16+38.87+39.77+36.35+37.46::@4$3=12*13.99::@6$3=146.50+158.20;%.2f::@7$7=vsum(@-I..@-II);%.2f<span class="org-meta-line">
</span><span class="org-block-end-line">#+END_changemargin
</span>
save me!

<span class="org-block-begin-line">#+begin_src org
</span>  ,  #+TBLNAME: AutresFPNVE
  ,  #+ATTR_LaTeX: align=lrrrrr
  ,  |   |                                          | Montant total (\EUR) | Taux amort (\%) | Part pro. (\%) | D&#233;duc (\%) | NVE (\EUR) |
  ,  |---+------------------------------------------+----------------------+-----------------+----------------+------------+------------|
  ,  |   | Documentation et formation               |                51.05 |                 |                |            |       0.00 |
  ,  |   | Communications GSM                       |               831.16 |             100 |             25 |        100 |     207.79 |
  ,  |   | Internet (Dommel)                        |               167.88 |             100 |             33 |        100 |      55.40 |
  ,  |   | Fournitures &#224; amortir (ordinateur + GSM) |               762.51 |              33 |             80 |        100 |     201.30 |
  ,  |   | Restaurant                               |               304.70 |             100 |            100 |         69 |     210.24 |
  ,  |---+------------------------------------------+----------------------+-----------------+----------------+------------+------------|
  ,  |   | Total                                    |                      |                 |                |            |    1062.02 |
  ,  | ^ |                                          |                      |                 |                |            |      Total |
  ,  #+TBLFM: $7=$3*$4*$5*$6/1000000;%.2f::@2$3=51.05::@3$3=9.00+184.88+51.22+201.82+45.67+69.03+62.93+54.16+38.87+39.77+36.35+37.46::@4$3=12*13.99::@6$3=146.50+158.20;%.2f::@7$7=vsum(@-I..@-II);%.2f
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">#+tblname: example
| 1 | 2 |
</span><span class="org-block-end-line">#+end_example
</span>
   </pre>
</content>
</entry>
<entry>
   <title>python-errors</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-04-python-errors.html"/>
   <updated>2010-07-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-04-python-errors.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** python errors</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-04</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :session :results value
</span>  [1, [2], 3, 4]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | (2) | 3 | 4 |</span>

<span class="org-block-begin-line">#+begin_src ruby :results output :session
</span>  [1, 2, 3, 4, 6].map{|n| puts n}
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
: 2
: 3
: 4
: 6
</span>
<span class="org-block-begin-line">#+begin_src python :session :results output
</span>  <span class="keyword">print </span>9
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: R-with-colnames
</span><span class="org-table">| one |</span>
<span class="org-table">|-----|</span>
<span class="org-table">| 1   |</span>

<span class="org-block-begin-line">#+begin_src R :results output
</span>  <span class="string">"something"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1] "something"
</span>
<span class="org-block-begin-line">#+begin_src R :session *R* :results output
</span>  1
  2
  3
  4
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1] 1
: [1] 2
: [1] 3
: [1] 4
</span>
<span class="org-block-begin-line">#+begin_src perl :results output
</span>  print <span class="string">"8\n"</span>;
  print <span class="string">"9\n";</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
: 9
</span>
<span class="org-block-begin-line">#+begin_src clojure
</span>  <span class="starter-kit-paren">(</span><span class="builtin">+</span> 8 7<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 15
</span>
<span class="org-block-begin-line">#+begin_src clojure :session *clj*
</span>  <span class="starter-kit-paren">(</span><span class="builtin">println</span> <span class="string">"eric"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: nil
</span>
<span class="org-block-begin-line">#+begin_src perl :results value
</span>  8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
<span class="org-block-begin-line">#+begin_src c++ :includes '(&lt;stdio.h&gt; &lt;math.h&gt; &lt;cstdlib&gt; &lt;time.h&gt;)
</span>  printf(<span class="string">"eric schulte\n")</span>;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: eric schulte
</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo </span>78
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 78
</span>
   </pre>
</content>
</entry>
<entry>
   <title>dot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-06-dot.html"/>
   <updated>2010-07-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-06-dot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** dot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src dot :file models.png :cmdline -Tpng
</span>  digraph <span class="function-name">data</span>_relationships {
    <span class="string">"data_requirement"</span> [<span class="variable-name">shape=</span><span class="constant">Mrecord</span>, <span class="variable-name">label=</span><span class="string">"{DataRequirement|description\lformat\l}"</span>]
    <span class="string">"data_product"</span> [<span class="variable-name">shape=</span><span class="constant">Mrecord</span>, <span class="variable-name">label=</span><span class="string">"{DataProduct|name\lversion\lpoc\lformat\l}"</span>]
    <span class="string">"data_requirement"</span> -&gt; <span class="string">"data_product"
</span>  }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:models.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>tom-found-a-bug</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-06-tom-found-a-bug.html"/>
   <updated>2010-07-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-06-tom-found-a-bug.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** Tom found a bug</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :tangle something.el
</span>  <span class="starter-kit-paren">(</span>list 1 <span class="starter-kit-paren">(</span>+ 2 3<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 5 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>scratch</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-08-scratch.html"/>
   <updated>2010-07-08:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-08-scratch.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** scratch</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-08</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :exports results
</span>  <span class="starter-kit-paren">(</span>+ 1 1 1 1<span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>setq org-export-babel-evaluate t<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
and now for src_emacs-lisp{87} an inline block

looking at paths
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>buffer-file-name<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>export-blocks-without-languages</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-09-export-blocks-without-languages.html"/>
   <updated>2010-07-09:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-09-export-blocks-without-languages.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** export blocks w/o languages</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-09</span>
<span class="org-special-keyword">   :END:</span>
should raise an error

source
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="comment-delimiter">;; </span><span class="comment">this is a comment
</span>  <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
broken source
<span class="org-block-begin-line">#+begin_src 
</span><span class="org-block">  (+ 2 2 2)
</span><span class="org-block-end-line">#+end_src
</span>
example
<span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  this is exampled
</span><span class="org-block-end-line">#+end_example
</span>
<span class="org-block-begin-line">#+begin_src ruby
</span>  <span class="comment-delimiter"># </span><span class="comment">this is the first
 </span> [1, 2, 3, 4, 5].map{|r| r+1}
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-r-and-load</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-09-tangle-r-and-load.html"/>
   <updated>2010-07-09:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-09-tangle-r-and-load.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle R and load</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">with-comments.r</span>
   <span class="org-special-keyword">:comments:</span> <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-09</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :tangle no
</span>  z <span class="constant">&lt;- </span>0
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R
</span>  x <span class="constant">&lt;- </span>8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R
</span>  y <span class="constant">&lt;- </span>9
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: i-have-a-name
</span><span class="org-block-begin-line">#+begin_src R 
</span>  x+y+z
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>example-without-source-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-12-example-without-source-name.html"/>
   <updated>2010-07-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-12-example-without-source-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** example w/o source name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2010-07-12
<span class="org-special-keyword">   :END:</span>

delete emacs-lisp below for errors
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>* <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>fixing-result-insertion</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-12-fixing-result-insertion.html"/>
   <updated>2010-07-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-12-fixing-result-insertion.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** fixing result insertion</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-12</span>
<span class="org-special-keyword">   :END:</span>
needs to replace the results when there is a new hash

<span class="org-level-3">*** normal results</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-12</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Mon Jul 12 22:18:16 PDT 2010
</span>
<span class="org-level-3">*** unnamed source block results</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-12</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes
</span>  <span class="starter-kit-paren">(</span>+ 1 2 3 4<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[16a776d6d139e1d39e99d736536a546df115c2dc]:
</span><span class="org-code">: 10
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes
</span>  <span class="starter-kit-paren">(</span>list '<span class="starter-kit-paren">(</span>1 2 3<span class="starter-kit-paren">)</span> '<span class="starter-kit-paren">(</span>4 5 6<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[53f489ed6977857b9945d79d06e575b2cbbebf11]:
</span><span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 6 |</span>

<span class="org-level-3">*** named source block results</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-12</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-meta-line">#+name: something-w-table
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>sleep-for 2<span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>list '<span class="starter-kit-paren">(</span>1 2 3<span class="starter-kit-paren">)</span> '<span class="starter-kit-paren">(</span>4 5 8<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: something
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes
</span>  <span class="starter-kit-paren">(</span>+ 1 2 3 4 8<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enimad
minim veniam, quis nostrud exercitation ullamco laboris nisi ut
aliquip ex ea commodo consequat. Duis aute irure dolor in
reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim id est laborum.

<span class="comment"># something else</span>
<span class="org-meta-line">#+name[d053f6643d9dc52a0e804c15f2a762da73a00a07]: something
</span><span class="org-code">: 18
</span>
<span class="org-meta-line">#+attr_latex: width=0.4\textwidth
#+name[5fac69648ab749ef9ee88ea65b3d49d93f3f6cc8]: something-w-table
</span><span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 8 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>limited-precision</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-12-limited-precision.html"/>
   <updated>2010-07-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-12-limited-precision.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** limited precision</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-12</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: anova-example
</span><span class="org-table">| Effect | DFn | DFd |             SSn |              SSd |                F |                    p | p&lt;.05 |              pes |</span>
<span class="org-table">|--------+-----+-----+-----------------+------------------+------------------+----------------------+-------+------------------|</span>
<span class="org-table">| Days   |   9 | 153 | 166235.12250176 | 151101.038615303 | 18.7026979326383 | 8.99534541600196e-21 | *     | 0.52384550792003 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var tab=anova-example :colnames yes :cache yes
</span>  <span class="starter-kit-paren">(</span>mapcar
   <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span>
     <span class="starter-kit-paren">(</span>mapcar
      <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>cell<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>numberp cell<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>format <span class="string">"%.4f"</span> cell<span class="starter-kit-paren">)</span> cell<span class="starter-kit-paren">))</span>
      row<span class="starter-kit-paren">))</span>
   tab<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[16ac354f1e7a65594bb59e252ab221e6a4b10f80]:
</span><span class="org-table">| Effect |    DFn |      DFd |         SSn |         SSd |       F |                    p | p&lt;.05 |    pes |</span>
<span class="org-table">|--------+--------+----------+-------------+-------------+---------+----------------------+-------+--------|</span>
<span class="org-table">| Days   | 9.0000 | 153.0000 | 166235.1225 | 151101.0386 | 18.7027 | 8.99534541600196e-21 | *     | 0.5238 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>input-from-an-example-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-13-input-from-an-example-block.html"/>
   <updated>2010-07-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-13-input-from-an-example-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** input from an example block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: lorem
</span><span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
  eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut
  enimad minim veniam, quis nostrud exercitation ullamco laboris nisi
  ut aliquip ex ea commodo consequat. Duis aute irure dolor in
  reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
  pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
  culpa qui officia deserunt mollit anim id est laborum.
</span><span class="org-block-end-line">#+end_example
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var lorem=lorem
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"%d words in Lorem"</span> <span class="starter-kit-paren">(</span>length <span class="starter-kit-paren">(</span>split-string lorem<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 68 words in Lorem
</span>
<span class="org-meta-line">#+name: 1D
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>
<span class="org-table">| 4 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var lst=1D[:,0]
</span>  lst
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
</span>
   </pre>
</content>
</entry>
<entry>
   <title>palendromic-primes</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-20-palendromic-primes.html"/>
   <updated>2010-07-20:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-20-palendromic-primes.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** palendromic primes</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-20</span>
<span class="org-special-keyword">   :END:</span>
Note that because Haskell is funny about what can be typed into the
interpreter, the following should be loaded with
<span class="org-code">=org-babel-load-in-session=</span>.
<span class="org-block-begin-line">#+begin_src haskell
</span>  palendromic_primes <span class="variable-name">=</span> [x <span class="variable-name">|</span> x <span class="variable-name">&lt;-</span> [1<span class="variable-name">..</span>], prime x, palendrome x]
      <span class="keyword">where</span>
        factors n <span class="variable-name">=</span> [x <span class="variable-name">|</span> x <span class="variable-name">&lt;-</span> [1<span class="variable-name">..</span>floor(sqrt(fromIntegral(n)))], n <span class="variable-name">`mod`</span> x <span class="variable-name">==</span> 0]
        prime n <span class="variable-name">=</span> factors n <span class="variable-name">==</span> [1]
        primes <span class="variable-name">=</span> [x <span class="variable-name">|</span> x <span class="variable-name">&lt;-</span> [2<span class="variable-name">..</span>], prime x]
        palendrome n <span class="variable-name">=</span> show(n) <span class="variable-name">==</span> reverse(show(n))
  
  palendromic_prime_distances <span class="variable-name">=</span> map (<span class="variable-name">\</span>(x,y)<span class="variable-name">-&gt;</span> y<span class="variable-name">-</span>x) neighbors
      <span class="keyword">where</span>
        neighbors <span class="variable-name">= </span>(zip palendromic_primes (tail palendromic_primes))
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: palendromic_prime_distances
</span><span class="org-block-begin-line">#+begin_src haskell
</span>  take 180 (zip [1<span class="variable-name">..]</span> palendromic_prime_distances)
<span class="org-block-end-line">#+end_src
</span>
For high-quality png output from gnuplot, the following sequence of
graphing to a <span class="org-code">=.eps=</span> file, and then converting to a <span class="org-code">=.png=</span> can be
useful.
<span class="org-meta-line">#+name: dist-graph
</span><span class="org-block-begin-line">#+begin_src gnuplot :var data=palendromic_prime_distances :file pps.eps
</span>  <span class="constant">set</span> term postscript landscape color enhanced
  <span class="constant">set</span> <span class="function-name">log</span> y
  <span class="constant">set</span> <span class="type">title</span> "distance between consecutive palendromic primes"
  <span class="keyword">plot</span> "$data" <span class="type">with</span> fs <span class="type">notitle
</span><span class="org-block-end-line">#+end_src
</span>
The <span class="org-code">=convert=</span> command is part of the <span class="org-link">[[http://www.imagemagick.org/script/index.php][imagemagick]]</span> suite.
<span class="org-block-begin-line">#+begin_src sh :var input=dist-graph :results file
</span>  convert -depth 300 -rotate 90 $<span class="variable-name">input</span> pps.png
  <span class="builtin">echo</span> <span class="string">"pps.png"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>caption-on-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-22-caption-on-code-block.html"/>
   <updated>2010-07-22:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-22-caption-on-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** caption on code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-22</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+caption: Examples of variable declaration.
#+label: sql-block
</span><span class="org-block-begin-line">#+begin_src sql
</span>SELECT 6*9;
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>colnames-to-specific-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-07-22-colnames-to-specific-variables.html"/>
   <updated>2010-07-22:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-07-22-colnames-to-specific-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** colnames to specific variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-07-22</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: spec-colnames
</span><span class="org-table">| one | two | thee |</span>
<span class="org-table">|-----+-----+------|</span>
<span class="org-table">| 1   | 2   | 3    |</span>

<span class="org-meta-line">#+tblname: nospec-colnames
</span><span class="org-table">| three | two | one |</span>
<span class="org-table">|-------+-----+-----|</span>
<span class="org-table">|     3 |   2 |   1 |</span>

<span class="org-block-begin-line">#+begin_src python :var nospec=nospec-colnames :var spec=spec-colnames :colnames '(spec)
</span>  <span class="keyword">return </span>nospec
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| one   | two | thee |</span>
<span class="org-table">|-------+-----+------|</span>
<span class="org-table">| three | two | one  |</span>
<span class="org-table">| 3     | 2   | 1    |</span>

   </pre>
</content>
</entry>
<entry>
   <title>comments-in-r-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-12-comments-in-r-blocks.html"/>
   <updated>2010-08-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-12-comments-in-r-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** comments in R blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-12</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :session *R* :results output
</span>  <span class="comment-delimiter"># </span><span class="comment">this is a comment
</span>  x <span class="constant">&lt;-</span> rnorm(1)
  <span class="comment-delimiter"># </span><span class="comment">this is another comment
 </span> x
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 
: [1] 1.320853
</span>
   </pre>
</content>
</entry>
<entry>
   <title>importing-the-output-of-ledger</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-12-importing-the-output-of-ledger.html"/>
   <updated>2010-08-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-12-importing-the-output-of-ledger.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** importing the output of ledger</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-12</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: ledger-output
</span><span class="org-block-begin-line">#+begin_example 
</span><span class="org-block">  09-Aug-21 CHEQUE : 9953055                    Expenses:Unknown                                    166.70 EUR            166.70 EUR
  09-Sep-17 CHEQUE : 7691785                    Expenses:Unknown                                    100.00 EUR            266.70 EUR
  09-Oct-16 REMISE CHEQUE N 8686318 001 105     Expenses:Unknown                                   -525.00 EUR           -258.30 EUR
</span><span class="org-block-end-line">#+end_example
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var ledger=ledger-output
</span>  <span class="starter-kit-paren">(</span><span class="keyword">with-temp-buffer</span>
    <span class="starter-kit-paren">(</span>insert ledger<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>message ledger<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>org-table-convert-region <span class="starter-kit-paren">(</span>point-min<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>point-max<span class="starter-kit-paren">)</span> 2<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>org-table-to-lisp<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 09-Aug-21 CHEQUE : 9953055                | Expenses:Unknown | 166.70 EUR  | 166.70 EUR  |</span>
<span class="org-table">| 09-Sep-17 CHEQUE : 7691785                | Expenses:Unknown | 100.00 EUR  | 266.70 EUR  |</span>
<span class="org-table">| 09-Oct-16 REMISE CHEQUE N 8686318 001 105 | Expenses:Unknown | -525.00 EUR | -258.30 EUR |</span>

   </pre>
</content>
</entry>
<entry>
   <title>lisp</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-12-lisp.html"/>
   <updated>2010-08-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-12-lisp.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lisp</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-12</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src lisp :var n=5
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>* el el<span class="starter-kit-paren">))</span> <span class="starter-kit-paren">(</span>append '<span class="starter-kit-paren">(</span>1 7 3 4<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list n<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 49 | 9 | 16 | 25 |</span>

<span class="org-meta-line">#+name: short-list
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-block-begin-line">#+begin_src lisp :var lst=short-list :session t
</span>  <span class="starter-kit-paren">(</span>+ 1 <span class="starter-kit-paren">(</span>length lst<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 4
</span>
   </pre>
</content>
</entry>
<entry>
   <title>lob----writing-results-out-to-files</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-12-lob----writing-results-out-to-files.html"/>
   <updated>2010-08-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-12-lob----writing-results-out-to-files.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lob -- writing results out to files</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-12</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: table
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>mapcar
   <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>number-sequence el <span class="starter-kit-paren">(</span>+ el 3<span class="starter-kit-paren">)))</span>
   <span class="starter-kit-paren">(</span>number-sequence 0 4<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
writes the results out as csv file
<span class="org-meta-line">#+call: write(data=table, file="~/Desktop/example.csv") :results silent
</span>
writes the results out as tab separated file
<span class="org-meta-line">#+call: write(data=table, file="~/Desktop/example.tsv") :results silent
</span>
write the results out as a normal org-mode file
<span class="org-meta-line">#+call: write(data=table, file="~/Desktop/example.org") :results silent
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-r-and-load</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-12-tangle-r-and-load.html"/>
   <updated>2010-08-12:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-12-tangle-r-and-load.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle R and load</span>
<span class="org-special-keyword">  :PROPERTIES:</span>
  <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">to-load.r</span>
  <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-12</span>
<span class="org-special-keyword">  :END:</span>

evaluate this
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent :tangle no
</span>  <span class="starter-kit-paren">(</span>setq org-babel-post-tangle-hook nil<span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>add-hook 'org-babel-post-tangle-hook
            <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">()</span> <span class="starter-kit-paren">(</span>ess-load-file <span class="starter-kit-paren">(</span>buffer-file-name<span class="starter-kit-paren">))))
</span><span class="org-block-end-line">#+end_src
</span>
then tangle

<span class="org-block-begin-line">#+begin_src R :comments yes
</span>x <span class="constant">&lt;- </span>10
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R
</span> y <span class="constant">&lt;- </span>9
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R :tangle file2.R
</span> y <span class="constant">&lt;- </span>9
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ledger-example-output-text</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-13-ledger-example-output-text.html"/>
   <updated>2010-08-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-13-ledger-example-output-text.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ledger example output text</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: ledger-stuff
</span><span class="org-block-begin-line">#+begin_example
</span><span class="org-block">09-Aug-21 CHEQUE : 9953055                    Expenses:Unknown                                    166.70 EUR            166.70 EUR
09-Sep-17 CHEQUE : 7691785                    Expenses:Unknown                                    100.00 EUR            266.70 EUR
09-Oct-16 REMISE CHEQUE N 8686318 001 105     Expenses:Unknown                                   -525.00 EUR           -258.30 EUR
</span><span class="org-block-end-line">#+end_example
</span>
<span class="org-block-begin-line">#+begin_src sh :var stuff=ledger-stuff
</span>  <span class="builtin">echo</span> <span class="string">"$stuff"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>org-results-and-replace</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-18-org-results-and-replace.html"/>
   <updated>2010-08-18:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-18-org-results-and-replace.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** org results and replace</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-18</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results org
</span>  <span class="string">"| 1 | 2 |
| 2 | 3 |"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |</span>
<span class="org-table">| 2 | 3 |</span>

<span class="org-block-begin-line">#+begin_src R
</span>  rnorm(1)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R
</span>  numbers <span class="constant">&lt;-</span> matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=<span class="type">TRUE)</span>
  numbers
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 51 | 43 | 22 |</span>
<span class="org-table">| 92 | 28 | 21 |</span>
<span class="org-table">| 68 | 22 |  9 |</span>

<span class="org-block-begin-line">#+begin_src R :colnames yes
</span>  numbers <span class="constant">&lt;-</span> matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=<span class="type">TRUE)</span>
  numbers
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| V1 | V2 | V3 |</span>
<span class="org-table">|----+----+----|</span>
<span class="org-table">| 51 | 43 | 22 |</span>
<span class="org-table">| 92 | 28 | 21 |</span>
<span class="org-table">| 68 | 22 |  9 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>issues-with-shell-evaluation</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-25-issues-with-shell-evaluation.html"/>
   <updated>2010-08-25:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-25-issues-with-shell-evaluation.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** issues with shell evaluation</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-25</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results silent
</span>  <span class="builtin">cd </span>~/src/org/
  make
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>not-caching</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-25-not-caching.html"/>
   <updated>2010-08-25:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-25-not-caching.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** not caching</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:session:</span>  <span class="org-property-value"><span class="bold">*R*</span></span>
   <span class="org-special-keyword">:results:</span>  <span class="org-property-value">output</span>
   <span class="org-special-keyword">:exports:</span>  <span class="org-property-value">both</span>
   :cache:    yes
   :DATE:     2010-08-25
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :noeval
</span>  cat(<span class="string">"random result:"</span>, runif(1), <span class="string">"\n")</span>
  Sys.sleep(2)
  alarm()
<span class="org-block-end-line">#+end_src 
</span>
<span class="org-block-begin-line">#+begin_src R :noeval
</span>  cat(<span class="string">"random result:"</span>, runif(1), <span class="string">"\n")</span>
  Sys.sleep(2)
  alarm()
<span class="org-block-end-line">#+end_src 
</span>
<span class="org-level-3">*** cache on export</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-25</span>
<span class="org-special-keyword">    :END:</span>
do we export cached blocks

<span class="org-block-begin-line">#+begin_src emacs-lisp :cache yes :exports results
</span>  <span class="starter-kit-paren">(</span>random<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[46632b4fe2e3a23e847953c95adcba58c270b381]:
</span><span class="org-code">: 490528137
</span>
<span class="org-level-3">*** looks like this is a problem with info collection</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    :DATE:     2010-08-25
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>format <span class="string">"%S"</span> info<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results scalar :exports results :tangle yes :comments yes
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list <span class="starter-kit-paren">(</span>car el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>cdr el<span class="starter-kit-paren">)))</span> <span class="starter-kit-paren">(</span>nth 2 info<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[4184710f118ac768ea0d90632508792d695efd7a]:
</span><span class="org-table">| :cache    | yes                   |</span>
<span class="org-table">| :colnames | no                    |</span>
<span class="org-table">| :comments | yes                   |</span>
<span class="org-table">| :exports  | results               |</span>
<span class="org-table">| :hlines   | yes                   |</span>
<span class="org-table">| :noweb    | no                    |</span>
<span class="org-table">| :results  | output replace scalar |</span>
<span class="org-table">| :session  | </span><span class="org-table"><span class="bold">*R*</span></span><span class="org-table">                   |</span>
<span class="org-table">| :shebang  |                       |</span>
<span class="org-table">| :tangle   | yes                   |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :exports results
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"calculating info"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>org-babel-sha1-hash info<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[0427db66afdc95462d1c8514b662829987d71ff5]:
</span><span class="org-code">: 0427db66afdc95462d1c8514b662829987d71ff5
</span>
   </pre>
</content>
</entry>
<entry>
   <title>duplicate-results-on-execute-subtree</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-26-duplicate-results-on-execute-subtree.html"/>
   <updated>2010-08-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-26-duplicate-results-on-execute-subtree.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** duplicate results on execute subtree</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results org :exports results
</span>  <span class="string">"- first
- second
- third
"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_SRC org
</span>- first
- second
- third
<span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-and-noeval</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-26-eval-and-noeval.html"/>
   <updated>2010-08-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-26-eval-and-noeval.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval and noeval</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-26</span>
<span class="org-special-keyword">   :END:</span>
date, should export both, but won't output results because of presence
of the <span class="org-code">=:noeval=</span> header argument.
<span class="org-block-begin-line">#+begin_src sh :noeval :exports both
</span>  date
<span class="org-block-end-line">#+end_src
</span>
should export code, so no need to do anything
<span class="org-block-begin-line">#+begin_src sh
</span>  date
<span class="org-block-end-line">#+end_src
</span>
should export nothing, and should not query
<span class="org-meta-line">#+name: this-is-ls
</span><span class="org-block-begin-line">#+begin_src sh :eval query :exports code
</span>  date
<span class="org-block-end-line">#+end_src
</span>
should export results, and should trigger query above
<span class="org-block-begin-line">#+begin_src emacs-lisp :var ls=this-is-ls :exports results
</span>  ls
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-for-side-effect-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-26-eval-for-side-effect-on-export.html"/>
   <updated>2010-08-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-26-eval-for-side-effect-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval for side effect on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-26</span>
<span class="org-special-keyword">   :END:</span>
- one plus one
  #+name: one-plus-one
  #+begin_src emacs-lisp :exports none :results silent
    (+ 1 1)
  #+end_src
- plus one is
  #+begin_src emacs-lisp :var two=one-plus-one :exports both
    (+ 1 two)
  #+end_src

   </pre>
</content>
</entry>
<entry>
   <title>trying-out-plantuml</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-26-trying-out-plantuml.html"/>
   <updated>2010-08-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-26-trying-out-plantuml.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** trying out plantuml</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-26</span>
<span class="org-special-keyword">   :END:</span>
setup
<span class="comment">#+begin_src emacs-lisp :results silent</span>
  (require 'ob-plantuml)
  (setq org-plantuml-jar-path "~/src/org/contrib/scripts/plantuml.jar")
<span class="org-meta-line">#+end_src
</span>
usage -- sequence diagram
<span class="org-block-begin-line">#+begin_src plantuml :file tryout.png
</span>  Alice -&gt; Bob: synchronous call
  Alice -&gt;&gt; Bob: asynchronous call
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:tryout.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>wrapping-up-rawithoutrg-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-26-wrapping-up-rawithoutrg-results.html"/>
   <updated>2010-08-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-26-wrapping-up-rawithoutrg-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** wrapping up raw/org results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results org :exports results
</span>  <span class="string">"- first
  - second
  - third
  "
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_SRC org
</span>- first
- second
- third
<span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>initial-javascript-support</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-27-initial-javascript-support.html"/>
   <updated>2010-08-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-27-initial-javascript-support.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** initial javascript support</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-27</span>
<span class="org-special-keyword">   :END:</span>
using node.js

<span class="org-block-begin-line">#+begin_src js
</span>  <span class="keyword">var</span> <span class="variable-name">n</span> = 0;
  n = n+1;
  <span class="keyword">return </span>n
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
</span>
<span class="org-meta-line">#+name: cars
</span><span class="org-block-begin-line">#+begin_src js
</span>  <span class="keyword">var</span> <span class="variable-name">cars</span> = [<span class="string">"Saab"</span>,<span class="string">"Volvo"</span>,<span class="string">"BMW"</span>];
  <span class="keyword">return </span>cars;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: cars
</span><span class="org-table">| Saab | Volvo | BMW |</span>

<span class="org-block-begin-line">#+begin_src js :var cars=cars
</span>  <span class="keyword">return </span>cars[0][0];
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Saab
</span>
<span class="org-block-begin-line">#+begin_src js :var cars=cars
</span>  <span class="keyword">return </span>cars[0].length;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>initial-scheme-support</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-27-initial-scheme-support.html"/>
   <updated>2010-08-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-27-initial-scheme-support.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** initial scheme support</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: numbers
</span><span class="org-block-begin-line">#+begin_src scheme
</span>  <span class="starter-kit-paren">(</span><span class="keyword">map</span> <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>+ el 1<span class="starter-kit-paren">))</span> '<span class="starter-kit-paren">(</span>1 2 3<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 2 | 3 | 4 |</span>

<span class="org-block-begin-line">#+begin_src scheme :var numbers=numbers
</span>  <span class="starter-kit-paren">(</span><span class="keyword">map</span> <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>- el 1<span class="starter-kit-paren">))</span> numbers<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 | 3 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>pulling-information-from-tags</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-30-pulling-information-from-tags.html"/>
   <updated>2010-08-30:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-30-pulling-information-from-tags.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** pulling information from tags                                       </span><span class="org-level-2"><span class="org-tag">:blue:</span></span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-30</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :var color=(car (org-get-tags-at (point))) :tangle example.R
</span>  color
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: blue
</span>
   </pre>
</content>
</entry>
<entry>
   <title>conditional-tangling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-31-conditional-tangling.html"/>
   <updated>2010-08-31:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-31-conditional-tangling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** conditional tangling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2010-08-31
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq tangle-tag <span class="string">"right"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-level-3">*** first subheading                                                   </span><span class="org-level-3"><span class="org-tag">:left:</span></span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-31</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src R :tangle (and (equal (car (org-get-tags-at (point))) tangle-tag) "yes")
</span>  <span class="string">"first"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-level-3">*** second subheading                                                 </span><span class="org-level-3"><span class="org-tag">:right:</span></span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-31</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src R :tangle (and (equal (car (org-get-tags-at (point))) tangle-tag) "yes")
</span>  <span class="string">"second"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>scheme-sessions</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-08-31-scheme-sessions.html"/>
   <updated>2010-08-31:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-08-31-scheme-sessions.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** scheme sessions</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-08-31</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src scheme :var number=9 :session *scheme* :scheme guile
</span>  <span class="starter-kit-paren">(</span>+ number 0<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 9
</span>
<span class="org-block-begin-line">#+begin_src scheme :var number=9 :session *scheme* :scheme racket
</span>  <span class="starter-kit-paren">(</span>+ number 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 10
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ditaa-with-tilda-in-path</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-01-ditaa-with-tilda-in-path.html"/>
   <updated>2010-09-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-01-ditaa-with-tilda-in-path.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ditaa with tilda in path</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-01</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ditaa :file example.png
</span>    +--------------+
    |              |
    |              |
    |              |
    |              |
    |              |
    +--------------+
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>:session-evaluation-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-01-:session-evaluation-on-export.html"/>
   <updated>2010-09-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-01-:session-evaluation-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** :session evaluation on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-01</span>
<span class="org-special-keyword">   :END:</span>
This first block is evaluated but <span class="italic">/doesn't/</span> appear in export.

<span class="italic">/:session *R* :exports none/</span>
<span class="org-block-begin-line">#+begin_src R :session *R* :exports none
</span>  x <span class="constant">&lt;- </span>8
<span class="org-block-end-line">#+end_src
</span>
This second block <span class="italic">/does/</span> appear in export.

<span class="org-block-begin-line">#+begin_src R :session *R* :exports results
</span>  x
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>quoting-header-args-(e.g.-:cmdline)</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-03-quoting-header-args-(e.g.-:cmdline).html"/>
   <updated>2010-09-03:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-03-quoting-header-args-(e.g.-:cmdline).html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** quoting header args (e.g. :cmdline)</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-03</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src C :cmdline 1 2 3 4 5 :includes &lt;stdio.h&gt;
</span>  <span class="type">int</span> <span class="function-name">main</span>(<span class="type">int</span> <span class="variable-name">argc</span>, <span class="type">char</span> **<span class="variable-name">argv</span>){
    printf(<span class="string">"argv[1] %s\n"</span>, argv[1]);
    <span class="keyword">return </span>0;
  }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: argv[1] 1
</span>
   </pre>
</content>
</entry>
<entry>
   <title>:var-(buffer-file-name)</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-03-:var-(buffer-file-name).html"/>
   <updated>2010-09-03:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-03-:var-(buffer-file-name).html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** :var (buffer-file-name)</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-03</span>
<span class="org-special-keyword">   :END:</span>
during export (buffer-file-name) will return nil because the temporary
export buffer is not visiting any file.

<span class="italic">/file=(vc-working-revision (buffer-file-name))/</span>
<span class="org-block-begin-line">#+begin_src sh :var file=(vc-working-revision (or (buffer-file-name) "")) :exports results
</span>  <span class="builtin">echo</span> $<span class="variable-name">file </span>Revision
<span class="org-block-end-line">#+end_src
</span>
<span class="italic">/file=(vc-working-revision (or (buffer-file-name) org-current-export-file))/</span>
<span class="org-block-begin-line">#+begin_src sh :var file=(vc-working-revision (or (buffer-file-name) org-current-export-file)) :exports results
</span>  <span class="builtin">echo</span> $<span class="variable-name">file </span>Revision
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangling-with-full-comments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-04-tangling-with-full-comments.html"/>
   <updated>2010-09-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-04-tangling-with-full-comments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling with full comments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:comments:</span> <span class="org-property-value">org</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">full-comments.el</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-04</span>
<span class="org-special-keyword">   :END:</span>
The top block
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"first block"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
here's some text which won't be tangled

<span class="org-level-3">*** subheading</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-04</span>
<span class="org-special-keyword">    :END:</span>
another block
<span class="org-table">| 1 | first  |</span>
<span class="org-table">| 2 | second |</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"second"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
and finally a block with a <span class="org-code">=:noweb=</span> header argument
<span class="org-block-begin-line">#+begin_src emacs-lisp :noweb yes
</span>  <span class="starter-kit-paren">(</span><span class="keyword">progn</span>
    &lt;&lt;tangle-el-the-second&gt;&gt;<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>customizable-comment-formats</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-05-customizable-comment-formats.html"/>
   <updated>2010-09-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-05-customizable-comment-formats.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** customizable comment formats</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:comments:</span> <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-05</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-babel-tangle-comment-format-beg <span class="string">"{-# LINE %start-line \"%file\" #-}"</span>
        org-babel-tangle-comment-format-end <span class="string">""</span>
        org-babel-tangle-pad-newline<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src haskell :tangle Main.hs
</span>  test <span class="variable-name">=</span> length
  main <span class="variable-name">=</span> print <span class="variable-name">$ </span>test [1,2,3]
<span class="org-block-end-line">#+end_src
</span>
I would like the following output in the tangled file Main.hs:

<span class="org-code">: {-# LINE 4 "Haskell.org" #-}
: test = length
: main = print $ test [1,2,3]
</span>
   </pre>
</content>
</entry>
<entry>
   <title>comparative-speed-of-python-evaluation</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-07-comparative-speed-of-python-evaluation.html"/>
   <updated>2010-09-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-07-comparative-speed-of-python-evaluation.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** comparative speed of python evaluation</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-07</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :session test
</span>  2+2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 4
</span>
<span class="org-block-begin-line">#+begin_src python
</span>  <span class="keyword">return </span>2+2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 4
</span>
<span class="org-block-begin-line">#+begin_src python :session test
</span><span class="keyword">def</span> <span class="function-name">add</span>(a,b):
   <span class="keyword">return</span> a+b
<span class="keyword">def</span> <span class="function-name">sub</span>(a,b):
   <span class="keyword">return </span>a-b
add(sub(10,1),sub(10,2))
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: org_babel_python_eoe
</span>
   </pre>
</content>
</entry>
<entry>
   <title>remove-results-when-nil-is-returned</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-07-remove-results-when-nil-is-returned.html"/>
   <updated>2010-09-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-07-remove-results-when-nil-is-returned.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** remove results when nil is returned</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-07</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">progn</span> <span class="starter-kit-paren">(</span>+ 1 1<span class="starter-kit-paren">)</span> nil<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-org-mode-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-07-tangle-org-mode-block.html"/>
   <updated>2010-09-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-07-tangle-org-mode-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle org-mode block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-07</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: org-list
</span><span class="org-block-begin-line">#+begin_src org :results latex
</span>  - one
  - two
  - three
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :tangle example.tangled :noweb yes
</span>  <span class="string">"
  &lt;&lt;org-list()&gt;&gt;
  "
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>empty-string-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-08-empty-string-results.html"/>
   <updated>2010-09-08:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-08-empty-string-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** empty-string results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-08</span>
<span class="org-special-keyword">   :END:</span>
test me one two 3

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span><span class="org-block-end-line">#+end_src
</span>
More test

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>mapcar
   <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>pair<span class="starter-kit-paren">)</span>
     <span class="starter-kit-paren">(</span>list <span class="starter-kit-paren">(</span>car pair<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>cdr pair<span class="starter-kit-paren">)))</span>
   params<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| :cache    | no      |</span>
<span class="org-table">| :colnames | no      |</span>
<span class="org-table">| :comments |         |</span>
<span class="org-table">| :exports  | code    |</span>
<span class="org-table">| :hlines   | yes     |</span>
<span class="org-table">| :noweb    | no      |</span>
<span class="org-table">| :results  | replace |</span>
<span class="org-table">| :session  | none    |</span>
<span class="org-table">| :shebang  |         |</span>
<span class="org-table">| :tangle   | no      |</span>

   </pre>
</content>
</entry>
<entry>
   <title>header-arguments-on-call-line</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-09-header-arguments-on-call-line.html"/>
   <updated>2010-09-09:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-09-header-arguments-on-call-line.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** header arguments on call line</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-09</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: eight
</span><span class="org-block-begin-line">#+begin_src R
</span>  8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: eight() :results vector
</span>
<span class="org-meta-line">#+name: eight()
</span><span class="org-table">| 8 |</span>

maybe the following with the new proposed header arguments

<span class="org-meta-line">#+call: eight[:session *R*]() :results vector
</span>
   </pre>
</content>
</entry>
<entry>
   <title>splitting-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-19-splitting-code-blocks.html"/>
   <updated>2010-09-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-19-splitting-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** splitting code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-19</span>
<span class="org-special-keyword">   :END:</span>
- with indentation
<span class="org-block-begin-line">  #+begin_src emacs-lisp
</span>    <span class="comment-delimiter">;;;</span><span class="comment">###autoload
</span>    <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-previous-src-block</span> <span class="starter-kit-paren">(</span><span class="type">&amp;optional</span> arg<span class="starter-kit-paren">)</span>
      <span class="doc">"Jump to the previous source block.
    With optional prefix argument ARG, jump backward ARG many source blocks."</span>
      <span class="starter-kit-paren">(</span>interactive <span class="string">"P"</span><span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span><span class="keyword">condition-case</span> nil
          <span class="starter-kit-paren">(</span>re-search-backward org-babel-src-block-regexp nil nil <span class="starter-kit-paren">(</span>or arg 1<span class="starter-kit-paren">))</span>
        <span class="starter-kit-paren">(</span><span class="warning">error</span> <span class="starter-kit-paren">(</span><span class="warning">error</span> <span class="string">"No previous code blocks"</span><span class="starter-kit-paren">)))</span>
      <span class="starter-kit-paren">(</span>goto-char <span class="starter-kit-paren">(</span>match-beginning 0<span class="starter-kit-paren">))</span> <span class="starter-kit-paren">(</span>org-show-context<span class="starter-kit-paren">))
</span><span class="org-block-end-line">  #+end_src
</span>  
<span class="org-block-begin-line">  #+begin_src emacs-lisp
</span>    <span class="comment-delimiter">;;;</span><span class="comment">###autoload
</span>    <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-split-block-maybe</span> <span class="starter-kit-paren">(</span><span class="type">&amp;optional</span> arg<span class="starter-kit-paren">)</span>
      <span class="doc">"Split the current source code block on the cursor."</span>
      <span class="starter-kit-paren">(</span>interactive <span class="string">"p"</span><span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">((</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>info<span class="starter-kit-paren">)</span>
         <span class="starter-kit-paren">(</span><span class="keyword">if</span> info
             <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>lang <span class="starter-kit-paren">(</span>nth 0 info<span class="starter-kit-paren">))</span>
                   <span class="starter-kit-paren">(</span>indent <span class="starter-kit-paren">(</span>nth 6 info<span class="starter-kit-paren">))</span>
                   <span class="starter-kit-paren">(</span>stars <span class="starter-kit-paren">(</span>make-string <span class="starter-kit-paren">(</span>org-current-level<span class="starter-kit-paren">)</span> ?*<span class="starter-kit-paren">)))</span>
               <span class="starter-kit-paren">(</span>insert <span class="starter-kit-paren">(</span>concat <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>looking-at <span class="string">"^"</span><span class="starter-kit-paren">)</span> <span class="string">""</span> <span class="string">"\n"</span><span class="starter-kit-paren">)</span>
                               <span class="starter-kit-paren">(</span>make-string indent ? <span class="starter-kit-paren">)</span> <span class="string">"#+end_src\n"</span>
                               <span class="starter-kit-paren">(</span><span class="keyword">if</span> arg stars <span class="starter-kit-paren">(</span>make-string indent ? <span class="starter-kit-paren">))</span> <span class="string">"\n"</span>
                               <span class="starter-kit-paren">(</span>make-string indent ? <span class="starter-kit-paren">)</span> <span class="string">"#+begin_src "</span> lang
                               <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>looking-at <span class="string">"[\n\r]"</span><span class="starter-kit-paren">)</span> <span class="string">""</span> <span class="string">"\n  "</span><span class="starter-kit-paren">))))</span>
           <span class="starter-kit-paren">(</span>message <span class="string">"Not in src block."</span><span class="starter-kit-paren">)))</span>
       <span class="starter-kit-paren">(</span>org-babel-get-src-block-info<span class="starter-kit-paren">)))</span>
    
    <span class="comment-delimiter">;; </span><span class="comment">other stuff
</span><span class="org-block-end-line">  #+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>letter</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-21-letter.html"/>
   <updated>2010-09-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-21-letter.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** Letter</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-21</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: body
</span><span class="org-block-begin-line">#+begin_src org :results latex
</span>  ,My body includes a list:
  
  ,- one
  ,- two
  
  ,and a small table:
  
  ,| first | second |
  ,| other | last   |
  
  ,Not more.
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src latex :noweb yes :tangle yes
</span><span class="font-latex-sedate"><span class="keyword">\documentclass</span></span>[<span class="variable-name">11pt</span>]{<span class="function-name">isodoc</span>}
<span class="font-latex-sedate"><span class="keyword">\usepackage</span></span>[<span class="variable-name">utf8x</span>]{<span class="function-name">inputenc</span>}
<span class="font-latex-sedate"><span class="keyword">\usepackage</span></span>[<span class="variable-name">T1</span>]{<span class="function-name">fontenc</span>}

<span class="font-latex-sedate">\setupdocument</span>{
    to = {Eric},
    subject = {Tough to understand what to do...},
    opening = {Hi},
    closing = {Best}
}

<span class="font-latex-sedate"><span class="keyword">\begin</span></span>{<span class="function-name">document</span>}
<span class="font-latex-sedate">\letter</span>{<span class="comment">%
</span><span class="font-latex-string">&lt;&lt;body()&gt;&gt;</span>
}
<span class="font-latex-sedate"><span class="keyword">\end</span></span>{<span class="function-name">document}</span>
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>cycle----the-input-is-the-output</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-09-29-cycle----the-input-is-the-output.html"/>
   <updated>2010-09-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-09-29-cycle----the-input-is-the-output.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** cycle -- the input is the output</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-09-29</span>
<span class="org-special-keyword">   :END:</span>
and the rhythm is the base and the base is the treble

<span class="org-meta-line">#+name: cycle
</span><span class="org-table">| one   |</span>
<span class="org-table">| two   |</span>
<span class="org-table">| three |</span>

<span class="org-meta-line">#+name: cycle
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var table=cycle
</span>  <span class="starter-kit-paren">(</span>append <span class="starter-kit-paren">(</span>last table<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>butlast table<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :exports results
</span>  <span class="starter-kit-paren">(</span>+ 1 1 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>index-into-a-scalar</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-13-index-into-a-scalar.html"/>
   <updated>2010-10-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-13-index-into-a-scalar.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** index into a scalar</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: short-list
</span><span class="org-table">| a |</span>
<span class="org-table">| b |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var scalar=short-list[0,0]
</span>  scalar
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: a
</span>
   </pre>
</content>
</entry>
<entry>
   <title>preceding-blank-lines-on-tangle</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-13-preceding-blank-lines-on-tangle.html"/>
   <updated>2010-10-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-13-preceding-blank-lines-on-tangle.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** preceding blank lines on tangle</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-babel-tangle-pad-newline nil<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :tangle something.reg
</span>  <span class="comment-delimiter"># </span><span class="comment">something
</span>  <span class="builtin">echo</span> <span class="string">"else"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>very-very-large-numbers</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-13-very-very-large-numbers.html"/>
   <updated>2010-10-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-13-very-very-large-numbers.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** very very large numbers</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: numbers
</span><span class="org-table">|                           1 |</span>
<span class="org-table">|                           2 |</span>
<span class="org-table">|                          12 |</span>
<span class="org-table">|                          45 |</span>
<span class="org-table">|                         166 |</span>
<span class="org-table">|                    12567890 |</span>
<span class="org-table">| 231231282371983279389999999 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var numbers=numbers
</span>  <span class="starter-kit-paren">(</span>mapcar
   <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>line<span class="starter-kit-paren">)</span>
       <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>number <span class="starter-kit-paren">(</span>car line<span class="starter-kit-paren">)))</span>
         <span class="starter-kit-paren">(</span>list number <span class="starter-kit-paren">(</span>type-of number<span class="starter-kit-paren">))))</span>
     numbers<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">|                      1 | integer |</span>
<span class="org-table">|                      2 | integer |</span>
<span class="org-table">|                     12 | integer |</span>
<span class="org-table">|                     45 | integer |</span>
<span class="org-table">|                    166 | integer |</span>
<span class="org-table">|               12567890 | integer |</span>
<span class="org-table">| 2.3123128237198328e+26 | float   |</span>

   </pre>
</content>
</entry>
<entry>
   <title>weaving-with-noweb-links</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-13-weaving-with-noweb-links.html"/>
   <updated>2010-10-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-13-weaving-with-noweb-links.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** weaving with noweb links</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-13</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: name
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"eric"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :noweb tangle
</span>  <span class="comment-delimiter">;; </span><span class="comment">name
 </span> &lt;&lt;name&gt;&gt;
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>security-problem-with-elisp-in-header-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-14-security-problem-with-elisp-in-header-arguments.html"/>
   <updated>2010-10-14:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-14-security-problem-with-elisp-in-header-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** security problem with elisp in header arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-14</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=(setq org-confirm-babel-evaluate nil) :results silent
</span>  <span class="starter-kit-paren">(</span>+ 1 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>export-specific-header-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-26-export-specific-header-arguments.html"/>
   <updated>2010-10-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-26-export-specific-header-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** export-specific header arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-26</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+headers: :var out=(if (and (boundp 'latexp) latexp) "latex" "not latex") 
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  out
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: not latex
</span>
   </pre>
</content>
</entry>
<entry>
   <title>latex-headers-in-latex-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-26-latex-headers-in-latex-code-blocks.html"/>
   <updated>2010-10-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-26-latex-headers-in-latex-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** latex headers in latex code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-26</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src latex :headers \usepackage{lmodern} :file name1.pdf
</span>  Eric Schulte
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:name1.pdf]]</span>

<span class="org-block-begin-line">#+begin_src latex :headers '("\\usepackage{mathpazo}" "\\usepackage{fullpage}") :file name2.pdf
</span>  Eric Schulte
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:name2.pdf]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>simple-gnuplot-tests</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-26-simple-gnuplot-tests.html"/>
   <updated>2010-10-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-26-simple-gnuplot-tests.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple gnuplot tests</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: some-more-gnuplot
</span><span class="org-table">| 1 |  1 |</span>
<span class="org-table">| 2 |  4 |</span>
<span class="org-table">| 3 |  9 |</span>
<span class="org-table">| 4 | 16 |</span>
<span class="org-table">| 5 | 25 |</span>
<span class="org-table">| 6 | 36 |</span>
<span class="org-table">| 7 | 49 |</span>
<span class="org-table">| 8 | 64 |</span>
<span class="org-meta-line">#+TBLFM: $2=$1*$1
</span>
<span class="org-block-begin-line">#+begin_src gnuplot :var data=some-more-gnuplot
</span>  <span class="keyword">plot </span>"$data"
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span>
Plotting data points from a table could look like this:
<span class="org-meta-line">#+tblname: basic-plot
</span><span class="org-table">|   x |         y1 |         y2 |</span>
<span class="org-table">|-----+------------+------------|</span>
<span class="org-table">| 0.1 |      0.425 |      0.375 |</span>
<span class="org-table">| 0.2 |     0.3125 |     0.3375 |</span>
<span class="org-table">| 0.3 | 0.24999993 | 0.28333338 |</span>
<span class="org-table">| 0.4 |      0.275 |    0.28125 |</span>
<span class="org-table">| 0.5 |       0.26 |       0.27 |</span>
<span class="org-table">| 0.6 | 0.25833338 | 0.24999993 |</span>
<span class="org-table">| 0.7 | 0.24642845 | 0.23928553 |</span>
<span class="org-table">| 0.8 |    0.23125 |     0.2375 |</span>
<span class="org-table">| 0.9 | 0.23333323 |  0.2333332 |</span>
<span class="org-table">|   1 |     0.2225 |       0.22 |</span>

<span class="org-block-begin-line">#+begin_src gnuplot :var data=basic-plot :exports code :file basic-plot.png
</span><span class="constant">set</span> <span class="type">title</span> "Putting it All Together"

<span class="constant">set</span> xlabel "X"
<span class="constant">set</span> xrange [<span class="constant">0:1</span>]
<span class="constant">set</span> xtics 0,0.1,1

<span class="constant">set</span> ylabel "Y"
<span class="constant">set</span> yrange [<span class="constant">0.2:0.5</span>]
<span class="constant">set</span> ytics 0.2,0.05,0.5

<span class="keyword">plot</span> <span class="variable-name">data</span> u 1:2 w p <span class="type">lw</span> 2 <span class="type">title</span> <span class="string">'x vs. y1'</span>, \
     data u 1:3 w lp <span class="type">lw</span> 1 <span class="type">title</span> <span class="string">'x vx. y2'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:basic-plot.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>passing-arguments-through-call-lines</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-10-29-passing-arguments-through-call-lines.html"/>
   <updated>2010-10-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-10-29-passing-arguments-through-call-lines.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** passing arguments through call lines</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-10-29</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: test
</span><span class="org-block-begin-line">#+begin_src R :session :file test.pdf :var myarg="bla"
</span>  plot(1:10, main=myarg)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: test
</span><span class="org-link">[[file:test.pdf]]</span>

<span class="org-meta-line">#+call: test(myarg="hiho")
</span>
<span class="org-meta-line">#+name: test(myarg="hiho")
</span><span class="org-code">: test.pdf
</span>
   </pre>
</content>
</entry>
<entry>
   <title>playing-with-calc-support</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-03-playing-with-calc-support.html"/>
   <updated>2010-11-03:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-03-playing-with-calc-support.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** playing with calc support</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-03</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">require</span> '<span class="constant">ob-calc</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src calc :var some=8
</span>  some
  some
  '*
  8+8
  '+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 80
</span>
<span class="org-block-begin-line">#+begin_src calc
</span>  2*(8+8)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 32
</span>
<span class="org-block-begin-line">#+begin_src calc
</span>  2*e
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 5.43656365692
</span>
<span class="org-block-begin-line">#+begin_src calc :var something=9
</span>  2*something
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 18
</span>
   </pre>
</content>
</entry>
<entry>
   <title>shell-blocks-returning-a-file-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-03-shell-blocks-returning-a-file-name.html"/>
   <updated>2010-11-03:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-03-shell-blocks-returning-a-file-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** shell blocks returning a file name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-03</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :file quick.txt :results output
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:quick.txt]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>clojure-code-blocks-and-the-lazies</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-06-clojure-code-blocks-and-the-lazies.html"/>
   <updated>2010-11-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-06-clojure-code-blocks-and-the-lazies.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** clojure code blocks and the lazies</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">org-babel-execute:clojure</span> <span class="starter-kit-paren">(</span>body params<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">with-temp-buffer</span>
      <span class="starter-kit-paren">(</span>insert body<span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span>read
       <span class="starter-kit-paren">(</span>slime-eval
        `<span class="starter-kit-paren">(</span>swank:interactive-eval-region 
          ,<span class="starter-kit-paren">(</span>buffer-substring-no-properties <span class="starter-kit-paren">(</span>point-min<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>point-max<span class="starter-kit-paren">)))))))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src clojure
</span>  <span class="starter-kit-paren">(</span><span class="builtin">map</span> <span class="starter-kit-paren">(</span><span class="builtin">fn</span> [el] <span class="starter-kit-paren">(</span><span class="builtin">list</span> el <span class="starter-kit-paren">(</span><span class="builtin">*</span> el el<span class="starter-kit-paren">)))(</span><span class="builtin">range</span> 10<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 0 |  0 |</span>
<span class="org-table">| 1 |  1 |</span>
<span class="org-table">| 2 |  4 |</span>
<span class="org-table">| 3 |  9 |</span>
<span class="org-table">| 4 | 16 |</span>
<span class="org-table">| 5 | 25 |</span>
<span class="org-table">| 6 | 36 |</span>
<span class="org-table">| 7 | 49 |</span>
<span class="org-table">| 8 | 64 |</span>
<span class="org-table">| 9 | 81 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>lob-calls-with-header-argument-pass-through</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-08-lob-calls-with-header-argument-pass-through.html"/>
   <updated>2010-11-08:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-08-lob-calls-with-header-argument-pass-through.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lob calls with header argument pass through</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-08</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: lob-header
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var n=20
</span>  n
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: lob-header[:results vector](n=15)
</span>
<span class="org-meta-line">#+name: lob-header[:results vector](n=15)
</span><span class="org-table">| 15 |</span>

<span class="org-meta-line">#+call: lob-header(n=10) :results vector
</span>
<span class="org-meta-line">#+name: lob-header(n=10)
</span><span class="org-table">| 10 |</span>

need ob-ref.el to pass through the header arguments in "[]"s
<span class="org-block-begin-line">#+begin_src emacs-lisp :var n=lob-header[:results vector](n=8)
</span>  n
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 8 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var n=lob-header[:results vector](n=8)[0,0]
</span>  n
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
   </pre>
</content>
</entry>
<entry>
   <title>sqlite</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-10-sqlite.html"/>
   <updated>2010-11-10:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-10-sqlite.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** sqlite</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-10</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sqlite :db paper/climate.sqlite
</span>  select count(*) from temps;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 422689
</span>
   </pre>
</content>
</entry>
<entry>
   <title>introducing-wrap-header-argument</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-19-introducing-wrap-header-argument.html"/>
   <updated>2010-11-19:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-19-introducing-wrap-header-argument.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** introducing </span><span class="org-level-2"><span class="org-code">=wrap=</span></span><span class="org-level-2"> header argument</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results wrap :exports both
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list el <span class="starter-kit-paren">(</span>+ 1 <span class="starter-kit-paren">(</span>* el el<span class="starter-kit-paren">))))</span> <span class="starter-kit-paren">(</span>number-sequence 0 10<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_RESULT
</span><span class="org-table">|  0 |   1 |</span>
<span class="org-table">|  1 |   2 |</span>
<span class="org-table">|  2 |   5 |</span>
<span class="org-table">|  3 |  10 |</span>
<span class="org-table">|  4 |  17 |</span>
<span class="org-table">|  5 |  26 |</span>
<span class="org-table">|  6 |  37 |</span>
<span class="org-table">|  7 |  50 |</span>
<span class="org-table">|  8 |  65 |</span>
<span class="org-table">|  9 |  82 |</span>
<span class="org-table">| 10 | 101 |</span><span class="org-meta-line">
</span><span class="org-block-end-line">#+END_RESULT
</span>
now indented
- first
- second
<span class="org-block-begin-line">  #+begin_src emacs-lisp :results wrap :exports both
</span>    <span class="string">"something else"
</span><span class="org-block-end-line">  #+end_src
</span>
  #+name:
  #+BEGIN_RESULT
  <span class="org-code">: something else
</span>  #+END_RESULT

   </pre>
</content>
</entry>
<entry>
   <title>lists-as-data-types</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-19-lists-as-data-types.html"/>
   <updated>2010-11-19:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-19-lists-as-data-types.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lists as data types</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-19</span>
<span class="org-special-keyword">   :END:</span>

<span class="comment">#+name: a-list</span>
- org-mode
- and
- babel

<span class="comment">#+name: a-list</span>
<span class="comment">#+begin_src emacs-lisp :var lst=a-list :results list</span>
  (reverse lst)
<span class="comment">#+end_src</span>

also for a block inside of a list
1. First element
2. Second element -- has a block
   #+begin_src emacs-lisp
     (+ 1 1 1 1)
   #+end_src

   #+name:
   <span class="org-code">: 4
</span>
3. third element

   </pre>
</content>
</entry>
<entry>
   <title>add-column-to-table-with-awk</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-23-add-column-to-table-with-awk.html"/>
   <updated>2010-11-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-23-add-column-to-table-with-awk.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** add column to table with awk</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:question_author:</span> <span class="org-property-value">S&#233;bastien Vauban</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-23</span>
<span class="org-special-keyword">   :END:</span>
I want to <span class="bold">*add a column*</span> to the following table.

<span class="org-meta-line">#+name: table-message
</span><span class="org-table">| This is line 1 of the message.        |</span>
<span class="org-table">| This is line 2 of the message.        |</span>
<span class="org-table">| This is the last line of the message. |</span>

Its value should be dependant on a <span class="bold">*regexp matching*</span> the <span class="bold">*current row*</span>
(for example, if 1 is detected in the original column, then write "A"
in the new one, "B" if 2 is read, "C" if 3 is read, etc.).

Hence, I'm thinking using AWK as an easy solution.

<span class="org-block-begin-line">    #+begin_src note
</span>    I'm open to other ideas on how I could do this as easily. Just throw me
    ideas, if you have some.<span class="org-meta-line">
</span><span class="org-block-end-line">    #+end_src
</span>
the easiest (for me) would be with the elisp <span class="org-code">=mapcar=</span> function
<span class="org-block-begin-line">#+begin_src emacs-lisp :var tbl=table-message
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>cons <span class="string">"New col"</span> row<span class="starter-kit-paren">))</span> tbl<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| New col | This is line 1 of the message.        |</span>
<span class="org-table">| New col | This is line 2 of the message.        |</span>
<span class="org-table">| New col | This is the last line of the message. |</span>

<span class="bold">*First*</span> trial: add a column whose cell contents will be <span class="bold">*fixed*</span> (here,
equal to <span class="org-code">=New col=</span>).

<span class="org-meta-line">#+name: add-col
</span><span class="org-block-begin-line">#+begin_src sh :var data=table-message :results output raw :exports both
</span><span class="builtin">echo</span> <span class="string">"$data"</span> | awk <span class="string">'// {print "| New col | " $0 " |";}'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: add-col
</span><span class="org-table">| New col | This is line 1 of the message.        |</span>
<span class="org-table">| New col | This is line 2 of the message.        |</span>
<span class="org-table">| New col | This is the last line of the message. |</span>

   </pre>
</content>
</entry>
<entry>
   <title>reading-from-single-quote-delim-languages</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-23-reading-from-single-quote-delim-languages.html"/>
   <updated>2010-11-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-23-reading-from-single-quote-delim-languages.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** reading from single-quote-delim languages</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+BEGIN_SRC python
</span><span class="keyword">return</span> [[<span class="string">'607'</span>, <span class="string">'Show license short, name on the deed'</span>],
        [<span class="string">'255'</span>, <span class="string">"'(message (concat 'hello ' 'world))"]</span>]
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 607 | Show license short, name on the deed |</span>
<span class="org-table">| 255 | '(message (concat 'hello ' 'world))  |</span>

<span class="org-block-begin-line">#+begin_src ruby
</span>  [[<span class="string">'607'</span>, <span class="string">'Show license, short name on the deed'</span>],
   [<span class="string">'255'</span>, <span class="string">"))'(message (concat 'hello ' 'world"]</span>]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 607 | Show license, short name on the deed |</span>
<span class="org-table">| 255 | ))'(message (concat 'hello ' 'world  |</span>

<span class="org-block-begin-line">#+begin_src haskell
</span>  [[<span class="string">"'single quotes'"</span>, <span class="string">"b"</span>], [<span class="string">"\"double quotes\""</span>, <span class="string">"d"]</span>]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 'single quotes' | b |</span>
<span class="org-table">| "double quotes" | d |</span>

   </pre>
</content>
</entry>
<entry>
   <title>safe-lists-for-haskell</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-23-safe-lists-for-haskell.html"/>
   <updated>2010-11-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-23-safe-lists-for-haskell.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** safe lists for Haskell</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-23</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+tblname: mixed-table
</span><span class="org-table">| 1 | first  |</span>
<span class="org-table">| 2 | second |</span>
<span class="org-table">| 3 | third  |</span>
<span class="org-table">| 4 | fourth |</span> 

<span class="org-meta-line">#+name: rec-string-wrap
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var data=mixed-table
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">rec-string-wrap</span> <span class="starter-kit-paren">(</span>in<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>listp in<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>mapcar #'rec-string-wrap in<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>format <span class="string">"%S"</span> in<span class="starter-kit-paren">)))</span>
  <span class="starter-kit-paren">(</span>rec-string-wrap data<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src haskell :var tbl=rec-string-wrap(data=mixed-table)
</span>  map head tbl
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 | 3 | 4 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>un-named-r-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-23-un-named-r-code-blocks.html"/>
   <updated>2010-11-23:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-23-un-named-r-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** un-named R code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R
</span>  8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :eric
</span>8  
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
<span class="org-block-begin-line">#+BEGIN_SRC R :session :results output
</span> xyz
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-block-begin-line">#+BEGIN_SRC R :session *R-2* :results output |  xyz
</span>9
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1] 9
</span>
   </pre>
</content>
</entry>
<entry>
   <title>python-with-return-header-argument</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-27-python-with-return-header-argument.html"/>
   <updated>2010-11-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-27-python-with-return-header-argument.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** python with return header argument</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src python :return y
</span>  x = 8
  y = 98
  2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 98
</span>
   </pre>
</content>
</entry>
<entry>
   <title>:eval-query-shows-the-name</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-30-:eval-query-shows-the-name.html"/>
   <updated>2010-11-30:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-30-:eval-query-shows-the-name.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** </span><span class="org-level-2"><span class="org-code">=:eval query=</span></span><span class="org-level-2"> shows the name</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-30</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: i-have-a-name
</span><span class="org-block-begin-line">#+begin_src sh :eval query
</span>  date
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: i-have-a-name
</span><span class="org-code">: Tue Nov 30 22:03:25 MST 2010
</span>
   </pre>
</content>
</entry>
<entry>
   <title>sql-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-11-30-sql-variables.html"/>
   <updated>2010-11-30:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-11-30-sql-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** sql variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-11-30</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: sql-param
</span><span class="org-table">| table       | valueTable0       |</span>
<span class="org-table">| column      | valueColumn0      |</span>
<span class="org-table">| type        | valueType0        |</span>
<span class="org-table">| nullability | valueNullability0 |</span>

I want to apply the values onto the following chunk of code:

<span class="org-meta-line">#+name: add-column-in-table-0
</span><span class="org-block-begin-line">#+begin_src sql :var table=sql-param[0,1] :var column=sql-param[1,1] :var type=sql-param[2,1] :var nullability=sql-param[3,1]
</span><span class="comment">-- add column `@column' (if column does not exist yet)
</span>IF NOT EXISTS (SELECT *
               FROM INFORMATION_SCHEMA.COLUMNS
               WHERE TABLE_NAME = <span class="string">'@table'</span>
               AND COLUMN_NAME = <span class="string">'@column')</span>
BEGIN
    ALTER TABLE $table
    ADD $column $type @nullability
END
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>empty-lines-in-r-session-output</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-01-empty-lines-in-r-session-output.html"/>
   <updated>2010-12-01:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-01-empty-lines-in-r-session-output.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** empty lines in R session output</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-01</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R :results output :session
</span>  x <span class="constant">&lt;- </span>1;
  x
  x + 1
  x + 4
<span class="org-block-end-line">#+end_src R
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1] 1
: [1] 2
: [1] 5
</span>
   </pre>
</content>
</entry>
<entry>
   <title>python-requires-a-utf-8-coding-prefix</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-02-python-requires-a-utf-8-coding-prefix.html"/>
   <updated>2010-12-02:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-02-python-requires-a-utf-8-coding-prefix.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** Python requires a utf-8 coding prefix</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-02</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :prefix # -*- coding: utf-8 -*- :return s
</span><span class="variable-name">s</span> = <span class="string">"&#233;"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: &#233;
</span>
<span class="org-block-begin-line">#+begin_src python :prefix # -*- coding: utf-8 -*- :results output
</span><span class="variable-name">s</span> = <span class="string">"&#233;"</span>
<span class="keyword">print(</span>s)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: &#233;
</span>
   </pre>
</content>
</entry>
<entry>
   <title>missing-lines-on-tangle</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-13-missing-lines-on-tangle.html"/>
   <updated>2010-12-13:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-13-missing-lines-on-tangle.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** missing lines on tangle</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:ID:</span>       <span class="org-property-value">83eb62fd-4147-405b-bdc2-567b2d5cbd70</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src org :results latex :tangle latex-err.tex
</span>  ,one
  ,two
  ,three
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src org :results latex :results replace
</span>  ,- eric
  ,- schulte
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_LaTeX
</span><span class="org-block">\begin{itemize}
\item eric
\item schulte
\end{itemize}
</span><span class="org-block-end-line">#+END_LaTeX
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-templates</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-13-tangle-templates.html"/>
   <updated>2010-12-13:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-13-tangle-templates.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle templates</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: template-heading
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  some stuff here
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: template-footing
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  some other stuff here
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: template
</span><span class="org-block-begin-line">#+begin_src sh :results output :noweb yes :var body="body stuff"
</span><span class="variable-name">heading</span>=$(cat&lt;&lt;EOF
&lt;&lt;template-heading&gt;&gt;
EOF
)
<span class="variable-name">footing</span>=$(cat&lt;&lt;EOF
&lt;&lt;template-footing&gt;&gt;
EOF
)
<span class="builtin">echo</span> $<span class="variable-name">heading</span>
<span class="builtin">echo</span> <span class="string">"$body"</span>
<span class="builtin">echo</span> $<span class="variable-name">footing
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: template[:noweb yes](body="something new")
</span>
<span class="org-meta-line">#+name: template[:noweb yes](body="something new")
</span><span class="org-code">: some stuff here
: something new
: some other stuff here
</span>
   </pre>
</content>
</entry>
<entry>
   <title>utf8-and-latin-1-encodings</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-13-utf8-and-latin-1-encodings.html"/>
   <updated>2010-12-13:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-13-utf8-and-latin-1-encodings.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** utf8 and latin-1 encodings</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: toto
</span><span class="org-table">| &#233; |</span>

<span class="org-block-begin-line">#+begin_src python :var t=toto :preamble # -*- coding: latin1 -*- :return [len(babel), len(local)]
</span>  babel = <span class="builtin">unicode</span> (t[0][0],<span class="string">"latin1"</span>)
  local = <span class="builtin">unicode</span> (<span class="string">"&#233;"</span>,<span class="string">"latin1")</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 2 | 2 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>new-file-handling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-20-new-file-handling.html"/>
   <updated>2010-12-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-20-new-file-handling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** new file handling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2010-12-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :sep , :file dirlisting
</span>  ls -l
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:dirlisting]]</span>

<span class="org-block-begin-line">#+begin_src ruby :file ruby-out
</span>  [[1, 2, 3, 4],
   [2, 4, 6, 8]]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:ruby-out]]</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results file :results append
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>today <span class="starter-kit-paren">(</span>replace-regexp-in-string <span class="string">"[ \t]"</span> <span class="string">"-"</span> <span class="starter-kit-paren">(</span>current-time-string<span class="starter-kit-paren">))))</span>
    <span class="starter-kit-paren">(</span><span class="keyword">with-temp-file</span> today
      <span class="starter-kit-paren">(</span>insert <span class="starter-kit-paren">(</span>message <span class="string">"I'm feeling %s"</span>
                       <span class="starter-kit-paren">(</span>nth <span class="starter-kit-paren">(</span>random 3<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>list <span class="string">"good"</span> <span class="string">"bad"</span> <span class="string">"just fine"</span><span class="starter-kit-paren">)))))</span>
    today<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:Mon-Dec-20-17:27:52-2010]]</span>

from <span class="org-link">http://www.graphviz.org/Gallery/directed/fsm.gv.txt</span>
<span class="org-block-begin-line">#+begin_src dot :file fsa.png
</span>  digraph <span class="function-name">finite</span>_state_machine {
          <span class="variable-name">rankdir=</span><span class="constant">LR</span>;
          <span class="variable-name">size=</span><span class="string">"8,5"</span>
          node [<span class="variable-name">shape =</span> <span class="constant">doublecircle</span>]; <span class="constant">LR</span>_0 <span class="constant">LR</span>_3 <span class="constant">LR</span>_4 <span class="constant">LR</span>_8;
          node [<span class="variable-name">shape =</span> <span class="constant">circle</span>];
          <span class="constant">LR</span>_0 -&gt; <span class="constant">LR</span>_2 [ <span class="variable-name">label =</span> <span class="string">"SS(B)"</span> ];
          <span class="constant">LR</span>_0 -&gt; <span class="constant">LR</span>_1 [ <span class="variable-name">label =</span> <span class="string">"SS(S)"</span> ];
          <span class="constant">LR</span>_1 -&gt; <span class="constant">LR</span>_3 [ <span class="variable-name">label =</span> <span class="string">"S($end)"</span> ];
          <span class="constant">LR</span>_2 -&gt; <span class="constant">LR</span>_6 [ <span class="variable-name">label =</span> <span class="string">"SS(b)"</span> ];
          <span class="constant">LR</span>_2 -&gt; <span class="constant">LR</span>_5 [ <span class="variable-name">label =</span> <span class="string">"SS(a)"</span> ];
          <span class="constant">LR</span>_2 -&gt; <span class="constant">LR</span>_4 [ <span class="variable-name">label =</span> <span class="string">"S(A)"</span> ];
          <span class="constant">LR</span>_5 -&gt; <span class="constant">LR</span>_7 [ <span class="variable-name">label =</span> <span class="string">"S(b)"</span> ];
          <span class="constant">LR</span>_5 -&gt; <span class="constant">LR</span>_5 [ <span class="variable-name">label =</span> <span class="string">"S(a)"</span> ];
          <span class="constant">LR</span>_6 -&gt; <span class="constant">LR</span>_6 [ <span class="variable-name">label =</span> <span class="string">"S(b)"</span> ];
          <span class="constant">LR</span>_6 -&gt; <span class="constant">LR</span>_5 [ <span class="variable-name">label =</span> <span class="string">"S(a)"</span> ];
          <span class="constant">LR</span>_7 -&gt; <span class="constant">LR</span>_8 [ <span class="variable-name">label =</span> <span class="string">"S(b)"</span> ];
          <span class="constant">LR</span>_7 -&gt; <span class="constant">LR</span>_5 [ <span class="variable-name">label =</span> <span class="string">"S(a)"</span> ];
          <span class="constant">LR</span>_8 -&gt; <span class="constant">LR</span>_6 [ <span class="variable-name">label =</span> <span class="string">"S(b)"</span> ];
          <span class="constant">LR</span>_8 -&gt; <span class="constant">LR</span>_5 [ <span class="variable-name">label =</span> <span class="string">"S(a)" </span>];
  }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:fsa.png]]</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-query</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2010-12-21-eval-query.html"/>
   <updated>2010-12-21:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2010-12-21-eval-query.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval query</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2010-12-21
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>setq org-confirm-babel-evaluate
        <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>lang body<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>not <span class="starter-kit-paren">(</span>equal <span class="string">"ditaa"</span> lang<span class="starter-kit-paren">))))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| lambda | (lang body) | (not (equal ditaa lang)) |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :eval query
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"eval'd"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: eval'd
</span>
<span class="org-block-begin-line">#+begin_src ditaa
</span>  ---
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>language-name-abbreviations</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-07-language-name-abbreviations.html"/>
   <updated>2011-01-07:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-07-language-name-abbreviations.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** language name abbreviations</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-07</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>add-to-list 'org-src-lang-modes '<span class="starter-kit-paren">(</span><span class="string">"clj"</span> . clojure<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src clj
</span>  (map (partial + 1) (range 20))<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>call-lines</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-11-call-lines.html"/>
   <updated>2011-01-11:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-11-call-lines.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** call lines</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-11</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: doubler
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var n=2
</span>  <span class="starter-kit-paren">(</span>* n 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: doubler(n=3)
</span>
<span class="org-meta-line">#+name: doubler(n=3)
</span><span class="org-code">: 6
</span>
<span class="org-meta-line">#+call: doubler[:var n=3]()
</span>
<span class="org-meta-line">#+name: doubler[:var n=3]()
</span><span class="org-code">: 6
</span>
   </pre>
</content>
</entry>
<entry>
   <title>empty-strings-as-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-11-empty-strings-as-arguments.html"/>
   <updated>2011-01-11:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-11-empty-strings-as-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** empty strings as arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-11</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results output :var foo=""
</span>  <span class="starter-kit-paren">(</span>concat foo <span class="string">"bar"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: bar
</span>
   </pre>
</content>
</entry>
<entry>
   <title>noweb-then-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-13-noweb-then-variables.html"/>
   <updated>2011-01-13:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-13-noweb-then-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** noweb then variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-13</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: replaced-first
</span><span class="org-block-begin-line">#+begin_src latex
</span>  <span class="font-latex-sedate"><span class="keyword">\begin</span></span>{<span class="function-name">itemize</span>}
  <span class="font-latex-sedate"><span class="keyword">\item</span></span> first
  <span class="font-latex-sedate"><span class="keyword">\item</span></span> data
  <span class="font-latex-sedate"><span class="keyword">\item</span></span> third
  <span class="font-latex-sedate"><span class="keyword">\end</span></span>{<span class="function-name">itemize}</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src latex :var data="second" :noweb yes
</span>  <span class="font-latex-sedate"><span class="keyword">\section</span></span>{<span class="font-latex-sectioning-2">ordinals</span>}
  <span class="font-latex-sedate"><span class="keyword">\label</span></span>{<span class="constant">sec:ordinals</span>}
  <span class="font-latex-string">&lt;&lt;replaced-first&gt;&gt;
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>replace-inline-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-13-replace-inline-code-block.html"/>
   <updated>2011-01-13:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-13-replace-inline-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** replace inline code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-13</span>
<span class="org-special-keyword">   :END:</span>
This is src_emacs-lisp{(+ 1 2 3)} an inline block.

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">replace-inline-block</span> <span class="starter-kit-paren">()</span>
    <span class="starter-kit-paren">(</span>interactive<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span><span class="keyword">save-excursion</span> <span class="starter-kit-paren">(</span>re-search-backward <span class="string">"[ \f\t\n\r\v]"</span> nil t<span class="starter-kit-paren">)</span>
                        <span class="starter-kit-paren">(</span>looking-at org-babel-inline-src-block-regexp<span class="starter-kit-paren">))</span>
        <span class="starter-kit-paren">(</span>replace-match
         <span class="starter-kit-paren">((</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>el<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>stringp el<span class="starter-kit-paren">)</span> el <span class="starter-kit-paren">(</span>format <span class="string">"%S"</span> el<span class="starter-kit-paren">)))</span>
          <span class="starter-kit-paren">(</span>org-babel-execute-src-block<span class="starter-kit-paren">))</span> nil nil nil 1<span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span><span class="warning">error</span> <span class="string">"not inside of an inline source block."</span><span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>wrap-noweb-references-in-comments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-16-wrap-noweb-references-in-comments.html"/>
   <updated>2011-01-16:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-16-wrap-noweb-references-in-comments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** wrap noweb references in comments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-16</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: wrappable
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>setq x <span class="starter-kit-paren">(</span>+ 4 x<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :comments noweb :noweb yes :tangle yes
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>x 1<span class="starter-kit-paren">))</span>
    <span class="starter-kit-paren">(</span>message <span class="string">"x=%s"</span> x<span class="starter-kit-paren">)</span>
    &lt;&lt;wrappable&gt;&gt;
    <span class="starter-kit-paren">(</span>message <span class="string">"x=%s"</span> x<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>passing-arguments-to-the-shell</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-18-passing-arguments-to-the-shell.html"/>
   <updated>2011-01-18:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-18-passing-arguments-to-the-shell.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** passing arguments to the shell</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-18</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: something
</span><span class="org-code">: eric
:   schulte
:     yes
: more
</span>
<span class="org-meta-line">#+name: something-list
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>

<span class="org-block-begin-line">#+begin_src sh :var data=something-list
</span>  <span class="builtin">echo</span> <span class="string">"$data"|</span>wc -l
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-babel-sh-var-quote-fmt <span class="string">"`cat &lt;&lt;'BABEL_TABLE'\n%s\nBABEL_TABLE\n`"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>creating-a-directory-when-needed-for-tangling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-19-creating-a-directory-when-needed-for-tangling.html"/>
   <updated>2011-01-19:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-19-creating-a-directory-when-needed-for-tangling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** creating a directory when needed for tangling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="comment">#+begin_src clojure :tangle (prog1 "src/foo.clj" (make-directory "src" "."))</span>
  (ns something)
<span class="comment">#+end_src</span>

a helper function for the above
<span class="comment">#+begin_src emacs-lisp</span>
  (defun mkdir-p (file &amp;optional dir)
    "Create any parent directories of FILE if missing and return FILE."
    (make-directory (file-name-directory file) (or dir ".")) file)
<span class="org-meta-line">#+end_src
</span>
allows the following
<span class="org-block-begin-line">#+begin_src clojure :tangle (mkdir-p "src/foo.clj")
</span>  <span class="starter-kit-paren">(</span><span class="keyword">ns</span> something<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
There is now a new header argument controlling this behavior
<span class="org-block-begin-line">#+begin_src emacs-lisp :mkdirp yes :tangle novel/nested/directories/finally.clj
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"contents"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inserting-wrappers-eats-following-characters</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-20-inserting-wrappers-eats-following-characters.html"/>
   <updated>2011-01-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-20-inserting-wrappers-eats-following-characters.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inserting wrappers eats following characters</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** Test</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-20</span>
<span class="org-special-keyword">    :END:</span>
  
<span class="org-block-begin-line">  #+begin_src emacs-lisp :results latex
</span>    <span class="string">"\\begin{equation}\\frac{1}{2}\n\\end{equation}"
</span><span class="org-block-end-line">  #+end_src
</span>
  #+name:
  #+BEGIN_LaTeX
  \begin{equation}\frac{1}{2}
  \end{equation}
  #+END_LaTeX
  
<span class="org-level-3">*** Watch me die :-(</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-20</span>
<span class="org-special-keyword">    :END:</span>

   </pre>
</content>
</entry>
<entry>
   <title>results-replace-not-always-working</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-25-results-replace-not-always-working.html"/>
   <updated>2011-01-25:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-25-results-replace-not-always-working.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** results replace not always working</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-25</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results output org replace :exports code
</span>  <span class="keyword">for</span> i<span class="keyword"> in</span> <span class="sh-quoted-exec">`seq 4`</span>;<span class="keyword">do</span>
      <span class="builtin">echo</span> <span class="string">"- place $i in the list"</span>
  <span class="keyword">done
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_ORG
</span>- place 1 in the list
- place 2 in the list
- place 3 in the list
- place 4 in the list<span class="org-meta-line">
</span><span class="org-block-end-line">#+END_ORG
</span>
inline block src_emacs-lisp[:exports code :results replace]{(+ 1 1 1)} here is was

   </pre>
</content>
</entry>
<entry>
   <title>simple-calc-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-25-simple-calc-example.html"/>
   <updated>2011-01-25:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-25-simple-calc-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple calc example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-25</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src calc 
</span>2*3
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 6
</span>
   </pre>
</content>
</entry>
<entry>
   <title>non-inlined-inline-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-01-27-non-inlined-inline-code-block.html"/>
   <updated>2011-01-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-01-27-non-inlined-inline-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** non-inlined inline code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-01-27</span>
<span class="org-special-keyword">   :END:</span>
The Date is src_sh[:results replace]{date} at the time of <span class="org-code">=this=</span> export.

src_sh[:results replace]{ls}

   </pre>
</content>
</entry>
<entry>
   <title>how-to-set-no-expand-in-properties</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-10-how-to-set-no-expand-in-properties.html"/>
   <updated>2011-02-10:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-10-how-to-set-no-expand-in-properties.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** how to set no-expand in properties</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:no-expand:</span> <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-10</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var something="other thing" :tangle no-expand.el
</span>  <span class="builtin">:test
</span><span class="org-block-end-line">#+end_src
</span>
tangles to

   </pre>
</content>
</entry>
<entry>
   <title>two-vars-in-a-properties-block----not-possible</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-10-two-vars-in-a-properties-block----not-possible.html"/>
   <updated>2011-02-10:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-10-two-vars-in-a-properties-block----not-possible.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** two vars in a properties block -- not possible</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:var:</span>      <span class="org-property-value">test1=7</span>
   <span class="org-special-keyword">:var:</span>      <span class="org-property-value">test2=8</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-10</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"test1=%S test2=%S"</span> test1 test2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
results in Error
<span class="org-code">: let: Symbol's value as variable is void: test2
</span>
<span class="org-level-3">*** an alternative</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:var:</span>      <span class="org-property-value">tests=all-tests</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-10</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-meta-line">#+tblname: all-tests
</span>- 7
- 8

<span class="org-block-begin-line">#+begin_src emacs-lisp :var eric=89
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"test1=%S test2=%S"</span> <span class="starter-kit-paren">(</span>first tests<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>second tests<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: test1=7 test2=8
</span>
<span class="org-level-3">*** another alternative</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:var:</span>      <span class="org-property-value">vars=variables</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-21</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-meta-line">#+tblname: variables
</span><span class="org-table">| var1 | 1 |</span>
<span class="org-table">| var2 | 2 |</span>

<span class="org-block-begin-line">#+begin_src python
</span>  <span class="keyword">print</span> vars[0][1]
  <span class="keyword">print </span>vars[1][1]
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>passing-keywords-inside-header-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-15-passing-keywords-inside-header-arguments.html"/>
   <updated>2011-02-15:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-15-passing-keywords-inside-header-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** passing keywords inside header arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-15</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var lst='(:no-expand :other)
</span>  lst
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| :no-expand | other |</span>

   </pre>
</content>
</entry>
<entry>
   <title>recutils</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-15-recutils.html"/>
   <updated>2011-02-15:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-15-recutils.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** recutils</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-15</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :file book.rec
</span>  cat &lt;&lt;EOF &gt; book.rec
  <span class="comment-delimiter"># </span><span class="comment">-*- mode: rec -*-
</span>  %rec: Book
  %mandatory: Title
  %type: Location enum loaned home unknown
  %doc:
  + A book<span class="keyword"> in</span> my personal collection.
  
  Title: GNU Emacs Manual
  Author: Richard M. Stallman
  Publisher: FSF
  Location: home
  
  Title: The Colour of Magic
  Author: Terry Pratchett
  Location: loaned
  
  Title: Mio Cid
  Author: Anonymous
  Location: home
  
  Title: chapters.gnu.org administration guide
  Author: Nacho Gonzalez
  Author: Jose E. Marchesi
  Location: unknown
  
  Title: Yeelong User Manual
  Location: home
  
  <span class="comment-delimiter"># </span><span class="comment">End of books.rec
 </span> EOF
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:book.rec]]</span>

<span class="org-block-begin-line">#+begin_src rec :data book.rec :fields Title,Author
</span>  Location = 'loaned'<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| Title               | Author          |</span>
<span class="org-table">| The Colour of Magic | Terry Pratchett |</span>

<span class="org-block-begin-line">#+begin_src rec :data book.rec :fields Title,Author
</span>  <span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| Title                                 | Author              | Author_2         |</span>
<span class="org-table">| GNU Emacs Manual                      | Richard M. Stallman |                  |</span>
<span class="org-table">| The Colour of Magic                   | Terry Pratchett     |                  |</span>
<span class="org-table">| Mio Cid                               | Anonymous           |                  |</span>
<span class="org-table">| chapters.gnu.org administration guide | Nacho Gonzalez      | Jose E. Marchesi |</span>
<span class="org-table">| Yeelong User Manual                   |                     |                  |</span>

   </pre>
</content>
</entry>
<entry>
   <title>sql-----example-reading-org-mode-table-into-sql</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-15-sql-----example-reading-org-mode-table-into-sql.html"/>
   <updated>2011-02-15:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-15-sql-----example-reading-org-mode-table-into-sql.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** SQL --- example reading org-mode table into sql</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-15</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: example-table-for-sql
</span><span class="org-table">| a |  b |</span>
<span class="org-table">|---+----|</span>
<span class="org-table">| 1 | 10 |</span>
<span class="org-table">| 2 | 11 |</span>
<span class="org-table">| 3 | 12 |</span>
<span class="org-table">| 4 | 13 |</span>
<span class="org-table">| 5 | 14 |</span>
<span class="org-table">| 6 | 15 |</span>

<span class="org-meta-line">#+headers: :var table=example-table-for-sql
</span><span class="org-block-begin-line">#+begin_src sql :engine mysql
</span>load data infile "$table" into mytable;
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inline-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-18-inline-code-block.html"/>
   <updated>2011-02-18:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-18-inline-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inline code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-18</span>
<span class="org-special-keyword">   :END:</span>

here is an inline block src_R{1+1}

   </pre>
</content>
</entry>
<entry>
   <title>export-of-inline-code-blocks-which-are-silent</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-20-export-of-inline-code-blocks-which-are-silent.html"/>
   <updated>2011-02-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-20-export-of-inline-code-blocks-which-are-silent.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** export of inline code blocks which are silent</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-20</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setf org-babel-default-inline-header-args
        '<span class="starter-kit-paren">((</span><span class="builtin">:session</span> . <span class="string">"none"</span><span class="starter-kit-paren">)</span>
          <span class="starter-kit-paren">(</span><span class="builtin">:results</span> . <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>boundp 'org-current-export-file<span class="starter-kit-paren">)</span> <span class="string">"replace"</span> <span class="string">"silent"</span><span class="starter-kit-paren">))</span>
          <span class="starter-kit-paren">(</span><span class="builtin">:exports</span> . <span class="string">"results"</span><span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
Here is an inline code block src_sh{echo 8} &lt;- there

   </pre>
</content>
</entry>
<entry>
   <title>mentions-of-file-names-in-file-contents</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-20-mentions-of-file-names-in-file-contents.html"/>
   <updated>2011-02-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-20-mentions-of-file-names-in-file-contents.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** mentions of file names in file contents</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-20</span>
<span class="org-special-keyword">   :END:</span>
directory to search
<span class="org-meta-line">#+name: graph-dir
</span><span class="org-code">: graph-dir
</span>
list all files in dir
<span class="org-meta-line">#+name: graph-files
</span><span class="org-block-begin-line">#+begin_src sh :results vector :var dir=graph-dir
</span>  find $<span class="variable-name">dir</span> -type f -exec basename {} <span class="string">\;
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: graph-files
</span><span class="org-table">| other |</span>
<span class="org-table">| dan   |</span>
<span class="org-table">| eric  |</span>
<span class="org-table">| seb   |</span>

association of files with mentions
<span class="org-meta-line">#+name: graph-associations
</span><span class="org-block-begin-line">#+begin_src sh :var dir=graph-dir :var files=graph-files
</span>  <span class="keyword">for</span> i<span class="keyword"> in</span> $<span class="variable-name">files</span>; <span class="keyword">do</span>
      <span class="keyword">for</span> j<span class="keyword"> in</span> <span class="sh-quoted-exec">`grep -l -r $i $dir`</span>;<span class="keyword">do</span>
          <span class="builtin">echo</span> $<span class="variable-name">i</span>, <span class="sh-quoted-exec">`basename $j`</span>
      <span class="keyword">done</span>
  <span class="keyword">done
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: graph-associations
</span><span class="org-table">| other | eric |</span>
<span class="org-table">| other | seb  |</span>
<span class="org-table">| dan   | eric |</span>
<span class="org-table">| eric  | seb  |</span>
<span class="org-table">| seb   | dan  |</span>

graphing with dot
<span class="org-meta-line">#+name: to-dot
</span><span class="org-block-begin-line">#+begin_src sh :var associations=graph-associations :results scalar
</span>  <span class="builtin">echo</span> <span class="string">"$associations"</span>|awk <span class="string">'{print $1, "-&gt;", $2}'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: to-dot
</span><span class="org-code">: other -&gt; eric
: other -&gt; seb
: dan -&gt; eric
: eric -&gt; seb
: seb -&gt; dan
</span>
<span class="org-block-begin-line">#+begin_src dot :var data=to-dot :file files.png
</span>  digraph <span class="function-name">G{</span>
    $data
  }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:files.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>catch-the-file-name-during-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-21-catch-the-file-name-during-export.html"/>
   <updated>2011-02-21:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-21-catch-the-file-name-during-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** catch the file name during export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-21</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var file-name=(buffer-file-name) :exports both
</span>  file-name
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>new-lists</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-21-new-lists.html"/>
   <updated>2011-02-21:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-21-new-lists.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** new lists</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2011-02-21
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** results embedded inside of a list</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-22</span>
<span class="org-special-keyword">    :END:</span>
1. this has results
   #+name: something-in-a-list
   <span class="org-code">: foo
</span>2. and this doesn't work
   #+begin_src emacs-lisp :var data=something-in-a-list
     data
   #+end_src

   #+name:
   <span class="org-code">: foo
</span>
<span class="org-level-3">*** reading and writing</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-22</span>
<span class="org-special-keyword">    :END:</span>
<span class="comment">#+name: simple-list</span>
- 1
- two
- 3
- four


<span class="comment">#+name: simple-list</span>
<span class="comment">#+begin_src emacs-lisp :var lst=simple-list :results list</span>
  (reverse lst)
<span class="comment">#+end_src</span>

   </pre>
</content>
</entry>
<entry>
   <title>calc-variables-inside-of-parenthesis</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-22-calc-variables-inside-of-parenthesis.html"/>
   <updated>2011-02-22:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-22-calc-variables-inside-of-parenthesis.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** calc variables inside of parenthesis</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-22</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+BEGIN_SRC calc :var testvar=9000
</span>testvar - 200
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8800
</span>
<span class="org-block-begin-line">#+BEGIN_SRC calc :var testvar=9000
</span>(testvar - 200) 800
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 7040000
</span>
   </pre>
</content>
</entry>
<entry>
   <title>sh-return-a-list-of-elements-with-spaces</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-26-sh-return-a-list-of-elements-with-spaces.html"/>
   <updated>2011-02-26:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-26-sh-return-a-list-of-elements-with-spaces.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** sh return a list of elements with spaces</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results list
</span>  <span class="builtin">echo</span> <span class="string">"eric schulte"</span>
  <span class="builtin">echo</span> <span class="string">"dan davison"</span>
  <span class="builtin">echo</span> <span class="string">"seb vauban"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span>- ("eric" "schulte")
- ("dan" "davison")
- ("seb" "vauban")

<span class="org-block-begin-line">#+begin_src sh :results scalar
</span>  <span class="builtin">echo</span> <span class="string">"eric schulte"</span>
  <span class="builtin">echo</span> <span class="string">"dan davison"</span>
  <span class="builtin">echo</span> <span class="string">"seb vauban"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: eric schulte
: dan davison
: seb vauban
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-python-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-26-simple-python-block.html"/>
   <updated>2011-02-26:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-26-simple-python-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple python block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :return foo
</span>  foo = 8
  foo += 1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 9
</span>
   </pre>
</content>
</entry>
<entry>
   <title>source-block-names-in-current-buffer</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-26-source-block-names-in-current-buffer.html"/>
   <updated>2011-02-26:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-26-source-block-names-in-current-buffer.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** source block names in current buffer</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results list
</span> <span class="starter-kit-paren">(</span>org-babel-src-block-names<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>dont-interpret-tuples-as-elisp-code</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-dont-interpret-tuples-as-elisp-code.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-dont-interpret-tuples-as-elisp-code.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** don't interpret tuples as elisp code</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :results value
</span>  <span class="keyword">return </span>(1,2)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (1, 2)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>exporting-cache-and-noweb</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-exporting-cache-and-noweb.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-exporting-cache-and-noweb.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting cache and noweb</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: test_sleep
</span><span class="org-block-begin-line">#+begin_src R :session :exports code
</span>  Sys.sleep(time=5)
  1:10
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: test_sleep
</span><span class="org-block-begin-line">#+begin_src R :session :exports results :noweb yes :cache yes
</span>  &lt;&lt;test_sleep&gt;&gt;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[e2c9e6c2f84563b590a765502057d92463e50182]: test_sleep
</span><span class="org-table">|  1 |</span>
<span class="org-table">|  2 |</span>
<span class="org-table">|  3 |</span>
<span class="org-table">|  4 |</span>
<span class="org-table">|  5 |</span>
<span class="org-table">|  6 |</span>
<span class="org-table">|  7 |</span>
<span class="org-table">|  8 |</span>
<span class="org-table">|  9 |</span>
<span class="org-table">| 10 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>new-block-regexp-tests</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-new-block-regexp-tests.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-new-block-regexp-tests.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** new block regexp tests</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** Block 1 (Exports OK)</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span>Block 1
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** Block 2 (Exports OK - double blank line no white-space in Block)</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span>

<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** Block 3 (Fails - single blank line no white-space in Block)</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span>
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** Block 4 (Gets consumed by previous Block)</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span>Block 4
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** Block 5 (Fails - no lines in Block)</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span><span class="org-block-end-line">#+END_SRC
</span>
<span class="org-level-3">*** Block 6 (Gets consumed by previous Block</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">    :END:</span>

<span class="org-block-begin-line">#+BEGIN_SRC sh :tangle test-out
</span>Block 6
<span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>pass-a-vector-to-calc</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-pass-a-vector-to-calc.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-pass-a-vector-to-calc.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** pass a vector to calc</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src calc :var y=[1 2 3]
</span>  y
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1 2 3]
</span>
<span class="org-block-begin-line">#+begin_src calc :var y=[1 2 3]
</span>  3 y
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [3, 6, 9]
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=[1 2 3]
</span>  <span class="starter-kit-paren">(</span>elt data 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2
</span>
<span class="org-block-begin-line">#+begin_src calc
</span>  1 * 8
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 8
</span>
   </pre>
</content>
</entry>
<entry>
   <title>passing-elisp-looking-variables-to-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-passing-elisp-looking-variables-to-code-blocks.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-passing-elisp-looking-variables-to-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** passing elisp-looking variables to code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src perl :var it="(+ 1 1)" :results output
</span>  printf <span class="string">"passed in %s"</span>, $<span class="variable-name">it
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: passed in (+ 1 1)
</span>
<span class="org-meta-line">#+name: elisp-looking-table
</span><span class="org-table">| 1 | (+ 1 1) |</span>
<span class="org-table">| 2 | (a b c) |</span>
<span class="org-table">| 3 | (+ 3 3) |</span>

<span class="org-block-begin-line">#+begin_src perl :var data=elisp-looking-table[1,1]
</span>  $<span class="variable-name">data
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (a b c)
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=elisp-looking-table[1,1]
</span>  data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (a b c)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>strip-hline-before-processing-a-variables-indices</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-27-strip-hline-before-processing-a-variables-indices.html"/>
   <updated>2011-02-27:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-27-strip-hline-before-processing-a-variables-indices.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** strip hline before processing a variables indices</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-27</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: table-w-hline
</span><span class="org-table">| 1 | a |</span>
<span class="org-table">|---+---|</span>
<span class="org-table">| 2 | b |</span>
<span class="org-table">| 3 | c |</span>
<span class="org-table">| 4 | d |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var table=table-w-hline[1,1] :hlines no
</span>  table
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: hline
</span>
<span class="org-meta-line">#+tblname: perl-table-w-hline
</span><span class="org-table">| colA | colB |</span>
<span class="org-table">|------+------|</span>
<span class="org-table">| a1   | b1   |</span>
<span class="org-table">| a2   | b2   |</span>

<span class="org-meta-line">#+headers: :var b=perl-table-w-hline[2..,1]
#+headers: :var a=perl-table-w-hline[2..,0]
</span><span class="org-block-begin-line">#+begin_src perl :tangle yes
</span>  $<span class="variable-name">a</span>; $<span class="variable-name">b;</span>
<span class="org-block-end-line">#+end_src 
</span>
   </pre>
</content>
</entry>
<entry>
   <title>literal-reference-in-a-table-with-sbe</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-28-literal-reference-in-a-table-with-sbe.html"/>
   <updated>2011-02-28:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-28-literal-reference-in-a-table-with-sbe.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** literal reference in a table with sbe</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-28</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-table">| "eric schulte" | 12 |</span>
<span class="org-meta-line">#+TBLFM: @1$2='(sbe length (in $1))
</span>
<span class="org-meta-line">#+name: length
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var in="foo"
</span>  <span class="starter-kit-paren">(</span>length in<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>reference-to-a-commented-out-subtree</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-02-28-reference-to-a-commented-out-subtree.html"/>
   <updated>2011-02-28:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-02-28-reference-to-a-commented-out-subtree.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** reference to a commented out subtree</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-28</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-level-3">*** </span><span class="org-special-keyword">COMMENT</span><span class="org-level-3"> I don't export</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-28</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-meta-line">#+name: hidden-parameters
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 2 |</span>
<span class="org-table">| 3 |</span>
<span class="org-table">| 4 |</span>

<span class="org-level-3">*** I do export</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-02-28</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var params=hidden-parameters :exports both
</span>  params
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>leading-trailing-spaces</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-02-leading-trailing-spaces.html"/>
   <updated>2011-03-02:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-02-leading-trailing-spaces.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** leading/trailing spaces</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-02</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: spaces-wrapped-string
</span>- " pass through with space "


<span class="org-block-begin-line">#+begin_src emacs-lisp :var res=spaces-wrapped-string[0]
</span>  res
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">:  pass through with space 
</span>
   </pre>
</content>
</entry>
<entry>
   <title>results-org-raw-wrap</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-02-results-org-raw-wrap.html"/>
   <updated>2011-03-02:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-02-results-org-raw-wrap.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** results org raw wrap</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-02</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results output org :exports none
</span>  cat &lt;&lt;EOF
  - first
  - second
  EOF
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_ORG
</span>- first
- second<span class="org-meta-line">
</span><span class="org-block-end-line">#+END_ORG
</span>
<span class="org-level-3">*** Version 1</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-02</span>
<span class="org-special-keyword">    :END:</span>
This version only prints the org code for the table, but does not interprets it.
<span class="org-block-begin-line">#+begin_src R :exports both :results output raw
</span>  cat(
      <span class="string">"|--|--|\n"</span>,
      <span class="string">"|name|[[./pdf1.pdf]]|\n"</span>,
      <span class="string">"|--|--|\n"
</span>      )
<span class="org-block-end-line">#+end_src
</span>
<span class="org-level-3">*** Version 2</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-02</span>
<span class="org-special-keyword">    :END:</span>
This version prints the table including the graph as expected, but
:results is used twice as a header argument.
<span class="org-block-begin-line">#+begin_src R :results output :exports both :results raw
</span>  cat(
      <span class="string">"|--|--|\n"</span>,
      <span class="string">"|name|[[./pdf1.pdf]]|\n"</span>,
      <span class="string">"|--|--|\n"
</span>      )
<span class="org-block-end-line">#+end_src
</span>
<span class="org-level-3">*** Version 3</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-02</span>
<span class="org-special-keyword">    :END:</span>
Finally this version does only export the R code
<span class="org-block-begin-line">#+begin_src R :exports both :results raw
</span>  cat(
      <span class="string">"|--|--|\n"</span>,
      <span class="string">"|name|[[./pdf1.pdf]]|\n"</span>,
      <span class="string">"|--|--|\n"
</span>      )
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>export-of-inline-r-code</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-03-export-of-inline-r-code.html"/>
   <updated>2011-03-03:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-03-export-of-inline-r-code.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** export of inline R code</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-03</span>
<span class="org-special-keyword">   :END:</span>
Here I test inline code evaluation in R.

<span class="org-block-begin-line">#+begin_src R :session *R*
</span>x <span class="constant">&lt;- </span>100
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 100
</span>
Now I want to export the value of x, which should be
src_R[:session *R*]{x} .

Did the number 100 show up at the end of the previous sentence on export?

   </pre>
</content>
</entry>
<entry>
   <title>simple-mysql</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-03-simple-mysql.html"/>
   <updated>2011-03-03:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-03-simple-mysql.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple mysql</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-03</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sql :engine mysql
</span>  show tables;
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-results-as-a-list</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-06-eval-results-as-a-list.html"/>
   <updated>2011-03-06:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-06-eval-results-as-a-list.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval results as a list</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :results value
</span>  <span class="keyword">return</span> <span class="string">"(mapcar (lambda (el) (+ 1 el)) '(1 2))"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 2 | 3 |</span>

<span class="org-block-begin-line">#+begin_src python :results value
</span>  <span class="keyword">return</span> <span class="string">"[1, 2]"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |</span>

<span class="org-block-begin-line">#+begin_src python :results value
</span>  <span class="keyword">return </span>[1, 2]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 |</span>

<span class="org-block-begin-line">#+begin_src python :results value
</span>  <span class="keyword">return</span> <span class="string">"%r"</span> % <span class="string">"[1 2]"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [1 2]
</span>
   </pre>
</content>
</entry>
<entry>
   <title>looks-like-a-pipe-in-a-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-07-looks-like-a-pipe-in-a-table.html"/>
   <updated>2011-03-07:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-07-looks-like-a-pipe-in-a-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** looks like a pipe in a table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-07</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: clean
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var in=""
</span>  <span class="starter-kit-paren">(</span><span class="keyword">flet</span> <span class="starter-kit-paren">((</span>clean <span class="starter-kit-paren">(</span>in<span class="starter-kit-paren">)</span>
                <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>listp in<span class="starter-kit-paren">)</span>
                    <span class="starter-kit-paren">(</span>mapcar #'clean in<span class="starter-kit-paren">)</span>
                  <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>stringp in<span class="starter-kit-paren">)</span>
                      <span class="starter-kit-paren">(</span>replace-regexp-in-string <span class="string">"&#166;"</span> <span class="string">"|"</span> in<span class="starter-kit-paren">)</span>
                    in<span class="starter-kit-paren">))))</span>
    <span class="starter-kit-paren">(</span>clean in<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: regexps
</span><span class="org-table">| first  | (a&#166;b) |</span>
<span class="org-table">| second | (1&#166;2) |</span>

<span class="org-block-begin-line">#+begin_src perl :var a=clean(in=regexps)[0,1] :var b=clean(in=regexps)[1,1]
</span>  $<span class="variable-name">a</span>; $<span class="variable-name">b;</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (1|2)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>conflicting-header-arguments</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-14-conflicting-header-arguments.html"/>
   <updated>2011-03-14:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-14-conflicting-header-arguments.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** conflicting header arguments</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-14</span>
<span class="org-special-keyword">   :END:</span>

code block
<span class="org-meta-line">#+name: conflict-block
</span><span class="org-block-begin-line">#+begin_src sh :exports results :results silent
</span>  <span class="builtin">echo </span>eric
<span class="org-block-end-line">#+end_src
</span>
call line
<span class="org-meta-line">#+call: conflict-block() :exports results
</span>
<span class="org-meta-line">#+name: conflict-block()
</span><span class="org-code">: eric
</span>
   </pre>
</content>
</entry>
<entry>
   <title>macros-during-tangling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-14-macros-during-tangling.html"/>
   <updated>2011-03-14:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-14-macros-during-tangling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** macros during tangling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:ID:</span>       <span class="org-property-value">d2ff9d6f-b413-4072-91a9-3ae8aa32032c</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-14</span>
<span class="org-special-keyword">   :END:</span>

First, add macro expansion to the new `org-babel-tangle-body-hook'.

<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>add-hook 'org-babel-tangle-body-hook
            <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">()</span> <span class="starter-kit-paren">(</span>org-export-preprocess-apply-macros<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
Then define the macro.  Note: you may need to export the buffer before
tangling so that the macro definition is noticed and processed by
Org-mode.

<span class="org-meta-line">#+MACRO: CONFIG_PARAM01 45
</span>
Then on both export and tangling the macro in the following code block
will be replaced.

<span class="org-block-begin-line">#+begin_src sh :tangle yes
</span>  <span class="builtin">echo </span>org-mode set CONFIG_PARAMETER to: {{{CONFIG_PARAM01}}}
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>caching-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-23-caching-on-export.html"/>
   <updated>2011-03-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-23-caching-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** caching on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-23</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: testcache
</span><span class="org-block-begin-line">#+begin_src R :cache yes :exports results
</span>  dat <span class="constant">&lt;- </span> matrix(runif(12), 3, 4)
  print(dat)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[e7b83e61596da84f85c5a24e61569576c802f9a2]: testcache
</span><span class="org-table">| 0.590091332094744 | 0.101750465808436 | 0.487125408137217 |  0.92315583024174 |</span>
<span class="org-table">| 0.483292032498866 | 0.427640072302893 | 0.974636133294553 | 0.995571716455743 |</span>
<span class="org-table">|  0.60190233332105 | 0.122638279106468 | 0.437959408387542 | 0.015639441087842 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>colnames-with-call-lines</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-03-29-colnames-with-call-lines.html"/>
   <updated>2011-03-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-03-29-colnames-with-call-lines.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** colnames with call lines</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-03-29</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+TBLNAME: data
</span><span class="org-table">| x | parameter | value |</span>
<span class="org-table">|---+-----------+-------|</span>
<span class="org-table">| 0 | heat      |    30 |</span>
<span class="org-table">| 1 | heat      |    30 |</span>

<span class="org-meta-line">#+name: func5
</span><span class="org-block-begin-line">#+begin_src R :var name=data :var a="one" :colnames yes
</span>  names(name)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: func5
</span><span class="org-table">| x         |</span>
<span class="org-table">|-----------|</span>
<span class="org-table">| x         |</span>
<span class="org-table">| parameter |</span>
<span class="org-table">| value     |</span>

<span class="org-meta-line">#+call: func5(name=data, a="two") :colnames yes
</span>
<span class="org-meta-line">#+name: func5(name=data, a="two")
</span><span class="org-table">| x         |</span>
<span class="org-table">|-----------|</span>
<span class="org-table">| x         |</span>
<span class="org-table">| parameter |</span>
<span class="org-table">| value     |</span>

   </pre>
</content>
</entry>
<entry>
   <title>cl-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-01-cl-example.html"/>
   <updated>2011-04-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-01-cl-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** CL example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-01</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">range</span> <span class="starter-kit-paren">(</span>n <span class="type">&amp;optional</span> m<span class="starter-kit-paren">)</span>
    <span class="doc">"Return the numbers in range."</span>
    <span class="starter-kit-paren">(</span><span class="keyword">loop</span> for num from <span class="starter-kit-paren">(</span><span class="keyword">if</span> m n 0<span class="starter-kit-paren">)</span> to <span class="starter-kit-paren">(</span><span class="keyword">if</span> m m <span class="starter-kit-paren">(</span>- n 1<span class="starter-kit-paren">))</span> collect num<span class="starter-kit-paren">))</span>
  
  <span class="starter-kit-paren">(</span>mapcar #'list <span class="starter-kit-paren">(</span>mapcar #'1+ <span class="starter-kit-paren">(</span>range 10<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">|  1 |</span>
<span class="org-table">|  2 |</span>
<span class="org-table">|  3 |</span>
<span class="org-table">|  4 |</span>
<span class="org-table">|  5 |</span>
<span class="org-table">|  6 |</span>
<span class="org-table">|  7 |</span>
<span class="org-table">|  8 |</span>
<span class="org-table">|  9 |</span>
<span class="org-table">| 10 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>detangling-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-01-detangling-example.html"/>
   <updated>2011-04-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-01-detangling-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** detangling example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :tangle:   yes
   :comments: yes
   :shebang:  #!/bin/sh
   :ID:       7a22cf71-6be3-4fca-a700-4c8be8237303
   :DATE:     2011-04-01
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: sh-for-tangling
</span><span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> <span class="string">"this is the `sh-for-tangling' code block"</span>
  <span class="variable-name">num</span>=<span class="sh-quoted-exec">`expr 1 + 1`</span>
  <span class="builtin">echo</span> <span class="string">"the value of num is $num"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> <span class="string">"this is an unnamed code block"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>grabbing-the-current-buffer-during-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-01-grabbing-the-current-buffer-during-export.html"/>
   <updated>2011-04-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-01-grabbing-the-current-buffer-during-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** grabbing the current buffer during export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-01</span>
<span class="org-special-keyword">   :END:</span>
Eric

<span class="org-block-begin-line">#+begin_src emacs-lisp :var buf=(buffer-file-name (current-buffer)) :exports both
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"buffer %S!"</span> buf<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :exports results :results output
</span>  git log -1
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangling-out-vc-information</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-01-tangling-out-vc-information.html"/>
   <updated>2011-04-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-01-tangling-out-vc-information.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangling out vc information</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-01</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+headers: :var STATE=(vc-state (or (buffer-file-name) org-current-export-file))
#+headers: :var REV=(vc-working-revision (or (buffer-file-name) org-current-export-file))
</span><span class="org-block-begin-line">#+begin_src sh :tangle yes
</span>  rm -rf ./R
  rm -f ./spreadSim.sub
  <span class="variable-name">REVISION</span>=$<span class="variable-name">REV</span>.$<span class="variable-name">STATE</span>
  tar -xf nsa.$<span class="variable-name">REVISION</span>.tar.gz
  $<span class="variable-name">HOME</span>/R/R/R-2.12.0/bin/Rscript --vanilla -e
<span class="string">"source('./R/generateLatinHypercubeScenarios.R'); doIt()"</span>
  <span class="keyword">for</span> SCENARIO<span class="keyword"> in</span> ./R/scenarios/*.R; <span class="keyword">do</span>
    <span class="builtin">export</span> <span class="variable-name">SCENARIO</span>=${<span class="variable-name">SCENARIO</span><span class="comment-delimiter">#</span><span class="comment">./R/scenarios/}
</span>    qsub nsa.sub
  <span class="keyword">done
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>vc-log</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-01-vc-log.html"/>
   <updated>2011-04-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-01-vc-log.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** vc-log</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-01</span>
<span class="org-special-keyword">   :END:</span>

A version control log of this file.  The <span class="org-code">=vc-log=</span> code block lives in
the library of babel.
<span class="org-meta-line">#+call: vc-log() :exports results
</span>
   </pre>
</content>
</entry>
<entry>
   <title>session-associated-with-r-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-02-session-associated-with-r-block.html"/>
   <updated>2011-04-02:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-02-session-associated-with-r-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** session associated with R block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-02</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R :session *chris*
</span>  x <span class="constant">&lt;-</span> 1
  y <span class="constant">&lt;- </span>2
  y-x
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
</span>
   </pre>
</content>
</entry>
<entry>
   <title>headers-in-r-tables-during-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-04-headers-in-r-tables-during-export.html"/>
   <updated>2011-04-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-04-headers-in-r-tables-during-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** headers in R tables during export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-04</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+TBLNAME: Chuah07
</span><span class="org-table">| condition | Mean.offer |</span>
<span class="org-table">|-----------+------------|</span>
<span class="org-table">| 1.MMM     |      48.49 |</span>
<span class="org-table">| 2.MMU     |      42.59 |</span>
<span class="org-table">| 3.MUM     |      44.87 |</span>
<span class="org-table">| 4.UMU     |      46.43 |</span>
<span class="org-table">| 5.UUM     |      44.15 |</span>
<span class="org-table">| 6.UUU     |      43.80 |</span>
<span class="org-table">| MAL       |      46.28 |</span>
<span class="org-table">| UK        |       44.1 |</span>
<span class="org-table">| All       |      45.29 |</span>

<span class="org-meta-line">#+headers: :var data=Chuah07
</span><span class="org-block-begin-line">#+begin_src R :results output :exports both :cache yes
</span>  str(data)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name[135a7f73839b69d118780ca29a64c3840601f7b9]:
</span><span class="org-code">: 'data.frame': 9 obs. of  2 variables:
:  $ condition : chr  "1.MMM" "2.MMU" "3.MUM" "4.UMU" ... 
:  $ Mean.offer: num  48.5 42.6 44.9 46.4 44.1 ... eric
</span>
   </pre>
</content>
</entry>
<entry>
   <title>emacs-lisp-printing-with-output-to-string</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-10-emacs-lisp-printing-with-output-to-string.html"/>
   <updated>2011-04-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-10-emacs-lisp-printing-with-output-to-string.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** emacs-lisp printing with output to string</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-10</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :results output
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>dog <span class="starter-kit-paren">(</span>sqrt 2<span class="starter-kit-paren">))</span>
        <span class="starter-kit-paren">(</span>cat 7<span class="starter-kit-paren">))</span>
    <span class="starter-kit-paren">(</span>print <span class="starter-kit-paren">(</span>format <span class="string">"%s %f"</span> <span class="string">"Dog: "</span> <span class="starter-kit-paren">(</span>eval dog<span class="starter-kit-paren">)))</span>
    <span class="starter-kit-paren">(</span>print <span class="starter-kit-paren">(</span>format <span class="string">"%s %d"</span> <span class="string">"Cat: "</span> <span class="starter-kit-paren">(</span>eval cat<span class="starter-kit-paren">))</span> nil<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>print <span class="string">"Fish."</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 
: "Dog:  1.414214"
: 
: "Cat:  7"
: 
: "Fish."
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>dog <span class="starter-kit-paren">(</span>sqrt 2<span class="starter-kit-paren">))</span>
        <span class="starter-kit-paren">(</span>cat 7<span class="starter-kit-paren">))</span>
    `<span class="starter-kit-paren">((</span>dog ,dog<span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span>cat ,cat<span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span>fish<span class="starter-kit-paren">)))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| dog  | 1.4142135623730951 |</span>
<span class="org-table">| cat  |                  7 |</span>
<span class="org-table">| fish |                    |</span>

   </pre>
</content>
</entry>
<entry>
   <title>complex-numbers-in-tables-and-python,-reference-in-table-formula</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-13-complex-numbers-in-tables-and-python,-reference-in-table-formula.html"/>
   <updated>2011-04-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-13-complex-numbers-in-tables-and-python,-reference-in-table-formula.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** complex numbers in tables and python, reference in table formula</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-13</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: parameter-variation(data=0)
</span><span class="org-block-begin-line">#+begin_src python :result values
</span>  <span class="keyword">return</span> <span class="string">'text'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-table">|---------------------------------------|</span>
<span class="org-table">| "(0.0331901438056,0.000535222885197)" |</span>
<span class="org-table">| "(0.0333434157791,0.000537930174356)" |</span>
<span class="org-table">| "(0.0345727512157,0.000559346040457)" |</span>
<span class="org-table">| "(0.0353146483908,0.000571501584524)" |</span>
<span class="org-table">| "(0.0355522909393,0.000574387067408)" |</span>
<span class="org-table">| "(0.0356575682336,0.000574851263615)" |</span>
<span class="org-table">| "(0.0357806926897,0.000575051685084)" |</span>
<span class="org-table">|---------------------------------------|</span>
<span class="org-table">| text                                  |</span>
<span class="org-meta-line">#+TBLFM: @8$1='(sbe parameter-variation (nums @1$1..@7$1))
</span>
<span class="org-table">| '(1 2 3 4) |</span>
<span class="org-table">|------------|</span>
<span class="org-table">|          4 |</span>
<span class="org-meta-line">#+TBLFM: @2$1='(sbe quote (it @1$1))
</span>
<span class="org-table">| (1 2 3 4) |</span>
<span class="org-table">|-----------|</span>
<span class="org-table">| #ERROR    |</span>
<span class="org-meta-line">#+TBLFM: @2$1='(sbe quote (it @1$1))
</span>
<span class="org-level-3">*** using vectors to represent complex number is lisp</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-15</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-table">| [1 2]            |</span>
<span class="org-table">|------------------|</span>
<span class="org-table">| real:1 complex:2 |</span>
<span class="org-meta-line">#+TBLFM: @2$1='(sbe real (it @1$1))
</span>
<span class="org-meta-line">#+name: real(it='())
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>format <span class="string">"real:%d complex:%d"</span> <span class="starter-kit-paren">(</span>aref it 0<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>aref it 1<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-level-3">*** reference the table in a table formula</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-13</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-meta-line">#+name: complex-data
</span><span class="org-table">|-------------------------------------|</span>
<span class="org-table">| (0.0331901438056,0.000535222885197) |</span>
<span class="org-table">|-------------------------------------|</span>
<span class="org-table">|                                   4 |</span>
<span class="org-meta-line">#+TBLFM: @2$1='(sbe quote (it "complex-data"))
</span>
<span class="org-level-3">*** externally referencing the table</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-13</span>
<span class="org-special-keyword">    :END:</span>
<span class="org-meta-line">#+name: complex-data
</span><span class="org-table">|-------------------------------------|</span>
<span class="org-table">| (0.0331901438056,0.000535222885197) |</span>
<span class="org-table">| (0.0333434157791,0.000537930174356) |</span>
<span class="org-table">| (0.0345727512157,0.000559346040457) |</span>
<span class="org-table">| (0.0353146483908,0.000571501584524) |</span>
<span class="org-table">| (0.0355522909393,0.000574387067408) |</span>
<span class="org-table">| (0.0356575682336,0.000574851263615) |</span>
<span class="org-table">| (0.0357806926897,0.000575051685084) |</span>
<span class="org-meta-line">#+TBLFM: @8$1='(sbe parameter-variation (nums @1$1..@7$1))
</span>
<span class="org-block-begin-line">#+begin_src python :var data=complex-data
</span>  <span class="keyword">return </span>data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| (0.0331901438056,0.000535222885197) |</span>
<span class="org-table">| (0.0333434157791,0.000537930174356) |</span>
<span class="org-table">| (0.0345727512157,0.000559346040457) |</span>
<span class="org-table">| (0.0353146483908,0.000571501584524) |</span>
<span class="org-table">| (0.0355522909393,0.000574387067408) |</span>
<span class="org-table">| (0.0356575682336,0.000574851263615) |</span>
<span class="org-table">| (0.0357806926897,0.000575051685084) |</span>

   </pre>
</content>
</entry>
<entry>
   <title>ocaml-appending-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-19-ocaml-appending-blocks.html"/>
   <updated>2011-04-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-19-ocaml-appending-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** Ocaml appending blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-19</span>
<span class="org-special-keyword">   :END:</span>
block

<span class="org-block-begin-line">#+begin_src ocaml
</span>  <span class="tuareg-font-lock-operator">[|</span>1<span class="tuareg-font-lock-operator">;</span>2<span class="tuareg-font-lock-operator">;</span>3<span class="tuareg-font-lock-operator">|];;
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 | 2 | 3 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>simple-oz-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-19-simple-oz-example.html"/>
   <updated>2011-04-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-19-simple-oz-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple Oz example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src oz :results output
</span>  {Browse 'Hello'}<span class="org-meta-line">
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>units-in-r-plot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-21-units-in-r-plot.html"/>
   <updated>2011-04-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-21-units-in-r-plot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** units in R plot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-21</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R  :results graphics :file test.png :width 8 :height 8 :res 200 :units cm
</span>  x <span class="constant">&lt;-</span> -10:10
  y <span class="constant">&lt;-</span> x^2
  plot(x, y, type=<span class="string">"l"</span>, col=<span class="string">"red",</span> lty=1)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:test.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>automatic-org-mode-formatting</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-04-27-automatic-org-mode-formatting.html"/>
   <updated>2011-04-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-04-27-automatic-org-mode-formatting.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** automatic org-mode formatting</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-04-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: raw-results
</span><span class="org-block-begin-line">#+begin_src sh :results output tabular
</span>  <span class="builtin">echo</span> <span class="string">"| 1 |"</span>
  <span class="builtin">echo</span> <span class="string">"| 2 |"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var in=raw-results
</span>  <span class="starter-kit-paren">(</span>stringp in<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: t
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inserting-complicated-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-05-inserting-complicated-results.html"/>
   <updated>2011-05-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-05-inserting-complicated-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inserting complicated results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-05</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results scalar
</span>  <span class="starter-kit-paren">((</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>result<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span><span class="keyword">condition-case</span> nil <span class="starter-kit-paren">(</span>read result<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span><span class="warning">error</span> result<span class="starter-kit-paren">)))</span>
   <span class="string">"(:return
   (:ok \"{:model #&lt;MINLP f(x,y)={(x[0]-5)^2+(x[1]-3)^2-y*sqrt($x),2}&gt;, :v #&lt;Var</span><span class="string"><span class="column-marker-3">i</span></span><span class="string">ables x={ 4.0, 4.0 } y={ 0 }&gt;, :z nil}\")
   13)"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| :return | (:ok {:model #&lt;MINLP f(x,y)={(x</span><span class="org-footnote">[0]</span><span class="org-table">-5)^2+(x</span><span class="org-footnote">[1]</span><span class="org-table">-3)^2-y*sqrt($x),2}&gt;, :v #&lt;Variables x={ 4.0, 4.0 } y={ 0 }&gt;, :z nil}) | 13 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>simple-latex-verbatim-wrap-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-05-simple-latex-verbatim-wrap-example.html"/>
   <updated>2011-05-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-05-simple-latex-verbatim-wrap-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple latex verbatim wrap example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-05</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-export-latex-verbatim-wrap
        '<span class="starter-kit-paren">(</span><span class="string">"{\\scriptsize\n\\begin{verbatim}\n"</span> . <span class="string">"\\end{verbatim}\n}\n"</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> eric schulte
  <span class="builtin">echo </span>another
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>new-names-for-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-06-new-names-for-results.html"/>
   <updated>2011-05-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-06-new-names-for-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** new names for results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: simple
</span><span class="org-code">: 1
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=simple
</span>  data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
</span>
changing the variable used to label data
<span class="org-block-begin-line">#+begin_src emacs-lisp :results silent
</span>  <span class="starter-kit-paren">(</span>setq org-babel-result-fmt
        <span class="string">"^[ \t]*#\\+</span><span class="string"><span class="regexp-grouping-backslash">\\</span></span><span class="string"><span class="regexp-grouping-construct">(</span></span><span class="string">TBLNAME</span><span class="string"><span class="regexp-grouping-backslash">\\</span></span><span class="string"><span class="regexp-grouping-construct">|</span></span><span class="string">RESNAME</span><span class="string"><span class="regexp-grouping-backslash">\\</span></span><span class="string"><span class="regexp-grouping-construct">|</span></span><span class="string">RESULTS</span><span class="string"><span class="regexp-grouping-backslash">\\</span></span><span class="string"><span class="regexp-grouping-construct">|</span></span><span class="string">DATA</span><span class="string"><span class="regexp-grouping-backslash">\\</span></span><span class="string"><span class="regexp-grouping-construct">)</span></span><span class="string">:[ \t]*%s[ \t]*$"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: not-so-simple
</span><span class="org-code">: 2
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var data=not-so-simple
</span>  data
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ocaml</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-06-ocaml.html"/>
   <updated>2011-05-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-06-ocaml.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ocaml</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ocaml
</span>  <span class="tuareg-font-lock-operator">[</span>3<span class="tuareg-font-lock-operator">;</span>2<span class="tuareg-font-lock-operator">;</span>3<span class="tuareg-font-lock-operator">]</span> <span class="tuareg-font-lock-operator">@</span> <span class="tuareg-font-lock-operator">[</span>3<span class="tuareg-font-lock-operator">;</span>2<span class="tuareg-font-lock-operator">;</span>3<span class="tuareg-font-lock-operator">;</span>4<span class="tuareg-font-lock-operator">;</span>5<span class="tuareg-font-lock-operator">];;
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 3 | 2 | 3 | 3 | 2 | 3 | 4 | 5 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>append-tables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-14-append-tables.html"/>
   <updated>2011-05-14:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-14-append-tables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** append tables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-14</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: table-names
</span>- first-table
- second-table
- third-table

<span class="org-meta-line">#+name: first-table
</span><span class="org-table">| a | 1 |</span>
<span class="org-table">| b | 2 |</span>

<span class="org-meta-line">#+name: second-table
</span><span class="org-table">| c | 3 |</span>
<span class="org-table">| d | 4 |</span>

<span class="org-meta-line">#+name: third-table
</span><span class="org-table">| e | 5 |</span>
<span class="org-table">| f | 6 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var table-names=table-names
</span>  <span class="starter-kit-paren">(</span>mapcar #'org-babel-ref-resolve table-names<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| (a 1) | (b 2) |</span>
<span class="org-table">| (c 3) | (d 4) |</span>
<span class="org-table">| (e 5) | (f 6) |</span>

   </pre>
</content>
</entry>
<entry>
   <title>dont-match-end_src-inside-of-a-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-14-dont-match-end_src-inside-of-a-block.html"/>
   <updated>2011-05-14:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-14-dont-match-end_src-inside-of-a-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** don't match end_src inside of a block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-14</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: the_issue
</span><span class="org-block-begin-line">#+begin_src sh :results output
</span>  <span class="builtin">echo</span> <span class="string">'#+end_src'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: the_issue
</span><span class="org-code">: #+end_src block
</span>
   </pre>
</content>
</entry>
<entry>
   <title>awk-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-26-awk-example.html"/>
   <updated>2011-05-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-26-awk-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** awk example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-26</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: simple-table
</span><span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 6 |</span>
<span class="org-table">| 7 | 8 | 9 |</span>

<span class="org-block-begin-line">#+begin_src awk :stdin simple-table
</span>  {<span class="preprocessor">print </span>$1}
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| 1 |</span>
<span class="org-table">| 4 |</span>
<span class="org-table">| 7 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>passing-values-through-to-stdin-of-shell-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-26-passing-values-through-to-stdin-of-shell-code-blocks.html"/>
   <updated>2011-05-26:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-26-passing-values-through-to-stdin-of-shell-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** passing values through to STDIN of shell code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-26</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: square-table
</span><span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 6 |</span>
<span class="org-table">| 7 | 8 | 9 |</span>

<span class="org-meta-line">#+name: first-col
</span><span class="org-block-begin-line">#+begin_src sh :stdin square-table
</span>  awk <span class="string">'{print $1}'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :stdin first-col
</span>  sed <span class="string">'s/4/middle/g'
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">|      1 |</span>
<span class="org-table">| middle |</span>
<span class="org-table">|      7 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>example-#+call-line-expansion</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-27-example-#+call-line-expansion.html"/>
   <updated>2011-05-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-27-example-#+call-line-expansion.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** example </span><span class="org-level-2"><span class="org-code">=#+call=</span></span><span class="org-level-2"> line expansion</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-27</span>
<span class="org-special-keyword">   :END:</span>
this code block peeks inside of the `params' variable which is used by
babel during code block evaluation
<span class="org-meta-line">#+name: callee
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="comment-delimiter">;; </span><span class="comment">this is cheating and shouldn't be done in user code :)
</span>  <span class="starter-kit-paren">(</span>or <span class="starter-kit-paren">(</span>cdr <span class="starter-kit-paren">(</span>assoc <span class="builtin">:foo</span> params<span class="starter-kit-paren">))</span> 'unset<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
this code block evaluates to the following,
<span class="org-meta-line">#+name: callee
</span><span class="org-code">: unset
</span>
this call line,
<span class="org-meta-line">#+call: callee[:foo bar]() :results org
</span>
expands into the following which is evaluated as a normal code block
by Babel.
<span class="org-block-begin-line">#+begin_src emacs-lisp :var results=callee[:foo bar]() :results org
</span>  results
<span class="org-block-end-line">#+end_src
</span>
this code block evaluates to the following,
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_ORG
</span>nothing<span class="org-meta-line">
</span><span class="org-block-end-line">#+END_ORG
</span>
   </pre>
</content>
</entry>
<entry>
   <title>lisp-body-with-multiple-forms</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-05-31-lisp-body-with-multiple-forms.html"/>
   <updated>2011-05-31:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-05-31-lisp-body-with-multiple-forms.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** lisp body with multiple forms</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-05-31</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src lisp :results value
</span>  <span class="starter-kit-paren">(</span>format t <span class="string">"~&amp;eric"</span><span class="starter-kit-paren">)</span>
  <span class="starter-kit-paren">(</span>+ 1 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>default-directory-examples-in-lisp</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-01-default-directory-examples-in-lisp.html"/>
   <updated>2011-06-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-01-default-directory-examples-in-lisp.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** default directory examples in lisp</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-01</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src lisp
</span>  *default-pathname-defaults*
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">pwd
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src lisp :dir
</span>  *default-pathname-defaults*
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: #P""
</span>
   </pre>
</content>
</entry>
<entry>
   <title>testing-new-data-names</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-02-testing-new-data-names.html"/>
   <updated>2011-06-02:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-02-testing-new-data-names.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** testing new data names</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-02</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: simple-123
</span><span class="org-code">: 123
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var simple=simple-123 :exports both
</span>  <span class="starter-kit-paren">(</span>* simple 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
results

data

my data is results

<span class="org-meta-line">#+name:
</span><span class="org-code">: 246
</span>
   </pre>
</content>
</entry>
<entry>
   <title>:file-and-python</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-06-:file-and-python.html"/>
   <updated>2011-06-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-06-:file-and-python.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** </span><span class="org-level-2"><span class="org-code">=:file=</span></span><span class="org-level-2"> and python</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :file /tmp/test.png
</span>  <span class="keyword">return </span>1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:/tmp/test.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>quick-testing-new-session-code</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-06-quick-testing-new-session-code.html"/>
   <updated>2011-06-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-06-quick-testing-new-session-code.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** quick testing new session code</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :session test :results output
</span>  <span class="builtin">echo </span>foo
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: foo
</span>
<span class="org-block-begin-line">#+begin_src ruby :results output :session simple
</span>  puts <span class="string">"foo"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: foo
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-shell</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-06-simple-shell.html"/>
   <updated>2011-06-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-06-simple-shell.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple shell</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  sleep 10 &amp;&amp; ls
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| _config.yml     |</span>
<span class="org-table">| data            |</span>
<span class="org-table">| development.org |</span>
<span class="org-table">| elsevier        |</span>
<span class="org-table">| index.org       |</span>
<span class="org-table">| paper           |</span>
<span class="org-table">| publish.org     |</span>
<span class="org-table">| scraps          |</span>
<span class="org-table">| scraps.html     |</span>
<span class="org-table">| scraps.org      |</span>
<span class="org-table">| scraps.tex      |</span>

<span class="org-block-begin-line">#+begin_src ruby :session eric
</span>  puts [1..4]
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: nil
</span>
   </pre>
</content>
</entry>
<entry>
   <title>continued-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-10-continued-code-blocks.html"/>
   <updated>2011-06-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-10-continued-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** continued code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:comments:</span> <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-10</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: foo
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"foo:%S"</span> 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"un-named"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: bar
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"bar:%S"</span> 1<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: foo
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"foo:%S"</span> 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: bar
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"bar:%S"</span> 2<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :tangle no :results silent
</span>  <span class="starter-kit-paren">(</span><span class="keyword">with-temp-buffer</span>
    <span class="starter-kit-paren">(</span>insert-file-contents <span class="string">"scraps.el"</span><span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>eval-buffer<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ruby-with-xmpfilter</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-10-ruby-with-xmpfilter.html"/>
   <updated>2011-06-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-10-ruby-with-xmpfilter.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ruby with xmpfilter</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-10</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ruby :results xmp code
</span>  2 + 2 <span class="comment-delimiter"># </span><span class="comment">=&gt;
</span>  3.times{ puts <span class="constant">:hello </span>}
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-block-begin-line">#+BEGIN_SRC ruby
</span>2 + 2 <span class="comment-delimiter"># </span><span class="comment">=&gt; 4
</span>3.times{ puts <span class="constant">:hello</span> }
<span class="comment-delimiter"># </span><span class="comment">&gt;&gt; hello
</span><span class="comment-delimiter"># </span><span class="comment">&gt;&gt; hello
</span><span class="comment-delimiter"># </span><span class="comment">&gt;&gt; hello
</span><span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-test</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-10-tangle-test.html"/>
   <updated>2011-06-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-10-tangle-test.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle test</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-10</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R :tangle test.R :shebang #!/bin/cat :padline no
</span>This is
a test
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>named-code-block-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-13-named-code-block-export.html"/>
   <updated>2011-06-13:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-13-named-code-block-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** named code block export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-13</span>
<span class="org-special-keyword">   :END:</span>
This has a name which is not exported.

<span class="org-meta-line">#+name: rand(n)
</span><span class="org-block-begin-line">#+begin_src R
</span>  runif(n)
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>python-session</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-19-python-session.html"/>
   <updated>2011-06-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-19-python-session.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** python session</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src python :results output :session mypy 
</span><span class="variable-name">x</span> = 1
<span class="keyword">for</span> i <span class="keyword">in</span> <span class="builtin">range</span>(1,5):
  x = x + i
  <span class="keyword">print</span> x

<span class="keyword">print</span> <span class="string">"I throw an error"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 
: ... ... ... 2
: 4
: 7
: 11
: I throw an error
</span>
<span class="org-block-begin-line">#+begin_src python :results output :session
</span>  <span class="keyword">print </span>y
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Traceback (most recent call last):
:   File "&lt;stdin&gt;", line 1, in &lt;module&gt;
: NameError: name 'y' is not defined
</span>
   </pre>
</content>
</entry>
<entry>
   <title>scalar-emacs-lisp-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-19-scalar-emacs-lisp-results.html"/>
   <updated>2011-06-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-19-scalar-emacs-lisp-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** scalar emacs lisp results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :results scalar
</span>  '<span class="starter-kit-paren">(</span>1 2 3<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (1 2 3)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>expand-variable-during-tangling</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-20-expand-variable-during-tangling.html"/>
   <updated>2011-06-20:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-20-expand-variable-during-tangling.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** expand variable during tangling</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-20</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :var VER=(vc-working-revision (buffer-file-name))
</span>  <span class="builtin">echo</span> $<span class="variable-name">VER
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>clojure-:results-scalar</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-21-clojure-:results-scalar.html"/>
   <updated>2011-06-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-21-clojure-:results-scalar.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** clojure </span><span class="org-level-2"><span class="org-code">=:results scalar=</span></span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-21</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src clojure :results scalar
</span>  '<span class="starter-kit-paren">(</span>1 2 3<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>large-code-in-inline-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-22-large-code-in-inline-blocks.html"/>
   <updated>2011-06-22:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-22-large-code-in-inline-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** large code in inline blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-22</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: big-block
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :exports none
</span>  <span class="string">"something complex"
</span><span class="org-block-end-line">#+end_src
</span>
Here is some text with src_emacs-lisp[:var it=big-block]{it} in the middle.

   </pre>
</content>
</entry>
<entry>
   <title>text-and-graphics-from-r</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-24-text-and-graphics-from-r.html"/>
   <updated>2011-06-24:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-24-text-and-graphics-from-r.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** text and graphics from R</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-24</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src R :results output :session
</span>print(seq(1,10))
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src R :file example.png :results graphics :session
</span>plot(seq(1,10))
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:example.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>inline-call-line</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-27-inline-call-line.html"/>
   <updated>2011-06-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-27-inline-call-line.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inline call line</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2011-06-27
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: double
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var it=0
</span>  <span class="starter-kit-paren">(</span>* 2 it<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
This is the number src_sh[:var it=double(it=1)]{echo $it} in the middle

The following exports as a normal call line
<span class="org-meta-line">#+call: double(it=1)
</span>
Now here is an inline call call_double(it=1) stuck in the middle of
some prose.

This one should not be exported <span class="org-code">=call_double(it=2)=</span> because it is
quoted.

Finally this next one should export, even though it starts a line
call_double(it=3) because sometimes inline blocks fold with a
paragraph.

And, a call with raw results call_double(4)[:results raw] should not
have quoted results.

   </pre>
</content>
</entry>
<entry>
   <title>multiple-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-27-multiple-variables.html"/>
   <updated>2011-06-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-27-multiple-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** multiple variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-27</span>
<span class="org-special-keyword">   :END:</span>

Should work call_concat(1, 2, 3) <span class="org-code">=123=</span> in order.

<span class="org-meta-line">#+name: concat
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var a=0 :var b=0 :var c=0
</span>  <span class="starter-kit-paren">(</span>format <span class="string">"%S%S%S"</span> a b c<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
Should be positive call_lob-minus(4, 3) <span class="org-code">=1=</span> by order.

   </pre>
</content>
</entry>
<entry>
   <title>un-named-variables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-27-un-named-variables.html"/>
   <updated>2011-06-27:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-27-un-named-variables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** un-named variables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-27</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: square
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var it=0
</span>  <span class="starter-kit-paren">(</span>* it it<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: square(8)
</span>
first we can name the argument with call_square(it=4) <span class="org-code">=16=</span>

then we can pass the argument unnamed with call_square(4) <span class="org-code">=16=</span>

<span class="org-meta-line">#+name: minus
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var a=0 :var b=0
</span>  <span class="starter-kit-paren">(</span>- a b<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
To ensure that these arguments are passed in the correct order we can
use the following call_minus(8, 4) <span class="org-code">=-4=</span>

   </pre>
</content>
</entry>
<entry>
   <title>another-test</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-29-another-test.html"/>
   <updated>2011-06-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-29-another-test.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** another test</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-29</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: square
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var it=0
</span>  <span class="starter-kit-paren">(</span>* it it<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
Here is a call_square(it=4), stuck in the middle of some prose.

Here is another 25^2=call_square(it=25).

   </pre>
</content>
</entry>
<entry>
   <title>longtable-label-and-attr-lines-on-code-block-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-06-29-longtable-label-and-attr-lines-on-code-block-results.html"/>
   <updated>2011-06-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-06-29-longtable-label-and-attr-lines-on-code-block-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** longtable label and attr lines on code block results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-06-29</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: faz
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :exports results
</span>  '<span class="starter-kit-paren">((</span>foo foo<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span>bar baz<span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+LABEL: Foo
#+name: faz
</span><span class="org-table">| foo | foo |</span>
<span class="org-table">| bar | baz |</span>

   </pre>
</content>
</entry>
<entry>
   <title>define-a-block-with-a-name-for-noweb-expansion</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-01-define-a-block-with-a-name-for-noweb-expansion.html"/>
   <updated>2011-07-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-01-define-a-block-with-a-name-for-noweb-expansion.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** define a block with a name for noweb expansion</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:tangle:</span>   <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:noweb:</span>    <span class="org-property-value">yes</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-01</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: simple(something="something")
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  something
<span class="org-block-end-line">#+end_src
</span>
another block including the first block
<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  &lt;&lt;simple<span class="starter-kit-paren">(</span>something=<span class="string">"something else"</span><span class="starter-kit-paren">)&gt;</span>&gt;
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>find-a-resource-by-global-id</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-01-find-a-resource-by-global-id.html"/>
   <updated>2011-07-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-01-find-a-resource-by-global-id.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** find a resource by global id</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-01</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var it=990f3218-6fce-44fb-bd0c-5f6076c0dadc
</span>  it
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 
: here it is
</span>
<span class="org-level-3">*** I'm the resource</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:ID:</span>       <span class="org-property-value">990f3218-6fce-44fb-bd0c-5f6076c0dadc</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-01</span>
<span class="org-special-keyword">    :END:</span>

here it is

   </pre>
</content>
</entry>
<entry>
   <title>data-alias-for-resname</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-05-data-alias-for-resname.html"/>
   <updated>2011-07-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-05-data-alias-for-resname.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** data alias for resname</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-05</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: blah
</span><span class="org-code">: blahcontent
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var it=blah
</span>  it
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: blahcontent
</span>
   </pre>
</content>
</entry>
<entry>
   <title>indexing-into-a-list-variable</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-06-indexing-into-a-list-variable.html"/>
   <updated>2011-07-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-06-indexing-into-a-list-variable.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** indexing into a list variable</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-06</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var lst='(0 1 2)
</span>  <span class="starter-kit-paren">(</span>first lst<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 0
</span>
or as a noweb reference

<span class="org-meta-line">#+name: external-list
</span>- 0
- 1
- 2

<span class="org-block-begin-line">#+begin_src sh :noweb yes
</span>  <span class="builtin">echo </span>&lt;&lt;external-list()[0]&gt;&gt;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 0
</span>
   </pre>
</content>
</entry>
<entry>
   <title>eval-never</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-10-eval-never.html"/>
   <updated>2011-07-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-10-eval-never.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** eval never</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-10</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :eval (if org-export-current-backend "never" "yes") :exports results
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"launch missles"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: launch missles
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-sbe-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-10-simple-sbe-example.html"/>
   <updated>2011-07-10:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-10-simple-sbe-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple sbe example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-10</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-table">|   1 |</span>
<span class="org-table">|   2 |</span>
<span class="org-table">|   3 |</span>
<span class="org-table">|   4 |</span>
<span class="org-table">|   5 |</span>
<span class="org-table">|   6 |</span>
<span class="org-table">| 3.5 |</span>
<span class="org-meta-line">#+TBLFM: @7$1='(sbe mean (lst @1..@6))
</span>
<span class="org-meta-line">#+name: mean
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var lst=()
</span>  <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>num <span class="starter-kit-paren">(</span>car lst<span class="starter-kit-paren">))</span> <span class="starter-kit-paren">(</span>nums <span class="starter-kit-paren">(</span>cdr lst<span class="starter-kit-paren">)))</span>
    <span class="starter-kit-paren">(</span>/ <span class="starter-kit-paren">(</span>float <span class="starter-kit-paren">(</span>+ num <span class="starter-kit-paren">(</span>apply #'+ nums<span class="starter-kit-paren">)))</span> <span class="starter-kit-paren">(</span>1+ <span class="starter-kit-paren">(</span>length nums<span class="starter-kit-paren">))))
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>exporting-a-ditaa-example</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-19-exporting-a-ditaa-example.html"/>
   <updated>2011-07-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-19-exporting-a-ditaa-example.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** exporting a ditaa example</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-19</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ditaa :file blue.png :cmdline -r
</span>/---------------\
|    test       |
|        {cBLU} |
\---------------/
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:blue.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>including-noweb-refs-without-last-newline</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-19-including-noweb-refs-without-last-newline.html"/>
   <updated>2011-07-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-19-including-noweb-refs-without-last-newline.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** including noweb refs w/o last newline</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :noweb yes
</span>  &lt;&lt;my-name&gt;&gt; |<span class="sh-escaped-newline">\
</span>  &lt;&lt;capitalize-name&gt;&gt;
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: my-name
</span><span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> <span class="string">"eric schulte"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: capitalize-name
</span><span class="org-block-begin-line">#+begin_src sh
</span>  sed <span class="string">'s/^e/E/;s/ s/ S/'
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>java-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-19-java-code-block.html"/>
   <updated>2011-07-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-19-java-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** java code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src java :classname myfirstjavaprog
</span>  <span class="keyword">class</span> <span class="type">myfirstjavaprog</span>
  {  
      <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">void</span> <span class="function-name">main</span>(<span class="type">String</span> <span class="variable-name">args</span>[])
      {
          System.out.println(<span class="string">"Hello World!")</span>;
      }
  }
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Hello World!
</span>
   </pre>
</content>
</entry>
<entry>
   <title>returning-file-names----interpreted-as-lists</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-21-returning-file-names----interpreted-as-lists.html"/>
   <updated>2011-07-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-21-returning-file-names----interpreted-as-lists.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** returning file names -- interpreted as lists</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-21</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results scalar
</span>  <span class="builtin">echo</span> <span class="string">"[[file:./cv.cls]]"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: [[file:./cv.cls]]
</span>
<span class="org-block-begin-line">#+begin_src sh :results raw scalar
</span>  <span class="builtin">echo</span> <span class="string">"[[file:./cv.cls]]"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:./cv.cls]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>expand-noweb-refs</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-25-expand-noweb-refs.html"/>
   <updated>2011-07-25:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-25-expand-noweb-refs.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** expand noweb refs</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-25</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: def-something
</span><span class="org-block-begin-line">#+begin_src sh
</span>  <span class="variable-name">SOMETHING=</span>nothing
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh
</span>  &lt;&lt;def-something&gt;&gt;
  <span class="builtin">echo</span> $<span class="variable-name">SOMETHING
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>non-defined-code-blocks-can-still-tangle</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-28-non-defined-code-blocks-can-still-tangle.html"/>
   <updated>2011-07-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-28-non-defined-code-blocks-can-still-tangle.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** non-defined code blocks can still tangle</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-28</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src text :tangle somewhere.txt
</span>  This will still tangle out to a file, and it opens in text mode, which
  may be nice.  
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>premature-truncation-of-emacs-lisp-results</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-07-28-premature-truncation-of-emacs-lisp-results.html"/>
   <updated>2011-07-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-07-28-premature-truncation-of-emacs-lisp-results.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** premature truncation of emacs-lisp results</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-07-28</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  '<span class="starter-kit-paren">(</span>nil nil nil nil<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: (nil nil nil nil)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>plot-results-with-org-plot</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-02-plot-results-with-org-plot.html"/>
   <updated>2011-08-02:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-02-plot-results-with-org-plot.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** plot results with org-plot</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-02</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: disk-usage
</span><span class="org-block-begin-line">#+begin_src sh :exports both
</span>  df
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+PLOT: title:"Disk Usage" ind:6 deps:(5) type:2d with:histograms set:"yrange [0:100]"
#+name: disk-usage
</span><span class="org-table">| Filesystem | 1K-blocks |     Used | Available | Use% | Mounted   | on |</span>
<span class="org-table">| /dev/sda6  |  28835836 |  8447712 |  18923344 |  31% | /         |    |</span>
<span class="org-table">| none       |   2997072 |      676 |   2996396 |   1% | /dev      |    |</span>
<span class="org-table">| none       |   3006056 |        0 |   3006056 |   0% | /dev/shm  |    |</span>
<span class="org-table">| none       |   3006056 |       96 |   3005960 |   1% | /var/run  |    |</span>
<span class="org-table">| none       |   3006056 |        0 |   3006056 |   0% | /var/lock |    |</span>
<span class="org-table">| /dev/sda7  | 144176824 | 72225604 |  64627420 |  53% | /home     |    |</span>

   </pre>
</content>
</entry>
<entry>
   <title>bug-with-undefined-function-copy-seq</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-05-bug-with-undefined-function-copy-seq.html"/>
   <updated>2011-08-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-05-bug-with-undefined-function-copy-seq.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** bug with undefined function copy-seq</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-05</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R :session :exports both
</span>  1:10
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>tangle-before-evaluating-a-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-05-tangle-before-evaluating-a-code-block.html"/>
   <updated>2011-08-05:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-05-tangle-before-evaluating-a-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** tangle before evaluating a code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-05</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src sh :var TANGLED=(org-babel-tangle) :tangle no
</span>  wc $<span class="variable-name">TANGLED
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2  2 11 it.sh
</span>
<span class="org-block-begin-line">#+begin_src sh :tangle it.sh
</span>  <span class="builtin">echo </span>TEST
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>replacing-a-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-19-replacing-a-table.html"/>
   <updated>2011-08-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-19-replacing-a-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** replacing a table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: this-is-the-table
</span><span class="org-table">| 1 | 4 | 7 |</span>
<span class="org-table">| 2 | 5 | 8 |</span>
<span class="org-table">| 3 | 6 | 9 |</span>

<span class="org-meta-line">#+name: this-is-the-table
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var table=this-is-the-table
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>cell<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>* cell 2<span class="starter-kit-paren">))</span> row<span class="starter-kit-paren">))</span> table<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>ruby-code-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-19-ruby-code-block.html"/>
   <updated>2011-08-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-19-ruby-code-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** ruby code block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ruby
</span>  1+2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-ditaa-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-19-simple-ditaa-block.html"/>
   <updated>2011-08-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-19-simple-ditaa-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple ditaa block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src ditaa :file work-flow.png
</span>    +-------+             +--------+
    |       |             |        |
    | Org   |------------&gt;| Tex    |
    |       |             |        |
    +-------+             +--------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:work-flow.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>space-around-exported-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-19-space-around-exported-code-blocks.html"/>
   <updated>2011-08-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-19-space-around-exported-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** space around exported code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-19</span>
<span class="org-special-keyword">   :END:</span>
try evaluating the following blocks, then removing their results with
M-x `org-babel-remove-result'

Verbiage to begin the paragraph
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo </span>eric
<span class="org-block-end-line">#+end_src
</span>and verbiage to end the same paragraph.

<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> 1
  <span class="builtin">echo </span>2
<span class="org-block-end-line">#+end_src
</span>
and verbiage to end the same paragraph.

   </pre>
</content>
</entry>
<entry>
   <title>updating-a-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-19-updating-a-table.html"/>
   <updated>2011-08-19:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-19-updating-a-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** updating a table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-19</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: this-is-another-table
</span><span class="org-table">| 0 | 0 | 0 |</span>
<span class="org-table">| 0 | 0 | 0 |</span>
<span class="org-table">| 0 | 0 | 0 |</span>

<span class="org-meta-line">#+name: this-is-another-table
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var table=this-is-another-table
</span>  <span class="starter-kit-paren">(</span>setf <span class="starter-kit-paren">(</span>nth 1 table<span class="starter-kit-paren">)</span> '<span class="starter-kit-paren">(</span>2 2 2<span class="starter-kit-paren">))
</span>  table
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inline-code-block-and-downstream-src-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-21-inline-code-block-and-downstream-src-blocks.html"/>
   <updated>2011-08-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-21-inline-code-block-and-downstream-src-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inline code block and downstream src blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   :DATE:     2011-08-21
<span class="org-special-keyword">   :END:</span>
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
something src_sh{echo eric}
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
<span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo </span>schulte
<span class="org-block-end-line">#+end_src
</span>EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE

<span class="org-level-3">*** with R</span>
<span class="org-special-keyword">    :PROPERTIES:</span>
    <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-21</span>
<span class="org-special-keyword">    :END:</span>
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
blah blah src_R[:results output]{cat(rnorm(2))}
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
<span class="org-block-begin-line">#+begin_src R :eval never :exports none
</span>  1+2
  a <span class="constant">&lt;- </span>b + c
  xyz
<span class="org-block-end-line">#+end_src
</span>DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD

   </pre>
</content>
</entry>
<entry>
   <title>shell-script-output-not-in-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-21-shell-script-output-not-in-table.html"/>
   <updated>2011-08-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-21-shell-script-output-not-in-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** shell script output not in table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-21</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src sh :results scalar
</span>  <span class="builtin">echo</span> 1
  <span class="builtin">echo</span> 2
  <span class="builtin">echo </span>3
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1
: 2
: 3
</span>
   </pre>
</content>
</entry>
<entry>
   <title>a-table-with-tags</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-23-a-table-with-tags.html"/>
   <updated>2011-08-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-23-a-table-with-tags.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** a table with tags</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-23</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+TBLNAME: sandbox           :noexport:
</span><span class="org-table">| 1 |         2 | 3 |</span>
<span class="org-table">| 4 | org-babel | 6 |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var table=sandbox
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"%S"</span> table<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: ((1 2 3) (4 "org-babel" 6))
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inheriting-the-file-property</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-23-inheriting-the-file-property.html"/>
   <updated>2011-08-23:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-23-inheriting-the-file-property.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inheriting the file property</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:FILE:</span> <span class="org-property-value">something.png</span>
   :DATE:     2011-08-23
<span class="org-special-keyword">   :END:</span>

<span class="org-block-begin-line">#+begin_src ditaa
</span>   +-----------------------------+
   |                             |
   |    +-----+                  |
   |    |     |   +---------+    |
   |    |     |   |         |    |
   |    +-----+   |         |    |
   |              |         |    |
   |   file       |         |    |
   | inheritance  +---------+    |
   |                             |
   +-----------------------------+
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-link">[[file:something.png]]</span>

   </pre>
</content>
</entry>
<entry>
   <title>two-blocks-and-a-table</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-28-two-blocks-and-a-table.html"/>
   <updated>2011-08-28:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-28-two-blocks-and-a-table.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** two blocks and a table</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-28</span>
<span class="org-special-keyword">   :END:</span>

<span class="org-meta-line">#+name: stuff
</span><span class="org-block-begin-line">#+begin_src sh
</span>  <span class="builtin">echo</span> 1
  <span class="builtin">echo</span> 2
  <span class="builtin">echo </span>3
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: last-of-stuff
</span><span class="org-block-begin-line">#+begin_src sh :var input=stuff
</span>  <span class="builtin">echo</span> <span class="string">"$input" </span>|tail -1
<span class="org-block-end-line">#+end_src
</span>
<span class="org-table">| one |</span>
<span class="org-table">| two |</span>
<span class="org-table">| 3   |</span>
<span class="org-meta-line">#+TBLFM: @3$1='(sbe last-of-stuff)
</span>
   </pre>
</content>
</entry>
<entry>
   <title>convert-results-to-all-string</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-29-convert-results-to-all-string.html"/>
   <updated>2011-08-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-29-convert-results-to-all-string.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** convert results to all string</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-29</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: hetero-table
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  '<span class="starter-kit-paren">((</span>1 2 3 4<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="string">"a"</span> <span class="string">"b"</span> <span class="string">"c"</span> <span class="string">"d"</span><span class="starter-kit-paren">))
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name: all-to-string
</span><span class="org-block-begin-line">#+begin_src emacs-lisp :var tbl='()
</span>  <span class="starter-kit-paren">(</span><span class="keyword">defun</span> <span class="function-name">all-to-string</span> <span class="starter-kit-paren">(</span>tbl<span class="starter-kit-paren">)</span>
    <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>listp tbl<span class="starter-kit-paren">)</span>
        <span class="starter-kit-paren">(</span>mapcar #'all-to-string tbl<span class="starter-kit-paren">)</span>
      <span class="starter-kit-paren">(</span><span class="keyword">if</span> <span class="starter-kit-paren">(</span>stringp tbl<span class="starter-kit-paren">)</span>
          tbl
        <span class="starter-kit-paren">(</span>format <span class="string">"%s"</span> tbl<span class="starter-kit-paren">))))</span>
  <span class="starter-kit-paren">(</span>all-to-string tbl<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src emacs-lisp :var tbl=hetero-table
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>cell<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>stringp cell<span class="starter-kit-paren">))</span> row<span class="starter-kit-paren">))</span> tbl<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| nil | nil | nil | nil |</span>
<span class="org-table">| t   | t   | t   | t   |</span>

<span class="org-block-begin-line">#+begin_src emacs-lisp :var tbl=all-to-string(hetero-table)
</span>  <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>row<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>mapcar <span class="starter-kit-paren">(</span><span class="keyword">lambda</span> <span class="starter-kit-paren">(</span>cell<span class="starter-kit-paren">)</span> <span class="starter-kit-paren">(</span>stringp cell<span class="starter-kit-paren">))</span> row<span class="starter-kit-paren">))</span> tbl<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">| t | t | t | t |</span>
<span class="org-table">| t | t | t | t |</span>

   </pre>
</content>
</entry>
<entry>
   <title>simple-short-r-block</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-08-29-simple-short-r-block.html"/>
   <updated>2011-08-29:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-08-29-simple-short-r-block.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple short R block</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-08-29</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+BEGIN_SRC R
</span>c(1,23,54,5)
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+name:
</span><span class="org-table">|  1 |</span>
<span class="org-table">| 23 |</span>
<span class="org-table">| 54 |</span>
<span class="org-table">|  5 |</span>

   </pre>
</content>
</entry>
<entry>
   <title>simple-gnuplot-plotting-of-org-mode-tables</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-01-simple-gnuplot-plotting-of-org-mode-tables.html"/>
   <updated>2011-09-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-01-simple-gnuplot-plotting-of-org-mode-tables.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple gnuplot plotting of Org-mode tables</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-01</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+tblname: gnuplot-testing
</span><span class="org-table">| x |  y |</span>
<span class="org-table">|---+----|</span>
<span class="org-table">| 1 |  2 |</span>
<span class="org-table">| 2 |  4 |</span>
<span class="org-table">| 3 |  6 |</span>
<span class="org-table">| 4 |  8 |</span>
<span class="org-table">| 5 | 10 |</span>
<span class="org-table">| 6 | 12 |</span>
<span class="org-table">| 7 | 14 |</span>
<span class="org-table">| 8 | 16 |</span>

<span class="org-block-begin-line">#+begin_src gnuplot :var data=gnuplot-testing :file output.eps
</span><span class="constant">set</span> term postscript
<span class="constant">set</span> <span class="type">title</span> "test"
<span class="constant">set</span> auto x
<span class="constant">set</span> style data histogram
<span class="constant">set</span> style fill solid border -1
<span class="constant">set</span> boxwidth 0.9
<span class="keyword">plot</span> <span class="variable-name">data</span> <span class="type">using </span>2:xtic(1)
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-indexing</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-01-simple-indexing.html"/>
   <updated>2011-09-01:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-01-simple-indexing.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple indexing</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-01</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: list-o-numbers
</span><span class="org-table">| 1 | 2 | 3 |</span>
<span class="org-table">| 4 | 5 | 6 |</span>
<span class="org-table">| 7 | 8 | 9 |</span>

<span class="org-block-begin-line">#+begin_src sh :var column=list-o-numbers[,0]
</span>  <span class="builtin">echo</span> $<span class="variable-name">column
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 1 4 7
</span>
   </pre>
</content>
</entry>
<entry>
   <title>demarcation-of-indented-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-04-demarcation-of-indented-blocks.html"/>
   <updated>2011-09-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-04-demarcation-of-indented-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** demarcation of indented blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-04</span>
<span class="org-special-keyword">   :END:</span>
Demarcating a block with the point part-way in a line should indent
the remainder of the line in the second block.
<span class="org-block-begin-line">    #+begin_src sh
</span>      <span class="builtin">echo</span> 1
      <span class="builtin">echo</span> 2
      <span class="builtin">echo</span> 3
      <span class="builtin">echo </span>4
<span class="org-block-end-line">    #+end_src
</span>
becomes

<span class="org-block-begin-line">    #+begin_src sh :results silent :session something
</span>      <span class="builtin">echo</span> 1
      <span class="builtin">echo</span> 2
      <span class="builtin">echo
</span><span class="org-block-end-line">    #+end_src
</span>    
<span class="org-block-begin-line">    #+begin_src sh :results silent :session something
</span>           3
      <span class="builtin">echo </span>4
<span class="org-block-end-line">    #+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>returning-file-type-to-inline-call-line</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-04-returning-file-type-to-inline-call-line.html"/>
   <updated>2011-09-04:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-04-returning-file-type-to-inline-call-line.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** returning file type to inline call line</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-04</span>
<span class="org-special-keyword">   :END:</span>
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec
hendrerit tempor tellus. Donec pretium posuere tellus. Proin quam
nisl, tincidunt et, mattis eget, convallis nec, purus. Cum sociis
natoque penatibus et magnis dis parturient montes, nascetur ridiculus
mus. Nulla posuere. Donec vitae dolor. Nullam tristique diam non
turpis. call_nothing_to_something()[:results file] <span class="org-link">[[file:something.txt]]</span> Cras placerat
accumsan nulla. Nullam rutrum. Nam vestibulum accumsan nisl.

<span class="org-meta-line">#+name: nothing_to_something
</span><span class="org-block-begin-line">#+begin_src sh :file something.txt
</span>  <span class="builtin">echo </span>nothing
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>leading-commas-in-code-blocks</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-06-leading-commas-in-code-blocks.html"/>
   <updated>2011-09-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-06-leading-commas-in-code-blocks.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** leading commas in code blocks</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-06</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src r :exports code
</span>  a <span class="constant">&lt;- </span>c(1
         , 2
         , 3)
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src org :exports code
</span>  ,this one will have commas removed
  ,#+begin_src R
  ,  a &lt;- c(1
  ,         , 2
  ,         , 3)
  ,#+end_src
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>silent-results-in-org-but-not-in-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-06-silent-results-in-org-but-not-in-export.html"/>
   <updated>2011-09-06:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-06-silent-results-in-org-but-not-in-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** silent results in org but not in export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-06</span>
<span class="org-special-keyword">   :END:</span>
The results of the following code block will not be inserted during
interactive evaluation but will during export.

<span class="org-block-begin-line">#+begin_src sh :results (if org-current-export-file "replace" "silent") :exports both
</span>  <span class="builtin">echo</span>  <span class="string">"I want to see this in HTML/PDF, but not in Org"
</span><span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>removing-result-with-a-silent-header-argument</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-07-removing-result-with-a-silent-header-argument.html"/>
   <updated>2011-09-07:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-07-removing-result-with-a-silent-header-argument.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** removing result with a silent header argument</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-07</span>
<span class="org-special-keyword">   :END:</span>
evaluating the following code block will remove the related result.

<span class="org-block-begin-line">#+begin_src sh :results silent
</span>  date +%Y-%m-%d
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: 2011-09-07
</span>
   </pre>
</content>
</entry>
<entry>
   <title>header-arguments-on-call-lines</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-11-header-arguments-on-call-lines.html"/>
   <updated>2011-09-11:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-11-header-arguments-on-call-lines.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** header arguments on call lines</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-11</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+name: simple-example
</span><span class="org-block-begin-line">#+begin_src emacs-lisp
</span>  <span class="string">"the result"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+call: simple-example()
</span>
<span class="org-meta-line">#+name: simple-example()
</span><span class="org-code">: the result
</span>
<span class="org-meta-line">#+call: simple-example() :results raw
</span>
<span class="org-meta-line">#+name: simple-example()
</span>the result

   </pre>
</content>
</entry>
<entry>
   <title>should-this-throw-an-error-for-no-variable-definition</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-15-should-this-throw-an-error-for-no-variable-definition.html"/>
   <updated>2011-09-15:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-15-should-this-throw-an-error-for-no-variable-definition.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** should this throw an error for no variable definition</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-15</span>
<span class="org-special-keyword">   :END:</span>
Evaluating this block should raise an error that there are
uninitialized variables.

<span class="org-meta-line">#+name: add-column-in-table(table="", column="", something, type="", else, nullability)
</span><span class="org-block-begin-line">#+begin_src sql
</span><span class="comment">-- add column `$column' (if column does not exist yet)
</span>IF NOT EXISTS (SELECT *
               FROM INFORMATION_SCHEMA.COLUMNS
               WHERE TABLE_NAME = <span class="string">'$table'</span>
               AND COLUMN_NAME = <span class="string">'$column')</span>
BEGIN
    ALTER TABLE $table
    ADD $column $type $nullability
END
<span class="org-block-end-line">#+end_src
</span>
   </pre>
</content>
</entry>
<entry>
   <title>simple-r-session</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2011-09-21-simple-r-session.html"/>
   <updated>2011-09-21:00:00:00-06:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2011-09-21-simple-r-session.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** simple R session</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2011-09-21</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-block-begin-line">#+begin_src R :session R
</span>  paste(<span class="string">"Yep!")</span>
<span class="org-block-end-line">#+end_src
</span>
<span class="org-meta-line">#+name:
</span><span class="org-code">: Yep!
</span>
   </pre>
</content>
</entry>
<entry>
   <title>code-block-export-template</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2012-01-14-code-block-export-template.html"/>
   <updated>2012-01-14:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2012-01-14-code-block-export-template.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** code block export template</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2012-01-14</span>
<span class="org-special-keyword">   :END:</span>

The <span class="org-code">=org-babel-exp-code-template=</span> (see below for its documentation)
variable may be customized to control which information from code
blocks is exported.

- Example code block
<span class="org-meta-line">  #+Name: foo</span>
<span class="org-block-begin-line">  #+BEGIN_SRC sh :bar baz
</span>    <span class="builtin">echo </span>qux
<span class="org-block-end-line">  #+END_SRC
</span>
- Evaluate this block to export (shows the export of the name).
<span class="org-meta-line">  #+Name: do-export-name</span>
<span class="org-block-begin-line">  #+BEGIN_SRC emacs-lisp :results silent
</span>    <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>org-babel-exp-code-template
           <span class="string">"\n=%name=:\n#+BEGIN_SRC %lang%flags\n%body\n#+END_SRC"</span><span class="starter-kit-paren">))</span>
      <span class="starter-kit-paren">(</span>org-export-as-html nil<span class="starter-kit-paren">))
</span><span class="org-block-end-line">  #+END_SRC
</span>
- Evaluate this block to export (shows the export of header arguments).
<span class="org-meta-line">  #+Name: do-export-header-arguments</span>
<span class="org-block-begin-line">  #+BEGIN_SRC emacs-lisp :results silent
</span>    <span class="starter-kit-paren">(</span><span class="keyword">let</span> <span class="starter-kit-paren">((</span>org-babel-exp-code-template
           <span class="string">"Header arguments for =%name=.
    | header  | value    |
    |---------+----------|
    | bar     | %bar     |
    | results | %results |\n#+BEGIN_SRC %lang%flags\n%body\n#+END_SRC"</span><span class="starter-kit-paren">))</span>
      <span class="starter-kit-paren">(</span>org-export-as-html nil<span class="starter-kit-paren">))
</span><span class="org-block-end-line">  #+END_SRC
</span>
<span class="org-code">: ,----[org-babel-exp-code-template]
: | org-babel-exp-code-template is a variable defined in `ob-exp.el'.
: | Its value is "#+BEGIN_SRC %lang%flags\n%body\n#+END_SRC"
: | 
: | Documentation:
: | Template used to export the body of code blocks.
: | This template may be customized to include additional information
: | such as the code block name, or the values of particular header
: | arguments.  The template is filled out using `org-fill-template',
: | and the following %keys may be used.
: | 
: |  lang ------ the language of the code block
: |  name ------ the name of the code block
: |  body ------ the body of the code block
: |  flags ----- the flags passed to the code block
: | 
: | In addition to the keys mentioned above, every header argument
: | defined for the code block may be used as a key and will be
: | replaced with its value.
: | 
: | You can customize this variable.
: `----
</span>
   </pre>
</content>
</entry>
<entry>
   <title>inhibit-some-call-line-evaluation-on-export</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2012-01-20-inhibit-some-call-line-evaluation-on-export.html"/>
   <updated>2012-01-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2012-01-20-inhibit-some-call-line-evaluation-on-export.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** inhibit some call line evaluation on export</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2012-01-20</span>
<span class="org-special-keyword">   :END:</span>
A buffer in which we want <span class="org-code">=foo=</span> to be run when called interactively
from <span class="italic">/any/</span> call line, but to only be run by a single call line on
export.  Ensure this works by executing this buffer to html while
tracking <span class="org-code">=foo-called.times=</span> with <span class="org-code">=tail -f /tmp/foo-called.times=</span>.

<span class="org-meta-line">#+NAME: foo
</span><span class="org-block-begin-line">#+BEGIN_SRC sh :var id="foo"
</span>  <span class="builtin">echo</span> <span class="string">"called by $id at $(date +%s.%N)" </span>|tee -a /tmp/foo-called.times
<span class="org-block-end-line">#+END_SRC
</span>
This will <span class="bold">*not*</span> be run on export.
<span class="org-meta-line">#+call: foo[:eval no-export]("bar")
</span>
This <span class="bold">*will*</span> be run on export.
<span class="org-meta-line">#+call: foo("baz")
</span>
   </pre>
</content>
</entry>
<entry>
   <title>name-src_emacs-lisp{org-current-export-file}</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2012-01-20-name-src_emacs-lisp{org-current-export-file}.html"/>
   <updated>2012-01-20:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2012-01-20-name-src_emacs-lisp{org-current-export-file}.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** name src_emacs-lisp{org-current-export-file}</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2012-01-20</span>
<span class="org-special-keyword">   :END:</span>
Fanciness with running code in header arguments.

One block to tangle.
<span class="org-block-begin-line">#+BEGIN_SRC emacs-lisp :tangle yes
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"I am tangled"</span><span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+END_SRC
</span>
One block to export.
<span class="org-block-begin-line">#+BEGIN_SRC emacs-lisp :exports results :var foo=(org-babel-tangle)
</span>  <span class="starter-kit-paren">(</span>message <span class="string">"I just tangled %S during export"</span> foo<span class="starter-kit-paren">)
</span><span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
<entry>
   <title>issues-with-call-lines-result-insertion</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2012-01-24-issues-with-call-lines-result-insertion.html"/>
   <updated>2012-01-24:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2012-01-24-issues-with-call-lines-result-insertion.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** issues with call lines result insertion</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:session:</span>  <span class="org-property-value"><span class="bold">*R-babel*</span></span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2012-01-24</span>
<span class="org-special-keyword">   :END:</span>
<span class="org-meta-line">#+NAME: foo-for-R
#+HEADER: :var a="a1.png"
</span><span class="org-block-begin-line">#+BEGIN_SRC R :results output silent
</span>  cat(<span class="string">"in foo-for-R block\n"</span>)
  <span class="function-name">cat.a</span> <span class="constant">&lt;-</span> <span class="keyword">function</span>() { cat(a,<span class="string">"\n"</span>,sep=<span class="string">"")</span> }
  cat.a()
<span class="org-block-end-line">#+END_SRC
</span>
<span class="org-meta-line">#+NAME: bar-for-R
</span><span class="org-block-begin-line">#+begin_src R :results output raw replace :exports none
</span> cat.a()
<span class="org-block-end-line">#+end_src
</span>
Because there are three instances of the <span class="org-code">=bar-for-R()=</span> call line, all
of their results are inserted into the same place in the file,
specifically the location of the <span class="org-code">=#+Results: bar-for-R()=</span> line.  This
can be very confusing if you are expected each <span class="org-code">=bar-for-R()=</span> line to
generate it's own results.

Should have all a1 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a1.png")
#+call: bar-for-R()
</span>
Should have all a2 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a2.png")
#+call: bar-for-R()
</span>
Should have all a3 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a3.png")
#+call: bar-for-R()
</span>
The solution demonstrated below is to add a nothing header argument to
each bar-for-R to make it unique.  Notice that the three <span class="org-code">=foo=</span> lines
below don't include results, as their results are inserted at the
identical foo lines above.

Should have all a1 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a1.png")
#+call: bar-for-R[id=1]()
</span>
Should have all a2 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a2.png")
#+call: bar-for-R[id=2]()
</span>
Should have all a3 stuff
<span class="org-meta-line">#+call: foo-for-R(a="a3.png")
#+call: bar-for-R[id=3]()
</span>
   </pre>
</content>
</entry>
<entry>
   <title>noweb-insertion-edge-cases</title>
   <link href="http://eschulte.github.com/org-scraps/scraps/2012-01-24-noweb-insertion-edge-cases.html"/>
   <updated>2012-01-24:00:00:00-07:00</updated>
   <id>http://eschulte.github.com/org-scraps/scraps/2012-01-24-noweb-insertion-edge-cases.html</id>
   <content type="html">
   <pre>
<span class="org-level-2">** noweb insertion edge cases</span>
<span class="org-special-keyword">   :PROPERTIES:</span>
   <span class="org-special-keyword">:DATE:</span>     <span class="org-property-value">2012-01-24</span>
<span class="org-special-keyword">   :END:</span>
The <span class="org-code">=cat=</span> line below is dangerously close to a noweb reference.  The
space after test.org keeps it from being interpreted as a noweb
reference.

<span class="org-block-begin-line">#+begin_src sh :tangle test.out :noweb yes
</span>  &lt;&lt;task1&gt;&gt;
  &lt;&lt;b&gt;&gt;
  cat &lt;&lt;test.org &gt;&gt; test.out2
<span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+begin_src sh :noweb-ref task1
</span> <span class="builtin">echo</span> <span class="string">"hello world"
</span><span class="org-block-end-line">#+end_src
</span>
<span class="org-block-begin-line">#+BEGIN_SRC sh :noweb-ref b
</span> <span class="builtin">echo</span> <span class="string">"b"
</span><span class="org-block-end-line">#+END_SRC
</span>
   </pre>
</content>
</entry>
</feed>
